{
	"id": "d998b84de4c56a2efb2a88c6716d9c26",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/npc_credits/npcNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract NPCNFT is ERC721, Ownable {\r\n    // NFT credit types mapping\r\n    mapping(uint256 => string[]) private _creditTypes;\r\n    // NFT credit supply limit mapping\r\n    mapping(uint256 => mapping(string => uint256)) private _creditSupplyLimits;\r\n\r\n    // Variable to track the current tokenId\r\n    uint256 private _currentTokenId;\r\n\r\n    event CreditTypesUpdated(uint256 indexed tokenId, string[] creditTypes);\r\n    event CreditSupplyLimitUpdated(uint256 indexed tokenId, string creditType, uint256 supplyLimit);\r\n\r\n    constructor() ERC721(\"NPCNFT\", \"NPC\") Ownable(msg.sender) {\r\n        _currentTokenId = 0; // Initialize the tokenId counter\r\n    }\r\n\r\n    /**\r\n     * @dev Mint a new NFT with credit types and supply limits.\r\n     * @param to The address to mint the NFT to.\r\n     * @param creditTypes The types of credits associated with the NFT.\r\n     * @param creditSupplyLimits The supply limits for each credit type.\r\n     */\r\n    function mint(\r\n        address to,\r\n        string[] memory creditTypes,\r\n        uint256[] memory creditSupplyLimits\r\n    ) public onlyOwner {\r\n        require(creditTypes.length == creditSupplyLimits.length, \"Credit types and supply limits length mismatch\");\r\n\r\n        uint256 tokenId = _currentTokenId + 1; // Increment the tokenId counter\r\n        _currentTokenId = tokenId; // Update current token ID\r\n\r\n        _mint(to, tokenId);\r\n\r\n        // Manually copy each element\r\n        for (uint256 i = 0; i < creditTypes.length; i++) {\r\n            _creditTypes[tokenId].push(creditTypes[i]);\r\n            _creditSupplyLimits[tokenId][creditTypes[i]] = creditSupplyLimits[i];\r\n        }\r\n\r\n        emit CreditTypesUpdated(tokenId, creditTypes);\r\n        for (uint256 i = 0; i < creditTypes.length; i++) {\r\n            emit CreditSupplyLimitUpdated(tokenId, creditTypes[i], creditSupplyLimits[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Get the credit types associated with an NFT.\r\n     * @param tokenId The ID of the NFT.\r\n     * @return The credit types associated with the NFT.\r\n     */\r\n    function getCreditTypes(uint256 tokenId) external view returns (string[] memory) {\r\n        return _creditTypes[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Get the supply limit for a specific credit type of an NFT.\r\n     * @param tokenId The ID of the NFT.\r\n     * @param creditType The credit type to get the supply limit for.\r\n     * @return The supply limit for the credit type.\r\n     */\r\n    function getCreditSupplyLimit(uint256 tokenId, string calldata creditType) external view returns (uint256) {\r\n        return _creditSupplyLimits[tokenId][creditType];\r\n    }\r\n\r\n    /**\r\n     * @dev Set the credit types and supply limits for an NFT.\r\n     * @param tokenId The ID of the NFT.\r\n     * @param creditTypes The new types of credits associated with the NFT.\r\n     * @param creditSupplyLimits The new supply limits for each credit type.\r\n     */\r\n    function setCreditTypesAndLimits(\r\n        uint256 tokenId,\r\n        string[] calldata creditTypes,\r\n        uint256[] calldata creditSupplyLimits\r\n    ) external onlyOwner {\r\n        require(creditTypes.length == creditSupplyLimits.length, \"Credit types and supply limits length mismatch\");\r\n\r\n        // Manually copy each element\r\n        delete _creditTypes[tokenId]; // Clear existing credit types\r\n        for (uint256 i = 0; i < creditTypes.length; i++) {\r\n            _creditTypes[tokenId].push(creditTypes[i]);\r\n            _creditSupplyLimits[tokenId][creditTypes[i]] = creditSupplyLimits[i];\r\n        }\r\n\r\n        emit CreditTypesUpdated(tokenId, creditTypes);\r\n        for (uint256 i = 0; i < creditTypes.length; i++) {\r\n            emit CreditSupplyLimitUpdated(tokenId, creditTypes[i], creditSupplyLimits[i]);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC6 0xE6 0xBC 0xE SLOAD PUSH1 0xD NOT PUSH4 0xCF86837A TLOAD LOG1 PUSH17 0xA786B479A6592B700803BAAFC3363D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC6 0xE6 0xBC 0xE SLOAD PUSH1 0xD NOT PUSH4 0xCF86837A TLOAD LOG1 PUSH17 0xA786B479A6592B700803BAAFC3363D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/npc_credits/npcNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/npc_credits/npcNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD67EC5F0269E00933469FD8BAC804E50CCD0F45F359861BFB31C SWAP12 SWAP14 PUSH13 0x7AB464736F6C63430008190033 ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD67EC5F0269E00933469FD8BAC804E50CCD0F45F359861BFB31C SWAP12 SWAP14 PUSH13 0x7AB464736F6C63430008190033 ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/npc_credits/npcNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/npc_credits/npcNFT.sol": {
				"NPCNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "creditType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supplyLimit",
									"type": "uint256"
								}
							],
							"name": "CreditSupplyLimitUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "creditTypes",
									"type": "string[]"
								}
							],
							"name": "CreditTypesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "creditType",
									"type": "string"
								}
							],
							"name": "getCreditSupplyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getCreditTypes",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "creditTypes",
									"type": "string[]"
								},
								{
									"internalType": "uint256[]",
									"name": "creditSupplyLimits",
									"type": "uint256[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "creditTypes",
									"type": "string[]"
								},
								{
									"internalType": "uint256[]",
									"name": "creditSupplyLimits",
									"type": "uint256[]"
								}
							],
							"name": "setCreditTypesAndLimits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"getCreditSupplyLimit(uint256,string)": {
								"details": "Get the supply limit for a specific credit type of an NFT.",
								"params": {
									"creditType": "The credit type to get the supply limit for.",
									"tokenId": "The ID of the NFT."
								},
								"returns": {
									"_0": "The supply limit for the credit type."
								}
							},
							"getCreditTypes(uint256)": {
								"details": "Get the credit types associated with an NFT.",
								"params": {
									"tokenId": "The ID of the NFT."
								},
								"returns": {
									"_0": "The credit types associated with the NFT."
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"mint(address,string[],uint256[])": {
								"details": "Mint a new NFT with credit types and supply limits.",
								"params": {
									"creditSupplyLimits": "The supply limits for each credit type.",
									"creditTypes": "The types of credits associated with the NFT.",
									"to": "The address to mint the NFT to."
								}
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"setCreditTypesAndLimits(uint256,string[],uint256[])": {
								"details": "Set the credit types and supply limits for an NFT.",
								"params": {
									"creditSupplyLimits": "The new supply limits for each credit type.",
									"creditTypes": "The new types of credits associated with the NFT.",
									"tokenId": "The ID of the NFT."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/npc_credits/npcNFT.sol\":175:3914  contract NPCNFT is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/npc_credits/npcNFT.sol\":697:827  constructor() ERC721(\"NPCNFT\", \"NPC\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/npc_credits/npcNFT.sol\":743:753  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd2, 0x139410d39195)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4e5043)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2847:2898   */\n  mstore\n    /* \"#utility.yul\":2820:2838   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/npc_credits/npcNFT.sol\":784:785  0 */\n  0x00\n    /* \"contracts/npc_credits/npcNFT.sol\":766:781  _currentTokenId */\n  0x09\n    /* \"contracts/npc_credits/npcNFT.sol\":766:785  _currentTokenId = 0 */\n  sstore\n    /* \"contracts/npc_credits/npcNFT.sol\":175:3914  contract NPCNFT is ERC721, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_31:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_32:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_30:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_7:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1555:1652   */\n  tag_39\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_41)\n    /* \"#utility.yul\":1776:2439   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_46:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_49:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2701:2904   */\ntag_23:\n    /* \"contracts/npc_credits/npcNFT.sol\":175:3914  contract NPCNFT is ERC721, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/npc_credits/npcNFT.sol\":175:3914  contract NPCNFT is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7f177d31\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xaf77af04\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xaf77af04\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x7f177d31\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8a605436\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x42842e0e\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x736dea81\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1464:1515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1452:1454   */\n      0x20\n        /* \"#utility.yul\":1437:1455   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_42\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_42\n      tag_51\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_36\n      tag_54\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":2633:2658   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2621:2623   */\n      0x20\n        /* \"#utility.yul\":2606:2624   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":2487:2664   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_42\n      tag_64\n      jump\t// in\n        /* \"contracts/npc_credits/npcNFT.sol\":2610:2783  function getCreditSupplyLimit(uint256 tokenId, string calldata creditType) external view returns (uint256) {... */\n    tag_12:\n      tag_57\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"contracts/npc_credits/npcNFT.sol\":2217:2345  function getCreditTypes(uint256 tokenId) external view returns (string[] memory) {... */\n    tag_13:\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n        /* \"contracts/npc_credits/npcNFT.sol\":1115:2033  function mint(... */\n    tag_14:\n      tag_42\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_32\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_42\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"contracts/npc_credits/npcNFT.sol\":3070:3911  function setCreditTypesAndLimits(... */\n    tag_18:\n      tag_42\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_19:\n      tag_42\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_20:\n      tag_32\n      tag_98\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_26\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_42\n      tag_107\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_110\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_112\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_122:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10524:10539   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10506:10540   */\n      mstore\n        /* \"#utility.yul\":10556:10574   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10549:10583   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10619:10634   */\n      dup3\n      and\n        /* \"#utility.yul\":10599:10617   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10592:10635   */\n      mstore\n        /* \"#utility.yul\":10441:10459   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_133\n        /* \"#utility.yul\":10266:10641   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_145:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/npc_credits/npcNFT.sol\":2610:2783  function getCreditSupplyLimit(uint256 tokenId, string calldata creditType) external view returns (uint256) {... */\n    tag_68:\n        /* \"contracts/npc_credits/npcNFT.sol\":2708:2715  uint256 */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":2735:2763  _creditSupplyLimits[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/npc_credits/npcNFT.sol\":2735:2754  _creditSupplyLimits */\n      0x08\n        /* \"contracts/npc_credits/npcNFT.sol\":2735:2763  _creditSupplyLimits[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":2735:2775  _creditSupplyLimits[tokenId][creditType] */\n      swap1\n      mload\n      tag_154\n      swap1\n        /* \"contracts/npc_credits/npcNFT.sol\":2764:2774  creditType */\n      dup6\n      swap1\n      dup6\n      swap1\n        /* \"contracts/npc_credits/npcNFT.sol\":2735:2775  _creditSupplyLimits[tokenId][creditType] */\n      tag_155\n      jump\t// in\n    tag_154:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/npc_credits/npcNFT.sol\":2728:2775  return _creditSupplyLimits[tokenId][creditType] */\n      swap1\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":2610:2783  function getCreditSupplyLimit(uint256 tokenId, string calldata creditType) external view returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/npc_credits/npcNFT.sol\":2217:2345  function getCreditTypes(uint256 tokenId) external view returns (string[] memory) {... */\n    tag_72:\n        /* \"contracts/npc_credits/npcNFT.sol\":2281:2296  string[] memory */\n      0x60\n        /* \"contracts/npc_credits/npcNFT.sol\":2316:2328  _creditTypes */\n      0x07\n        /* \"contracts/npc_credits/npcNFT.sol\":2316:2337  _creditTypes[tokenId] */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":2329:2336  tokenId */\n      dup4\n        /* \"contracts/npc_credits/npcNFT.sol\":2316:2337  _creditTypes[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":2309:2337  return _creditTypes[tokenId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_157:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_158\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_116\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_116\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_157)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":2217:2345  function getCreditTypes(uint256 tokenId) external view returns (string[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/npc_credits/npcNFT.sol\":1115:2033  function mint(... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/npc_credits/npcNFT.sol\":1299:1317  creditSupplyLimits */\n      dup1\n        /* \"contracts/npc_credits/npcNFT.sol\":1299:1324  creditSupplyLimits.length */\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1277:1288  creditTypes */\n      dup3\n        /* \"contracts/npc_credits/npcNFT.sol\":1277:1295  creditTypes.length */\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1277:1324  creditTypes.length == creditSupplyLimits.length */\n      eq\n        /* \"contracts/npc_credits/npcNFT.sol\":1269:1375  require(creditTypes.length == creditSupplyLimits.length, \"Credit types and supply limits length mismatch\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_170\n      jump\t// in\n    tag_168:\n        /* \"contracts/npc_credits/npcNFT.sol\":1388:1403  uint256 tokenId */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":1406:1421  _currentTokenId */\n      sload(0x09)\n        /* \"contracts/npc_credits/npcNFT.sol\":1424:1425  1 */\n      0x01\n        /* \"contracts/npc_credits/npcNFT.sol\":1406:1425  _currentTokenId + 1 */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/npc_credits/npcNFT.sol\":1469:1484  _currentTokenId */\n      0x09\n        /* \"contracts/npc_credits/npcNFT.sol\":1469:1494  _currentTokenId = tokenId */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/npc_credits/npcNFT.sol\":1388:1425  uint256 tokenId = _currentTokenId + 1 */\n      swap1\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":1534:1552  _mint(to, tokenId) */\n      tag_173\n        /* \"contracts/npc_credits/npcNFT.sol\":1540:1542  to */\n      dup5\n        /* \"contracts/npc_credits/npcNFT.sol\":1388:1425  uint256 tokenId = _currentTokenId + 1 */\n      dup3\n        /* \"contracts/npc_credits/npcNFT.sol\":1534:1539  _mint */\n      tag_174\n        /* \"contracts/npc_credits/npcNFT.sol\":1534:1552  _mint(to, tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/npc_credits/npcNFT.sol\":1609:1618  uint256 i */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":1604:1805  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n    tag_175:\n        /* \"contracts/npc_credits/npcNFT.sol\":1628:1639  creditTypes */\n      dup4\n        /* \"contracts/npc_credits/npcNFT.sol\":1628:1646  creditTypes.length */\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1624:1625  i */\n      dup2\n        /* \"contracts/npc_credits/npcNFT.sol\":1624:1646  i < creditTypes.length */\n      lt\n        /* \"contracts/npc_credits/npcNFT.sol\":1604:1805  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/npc_credits/npcNFT.sol\":1668:1689  _creditTypes[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/npc_credits/npcNFT.sol\":1668:1680  _creditTypes */\n      0x07\n        /* \"contracts/npc_credits/npcNFT.sol\":1668:1689  _creditTypes[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":1695:1709  creditTypes[i] */\n      dup5\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1695:1706  creditTypes */\n      dup6\n      swap1\n        /* \"contracts/npc_credits/npcNFT.sol\":1707:1708  i */\n      dup4\n      swap1\n        /* \"contracts/npc_credits/npcNFT.sol\":1695:1709  creditTypes[i] */\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1668:1710  _creditTypes[tokenId].push(creditTypes[i]) */\n      dup3\n      sload\n      0x01\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      add\n      swap1\n      tag_182\n      swap1\n      dup3\n      tag_183\n      jump\t// in\n    tag_182:\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":1772:1790  creditSupplyLimits */\n      dup3\n        /* \"contracts/npc_credits/npcNFT.sol\":1791:1792  i */\n      dup2\n        /* \"contracts/npc_credits/npcNFT.sol\":1772:1793  creditSupplyLimits[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_180\n      jump\t// in\n    tag_185:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1725:1744  _creditSupplyLimits */\n      0x08\n        /* \"contracts/npc_credits/npcNFT.sol\":1725:1753  _creditSupplyLimits[tokenId] */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":1745:1752  tokenId */\n      dup5\n        /* \"contracts/npc_credits/npcNFT.sol\":1725:1753  _creditSupplyLimits[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":1754:1765  creditTypes */\n      dup6\n        /* \"contracts/npc_credits/npcNFT.sol\":1766:1767  i */\n      dup4\n        /* \"contracts/npc_credits/npcNFT.sol\":1754:1768  creditTypes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_187\n      tag_180\n      jump\t// in\n    tag_187:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1725:1769  _creditSupplyLimits[tokenId][creditTypes[i]] */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":1725:1793  _creditSupplyLimits[tokenId][creditTypes[i]] = creditSupplyLimits[i] */\n      sstore\n        /* \"contracts/npc_credits/npcNFT.sol\":1648:1651  i++ */\n      0x01\n      add\n        /* \"contracts/npc_credits/npcNFT.sol\":1604:1805  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      jump(tag_175)\n    tag_176:\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":1841:1848  tokenId */\n      dup1\n        /* \"contracts/npc_credits/npcNFT.sol\":1822:1862  CreditTypesUpdated(tokenId, creditTypes) */\n      0xaaa3ef9b79affd1b4052e81dd38126a7a1dd22345b41b8866fbe06d6c5cb02fe\n        /* \"contracts/npc_credits/npcNFT.sol\":1850:1861  creditTypes */\n      dup5\n        /* \"contracts/npc_credits/npcNFT.sol\":1822:1862  CreditTypesUpdated(tokenId, creditTypes) */\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/npc_credits/npcNFT.sol\":1878:1887  uint256 i */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":1873:2026  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n    tag_191:\n        /* \"contracts/npc_credits/npcNFT.sol\":1897:1908  creditTypes */\n      dup4\n        /* \"contracts/npc_credits/npcNFT.sol\":1897:1915  creditTypes.length */\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1893:1894  i */\n      dup2\n        /* \"contracts/npc_credits/npcNFT.sol\":1893:1915  i < creditTypes.length */\n      lt\n        /* \"contracts/npc_credits/npcNFT.sol\":1873:2026  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"contracts/npc_credits/npcNFT.sol\":1967:1974  tokenId */\n      dup2\n        /* \"contracts/npc_credits/npcNFT.sol\":1942:2014  CreditSupplyLimitUpdated(tokenId, creditTypes[i], creditSupplyLimits[i]) */\n      0xf09c4f8065057564478e900e30beeaa7be6409e52ad156a4067fdcab3e9ad5d0\n        /* \"contracts/npc_credits/npcNFT.sol\":1976:1987  creditTypes */\n      dup6\n        /* \"contracts/npc_credits/npcNFT.sol\":1988:1989  i */\n      dup4\n        /* \"contracts/npc_credits/npcNFT.sol\":1976:1990  creditTypes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_195\n      tag_180\n      jump\t// in\n    tag_195:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1992:2010  creditSupplyLimits */\n      dup6\n        /* \"contracts/npc_credits/npcNFT.sol\":2011:2012  i */\n      dup5\n        /* \"contracts/npc_credits/npcNFT.sol\":1992:2013  creditSupplyLimits[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_197\n      tag_180\n      jump\t// in\n    tag_197:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/npc_credits/npcNFT.sol\":1942:2014  CreditSupplyLimitUpdated(tokenId, creditTypes[i], creditSupplyLimits[i]) */\n      mload(0x40)\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/npc_credits/npcNFT.sol\":1917:1920  i++ */\n      0x01\n      add\n        /* \"contracts/npc_credits/npcNFT.sol\":1873:2026  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      jump(tag_191)\n    tag_192:\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":1258:2033  {... */\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":1115:2033  function mint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"contracts/npc_credits/npcNFT.sol\":3070:3911  function setCreditTypesAndLimits(... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/npc_credits/npcNFT.sol\":3262:3309  creditTypes.length == creditSupplyLimits.length */\n      dup3\n      dup2\n      eq\n        /* \"contracts/npc_credits/npcNFT.sol\":3254:3360  require(creditTypes.length == creditSupplyLimits.length, \"Credit types and supply limits length mismatch\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_170\n      jump\t// in\n    tag_214:\n        /* \"contracts/npc_credits/npcNFT.sol\":3419:3440  _creditTypes[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/npc_credits/npcNFT.sol\":3419:3431  _creditTypes */\n      0x07\n        /* \"contracts/npc_credits/npcNFT.sol\":3419:3440  _creditTypes[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":3412:3440  delete _creditTypes[tokenId] */\n      tag_216\n      swap2\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"contracts/npc_credits/npcNFT.sol\":3487:3496  uint256 i */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":3482:3683  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n    tag_218:\n        /* \"contracts/npc_credits/npcNFT.sol\":3502:3524  i < creditTypes.length */\n      dup4\n      dup2\n      lt\n        /* \"contracts/npc_credits/npcNFT.sol\":3482:3683  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"contracts/npc_credits/npcNFT.sol\":3546:3567  _creditTypes[tokenId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/npc_credits/npcNFT.sol\":3546:3558  _creditTypes */\n      0x07\n        /* \"contracts/npc_credits/npcNFT.sol\":3546:3567  _creditTypes[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":3573:3584  creditTypes */\n      dup6\n      dup6\n        /* \"contracts/npc_credits/npcNFT.sol\":3585:3586  i */\n      dup4\n        /* \"contracts/npc_credits/npcNFT.sol\":3573:3587  creditTypes[i] */\n      dup2\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_180\n      jump\t// in\n    tag_222:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"contracts/npc_credits/npcNFT.sol\":3546:3588  _creditTypes[tokenId].push(creditTypes[i]) */\n      dup3\n      sload\n      0x01\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x20\n      swap1\n      swap4\n      keccak256\n      swap1\n      swap3\n      add\n      swap2\n      tag_226\n      swap2\n      dup4\n      tag_227\n      jump\t// in\n    tag_226:\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":3650:3668  creditSupplyLimits */\n      dup3\n      dup3\n        /* \"contracts/npc_credits/npcNFT.sol\":3669:3670  i */\n      dup3\n        /* \"contracts/npc_credits/npcNFT.sol\":3650:3671  creditSupplyLimits[i] */\n      dup2\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_229\n      tag_180\n      jump\t// in\n    tag_229:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/npc_credits/npcNFT.sol\":3603:3622  _creditSupplyLimits */\n      0x08\n        /* \"contracts/npc_credits/npcNFT.sol\":3603:3631  _creditSupplyLimits[tokenId] */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":3623:3630  tokenId */\n      dup9\n        /* \"contracts/npc_credits/npcNFT.sol\":3603:3631  _creditSupplyLimits[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":3632:3643  creditTypes */\n      dup7\n      dup7\n        /* \"contracts/npc_credits/npcNFT.sol\":3644:3645  i */\n      dup5\n        /* \"contracts/npc_credits/npcNFT.sol\":3632:3646  creditTypes[i] */\n      dup2\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_180\n      jump\t// in\n    tag_231:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_232:\n        /* \"contracts/npc_credits/npcNFT.sol\":3603:3647  _creditSupplyLimits[tokenId][creditTypes[i]] */\n      mload(0x40)\n      tag_233\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_233:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n        /* \"contracts/npc_credits/npcNFT.sol\":3603:3671  _creditSupplyLimits[tokenId][creditTypes[i]] = creditSupplyLimits[i] */\n      sstore\n        /* \"contracts/npc_credits/npcNFT.sol\":3526:3529  i++ */\n      0x01\n      add\n        /* \"contracts/npc_credits/npcNFT.sol\":3482:3683  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      jump(tag_218)\n    tag_219:\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":3719:3726  tokenId */\n      dup5\n        /* \"contracts/npc_credits/npcNFT.sol\":3700:3740  CreditTypesUpdated(tokenId, creditTypes) */\n      0xaaa3ef9b79affd1b4052e81dd38126a7a1dd22345b41b8866fbe06d6c5cb02fe\n        /* \"contracts/npc_credits/npcNFT.sol\":3728:3739  creditTypes */\n      dup6\n      dup6\n        /* \"contracts/npc_credits/npcNFT.sol\":3700:3740  CreditTypesUpdated(tokenId, creditTypes) */\n      mload(0x40)\n      tag_234\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/npc_credits/npcNFT.sol\":3756:3765  uint256 i */\n      0x00\n        /* \"contracts/npc_credits/npcNFT.sol\":3751:3904  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n    tag_236:\n        /* \"contracts/npc_credits/npcNFT.sol\":3771:3793  i < creditTypes.length */\n      dup4\n      dup2\n      lt\n        /* \"contracts/npc_credits/npcNFT.sol\":3751:3904  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/npc_credits/npcNFT.sol\":3845:3852  tokenId */\n      dup6\n        /* \"contracts/npc_credits/npcNFT.sol\":3820:3892  CreditSupplyLimitUpdated(tokenId, creditTypes[i], creditSupplyLimits[i]) */\n      0xf09c4f8065057564478e900e30beeaa7be6409e52ad156a4067fdcab3e9ad5d0\n        /* \"contracts/npc_credits/npcNFT.sol\":3854:3865  creditTypes */\n      dup7\n      dup7\n        /* \"contracts/npc_credits/npcNFT.sol\":3866:3867  i */\n      dup5\n        /* \"contracts/npc_credits/npcNFT.sol\":3854:3868  creditTypes[i] */\n      dup2\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_240\n      tag_180\n      jump\t// in\n    tag_240:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_241:\n        /* \"contracts/npc_credits/npcNFT.sol\":3870:3888  creditSupplyLimits */\n      dup7\n      dup7\n        /* \"contracts/npc_credits/npcNFT.sol\":3889:3890  i */\n      dup7\n        /* \"contracts/npc_credits/npcNFT.sol\":3870:3891  creditSupplyLimits[i] */\n      dup2\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_243\n      tag_180\n      jump\t// in\n    tag_243:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/npc_credits/npcNFT.sol\":3820:3892  CreditSupplyLimitUpdated(tokenId, creditTypes[i], creditSupplyLimits[i]) */\n      mload(0x40)\n      tag_244\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/npc_credits/npcNFT.sol\":3795:3798  i++ */\n      0x01\n      add\n        /* \"contracts/npc_credits/npcNFT.sol\":3751:3904  for (uint256 i = 0; i < creditTypes.length; i++) {... */\n      jump(tag_236)\n    tag_237:\n      pop\n        /* \"contracts/npc_credits/npcNFT.sol\":3070:3911  function setCreditTypesAndLimits(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_251:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_254\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_255)\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_258\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2633:2658   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2606:2624   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_133\n        /* \"#utility.yul\":2487:2664   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_283:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_285\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_306\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_307\n      jump\t// in\n    tag_306:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_309\n      swap2\n      dup2\n      add\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      0x01\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_311\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_316\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_315)\n    tag_316:\n      0x60\n      swap2\n      pop\n    tag_315:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_311:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_326\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      dup2\n      gt\n      iszero\n      tag_328\n      jumpi\n      tag_328\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_330:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_331:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_331\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_339\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_342\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_343\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      tag_133\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_340:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_349\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2633:2658   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2606:2624   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_133\n        /* \"#utility.yul\":2487:2664   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19503:19535   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19485:19536   */\n      mstore\n        /* \"#utility.yul\":19552:19570   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":19545:19579   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":19458:19476   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_133\n        /* \"#utility.yul\":19311:19585   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_358\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_381\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_380\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_380\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_381\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_217:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n    tag_385:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_387\n      jumpi\n      0x00\n      tag_388\n      dup3\n      dup3\n      tag_389\n      jump\t// in\n    tag_388:\n      pop\n      0x01\n      add\n      jump(tag_385)\n    tag_387:\n      pop\n      swap1\n      jump\t// out\n    tag_389:\n      pop\n      dup1\n      sload\n      tag_390\n      swap1\n      tag_116\n      jump\t// in\n    tag_390:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_392\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_392:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n    tag_395:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_387\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_395)\n        /* \"#utility.yul\":14:145   */\n    tag_397:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_28:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_414:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_255\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_397\n      jump\t// in\n        /* \"#utility.yul\":592:892   */\n    tag_398:\n        /* \"#utility.yul\":645:648   */\n      0x00\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":677:689   */\n      mload\n        /* \"#utility.yul\":710:716   */\n      dup1\n        /* \"#utility.yul\":705:708   */\n      dup5\n        /* \"#utility.yul\":698:717   */\n      mstore\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":752:757   */\n      dup5\n        /* \"#utility.yul\":748:764   */\n      add\n        /* \"#utility.yul\":741:745   */\n      0x20\n        /* \"#utility.yul\":736:739   */\n      dup7\n        /* \"#utility.yul\":732:746   */\n      add\n        /* \"#utility.yul\":726:773   */\n      mcopy\n        /* \"#utility.yul\":818:819   */\n      0x00\n        /* \"#utility.yul\":811:815   */\n      0x20\n        /* \"#utility.yul\":802:808   */\n      dup3\n        /* \"#utility.yul\":797:800   */\n      dup7\n        /* \"#utility.yul\":793:809   */\n      add\n        /* \"#utility.yul\":789:816   */\n      add\n        /* \"#utility.yul\":782:820   */\n      mstore\n        /* \"#utility.yul\":881:885   */\n      0x20\n        /* \"#utility.yul\":874:876   */\n      0x1f\n        /* \"#utility.yul\":870:877   */\n      not\n        /* \"#utility.yul\":865:867   */\n      0x1f\n        /* \"#utility.yul\":857:863   */\n      dup4\n        /* \"#utility.yul\":853:868   */\n      add\n        /* \"#utility.yul\":849:878   */\n      and\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":840:879   */\n      add\n        /* \"#utility.yul\":836:886   */\n      add\n        /* \"#utility.yul\":829:886   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":592:892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1128   */\n    tag_35:\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1035:1044   */\n      dup2\n        /* \"#utility.yul\":1028:1049   */\n      mstore\n        /* \"#utility.yul\":1009:1013   */\n      0x00\n        /* \"#utility.yul\":1066:1122   */\n      tag_255\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1116   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1095:1101   */\n      dup5\n        /* \"#utility.yul\":1066:1122   */\n      tag_398\n      jump\t// in\n        /* \"#utility.yul\":1133:1313   */\n    tag_38:\n        /* \"#utility.yul\":1192:1198   */\n      0x00\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1224:1231   */\n      dup5\n        /* \"#utility.yul\":1220:1243   */\n      sub\n        /* \"#utility.yul\":1216:1248   */\n      slt\n        /* \"#utility.yul\":1213:1265   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1258:1259   */\n      dup1\n        /* \"#utility.yul\":1251:1263   */\n      revert\n        /* \"#utility.yul\":1213:1265   */\n    tag_421:\n      pop\n        /* \"#utility.yul\":1284:1307   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1133:1313   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1699   */\n    tag_399:\n        /* \"#utility.yul\":1594:1614   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1643:1674   */\n      dup2\n      and\n        /* \"#utility.yul\":1633:1675   */\n      dup2\n      eq\n        /* \"#utility.yul\":1623:1693   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1686:1687   */\n      dup1\n        /* \"#utility.yul\":1679:1691   */\n      revert\n        /* \"#utility.yul\":1623:1693   */\n    tag_424:\n        /* \"#utility.yul\":1526:1699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1958   */\n    tag_44:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1780:1786   */\n      dup1\n        /* \"#utility.yul\":1833:1835   */\n      0x40\n        /* \"#utility.yul\":1821:1830   */\n      dup4\n        /* \"#utility.yul\":1812:1819   */\n      dup6\n        /* \"#utility.yul\":1808:1831   */\n      sub\n        /* \"#utility.yul\":1804:1836   */\n      slt\n        /* \"#utility.yul\":1801:1853   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1846:1847   */\n      dup1\n        /* \"#utility.yul\":1839:1851   */\n      revert\n        /* \"#utility.yul\":1801:1853   */\n    tag_426:\n        /* \"#utility.yul\":1872:1901   */\n      tag_427\n        /* \"#utility.yul\":1891:1900   */\n      dup4\n        /* \"#utility.yul\":1872:1901   */\n      tag_399\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1862:1901   */\n      swap5\n        /* \"#utility.yul\":1948:1950   */\n      0x20\n        /* \"#utility.yul\":1933:1951   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1920:1952   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1704:1958   */\n      jump\t// out\n        /* \"#utility.yul\":1963:2291   */\n    tag_48:\n        /* \"#utility.yul\":2040:2046   */\n      0x00\n        /* \"#utility.yul\":2048:2054   */\n      dup1\n        /* \"#utility.yul\":2056:2062   */\n      0x00\n        /* \"#utility.yul\":2109:2111   */\n      0x60\n        /* \"#utility.yul\":2097:2106   */\n      dup5\n        /* \"#utility.yul\":2088:2095   */\n      dup7\n        /* \"#utility.yul\":2084:2107   */\n      sub\n        /* \"#utility.yul\":2080:2112   */\n      slt\n        /* \"#utility.yul\":2077:2129   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2125:2126   */\n      0x00\n        /* \"#utility.yul\":2122:2123   */\n      dup1\n        /* \"#utility.yul\":2115:2127   */\n      revert\n        /* \"#utility.yul\":2077:2129   */\n    tag_429:\n        /* \"#utility.yul\":2148:2177   */\n      tag_430\n        /* \"#utility.yul\":2167:2176   */\n      dup5\n        /* \"#utility.yul\":2148:2177   */\n      tag_399\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2138:2177   */\n      swap3\n      pop\n        /* \"#utility.yul\":2196:2234   */\n      tag_431\n        /* \"#utility.yul\":2230:2232   */\n      0x20\n        /* \"#utility.yul\":2219:2228   */\n      dup6\n        /* \"#utility.yul\":2215:2233   */\n      add\n        /* \"#utility.yul\":2196:2234   */\n      tag_399\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2186:2234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2281:2283   */\n      0x40\n        /* \"#utility.yul\":2270:2279   */\n      dup5\n        /* \"#utility.yul\":2266:2284   */\n      add\n        /* \"#utility.yul\":2253:2285   */\n      calldataload\n        /* \"#utility.yul\":2243:2285   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2291   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2296:2482   */\n    tag_59:\n        /* \"#utility.yul\":2355:2361   */\n      0x00\n        /* \"#utility.yul\":2408:2410   */\n      0x20\n        /* \"#utility.yul\":2396:2405   */\n      dup3\n        /* \"#utility.yul\":2387:2394   */\n      dup5\n        /* \"#utility.yul\":2383:2406   */\n      sub\n        /* \"#utility.yul\":2379:2411   */\n      slt\n        /* \"#utility.yul\":2376:2428   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2424:2425   */\n      0x00\n        /* \"#utility.yul\":2421:2422   */\n      dup1\n        /* \"#utility.yul\":2414:2426   */\n      revert\n        /* \"#utility.yul\":2376:2428   */\n    tag_433:\n        /* \"#utility.yul\":2447:2476   */\n      tag_255\n        /* \"#utility.yul\":2466:2475   */\n      dup3\n        /* \"#utility.yul\":2447:2476   */\n      tag_399\n      jump\t// in\n        /* \"#utility.yul\":2669:3329   */\n    tag_67:\n        /* \"#utility.yul\":2749:2755   */\n      0x00\n        /* \"#utility.yul\":2757:2763   */\n      dup1\n        /* \"#utility.yul\":2765:2771   */\n      0x00\n        /* \"#utility.yul\":2818:2820   */\n      0x40\n        /* \"#utility.yul\":2806:2815   */\n      dup5\n        /* \"#utility.yul\":2797:2804   */\n      dup7\n        /* \"#utility.yul\":2793:2816   */\n      sub\n        /* \"#utility.yul\":2789:2821   */\n      slt\n        /* \"#utility.yul\":2786:2838   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":2834:2835   */\n      0x00\n        /* \"#utility.yul\":2831:2832   */\n      dup1\n        /* \"#utility.yul\":2824:2836   */\n      revert\n        /* \"#utility.yul\":2786:2838   */\n    tag_437:\n        /* \"#utility.yul\":2870:2879   */\n      dup4\n        /* \"#utility.yul\":2857:2880   */\n      calldataload\n        /* \"#utility.yul\":2847:2880   */\n      swap3\n      pop\n        /* \"#utility.yul\":2931:2933   */\n      0x20\n        /* \"#utility.yul\":2920:2929   */\n      dup5\n        /* \"#utility.yul\":2916:2934   */\n      add\n        /* \"#utility.yul\":2903:2935   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2995:2997   */\n      dup1\n        /* \"#utility.yul\":2987:2993   */\n      dup3\n        /* \"#utility.yul\":2984:2998   */\n      gt\n        /* \"#utility.yul\":2981:3015   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3011:3012   */\n      0x00\n        /* \"#utility.yul\":3008:3009   */\n      dup1\n        /* \"#utility.yul\":3001:3013   */\n      revert\n        /* \"#utility.yul\":2981:3015   */\n    tag_438:\n        /* \"#utility.yul\":3049:3055   */\n      dup2\n        /* \"#utility.yul\":3038:3047   */\n      dup7\n        /* \"#utility.yul\":3034:3056   */\n      add\n        /* \"#utility.yul\":3024:3056   */\n      swap2\n      pop\n        /* \"#utility.yul\":3094:3101   */\n      dup7\n        /* \"#utility.yul\":3087:3091   */\n      0x1f\n        /* \"#utility.yul\":3083:3085   */\n      dup4\n        /* \"#utility.yul\":3079:3092   */\n      add\n        /* \"#utility.yul\":3075:3102   */\n      slt\n        /* \"#utility.yul\":3065:3120   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3113:3114   */\n      dup1\n        /* \"#utility.yul\":3106:3118   */\n      revert\n        /* \"#utility.yul\":3065:3120   */\n    tag_439:\n        /* \"#utility.yul\":3156:3158   */\n      dup2\n        /* \"#utility.yul\":3143:3159   */\n      calldataload\n        /* \"#utility.yul\":3182:3184   */\n      dup2\n        /* \"#utility.yul\":3174:3180   */\n      dup2\n        /* \"#utility.yul\":3171:3185   */\n      gt\n        /* \"#utility.yul\":3168:3202   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":3198:3199   */\n      0x00\n        /* \"#utility.yul\":3195:3196   */\n      dup1\n        /* \"#utility.yul\":3188:3200   */\n      revert\n        /* \"#utility.yul\":3168:3202   */\n    tag_440:\n        /* \"#utility.yul\":3243:3250   */\n      dup8\n        /* \"#utility.yul\":3238:3240   */\n      0x20\n        /* \"#utility.yul\":3229:3235   */\n      dup3\n        /* \"#utility.yul\":3225:3227   */\n      dup6\n        /* \"#utility.yul\":3221:3236   */\n      add\n        /* \"#utility.yul\":3217:3241   */\n      add\n        /* \"#utility.yul\":3214:3251   */\n      gt\n        /* \"#utility.yul\":3211:3268   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":3264:3265   */\n      0x00\n        /* \"#utility.yul\":3261:3262   */\n      dup1\n        /* \"#utility.yul\":3254:3266   */\n      revert\n        /* \"#utility.yul\":3211:3268   */\n    tag_441:\n        /* \"#utility.yul\":3295:3297   */\n      0x20\n        /* \"#utility.yul\":3291:3293   */\n      dup4\n        /* \"#utility.yul\":3287:3298   */\n      add\n        /* \"#utility.yul\":3277:3298   */\n      swap5\n      pop\n        /* \"#utility.yul\":3317:3323   */\n      dup1\n        /* \"#utility.yul\":3307:3323   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2669:3329   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3334:4148   */\n    tag_74:\n        /* \"#utility.yul\":3496:3500   */\n      0x00\n        /* \"#utility.yul\":3525:3527   */\n      0x20\n        /* \"#utility.yul\":3565:3567   */\n      dup1\n        /* \"#utility.yul\":3554:3563   */\n      dup4\n        /* \"#utility.yul\":3550:3568   */\n      add\n        /* \"#utility.yul\":3595:3597   */\n      0x20\n        /* \"#utility.yul\":3584:3593   */\n      dup5\n        /* \"#utility.yul\":3577:3598   */\n      mstore\n        /* \"#utility.yul\":3618:3624   */\n      dup1\n        /* \"#utility.yul\":3653:3659   */\n      dup6\n        /* \"#utility.yul\":3647:3660   */\n      mload\n        /* \"#utility.yul\":3684:3690   */\n      dup1\n        /* \"#utility.yul\":3676:3682   */\n      dup4\n        /* \"#utility.yul\":3669:3691   */\n      mstore\n        /* \"#utility.yul\":3722:3724   */\n      0x40\n        /* \"#utility.yul\":3711:3720   */\n      dup7\n        /* \"#utility.yul\":3707:3725   */\n      add\n        /* \"#utility.yul\":3700:3725   */\n      swap2\n      pop\n        /* \"#utility.yul\":3784:3786   */\n      0x40\n        /* \"#utility.yul\":3774:3780   */\n      dup2\n        /* \"#utility.yul\":3771:3772   */\n      0x05\n        /* \"#utility.yul\":3767:3781   */\n      shl\n        /* \"#utility.yul\":3756:3765   */\n      dup8\n        /* \"#utility.yul\":3752:3782   */\n      add\n        /* \"#utility.yul\":3748:3787   */\n      add\n        /* \"#utility.yul\":3734:3787   */\n      swap3\n      pop\n        /* \"#utility.yul\":3822:3824   */\n      0x20\n        /* \"#utility.yul\":3814:3820   */\n      dup8\n        /* \"#utility.yul\":3810:3825   */\n      add\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3853:4119   */\n    tag_443:\n        /* \"#utility.yul\":3867:3873   */\n      dup3\n        /* \"#utility.yul\":3864:3865   */\n      dup2\n        /* \"#utility.yul\":3861:3874   */\n      lt\n        /* \"#utility.yul\":3853:4119   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":3960:3962   */\n      0x3f\n        /* \"#utility.yul\":3956:3963   */\n      not\n        /* \"#utility.yul\":3944:3953   */\n      dup9\n        /* \"#utility.yul\":3936:3942   */\n      dup7\n        /* \"#utility.yul\":3932:3954   */\n      sub\n        /* \"#utility.yul\":3928:3964   */\n      add\n        /* \"#utility.yul\":3923:3926   */\n      dup5\n        /* \"#utility.yul\":3916:3965   */\n      mstore\n        /* \"#utility.yul\":3988:4039   */\n      tag_446\n        /* \"#utility.yul\":4032:4038   */\n      dup6\n        /* \"#utility.yul\":4023:4029   */\n      dup4\n        /* \"#utility.yul\":4017:4030   */\n      mload\n        /* \"#utility.yul\":3988:4039   */\n      tag_398\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3978:4039   */\n      swap5\n      pop\n        /* \"#utility.yul\":4097:4109   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":4062:4077   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3889:3890   */\n      0x01\n        /* \"#utility.yul\":3882:3891   */\n      add\n        /* \"#utility.yul\":3853:4119   */\n      jump(tag_443)\n    tag_445:\n      pop\n        /* \"#utility.yul\":4136:4142   */\n      swap3\n      swap8\n        /* \"#utility.yul\":3334:4148   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4153:4280   */\n    tag_329:\n        /* \"#utility.yul\":4214:4224   */\n      0x4e487b71\n        /* \"#utility.yul\":4209:4212   */\n      0xe0\n        /* \"#utility.yul\":4205:4225   */\n      shl\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4195:4226   */\n      mstore\n        /* \"#utility.yul\":4245:4249   */\n      0x41\n        /* \"#utility.yul\":4242:4243   */\n      0x04\n        /* \"#utility.yul\":4235:4250   */\n      mstore\n        /* \"#utility.yul\":4269:4273   */\n      0x24\n        /* \"#utility.yul\":4266:4267   */\n      0x00\n        /* \"#utility.yul\":4259:4274   */\n      revert\n        /* \"#utility.yul\":4285:4560   */\n    tag_400:\n        /* \"#utility.yul\":4356:4358   */\n      0x40\n        /* \"#utility.yul\":4350:4359   */\n      mload\n        /* \"#utility.yul\":4421:4423   */\n      0x1f\n        /* \"#utility.yul\":4402:4415   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4398:4425   */\n      and\n        /* \"#utility.yul\":4386:4426   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4441:4475   */\n      dup2\n      gt\n        /* \"#utility.yul\":4477:4499   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4438:4500   */\n      or\n        /* \"#utility.yul\":4435:4523   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4503:4521   */\n      tag_450\n      tag_329\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4539:4541   */\n      0x40\n        /* \"#utility.yul\":4532:4554   */\n      mstore\n        /* \"#utility.yul\":4285:4560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4565:4747   */\n    tag_401:\n        /* \"#utility.yul\":4624:4628   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4649:4655   */\n      dup3\n        /* \"#utility.yul\":4646:4676   */\n      gt\n        /* \"#utility.yul\":4643:4699   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":4679:4697   */\n      tag_453\n      tag_329\n      jump\t// in\n    tag_453:\n      pop\n        /* \"#utility.yul\":4724:4725   */\n      0x05\n        /* \"#utility.yul\":4720:4734   */\n      shl\n        /* \"#utility.yul\":4736:4740   */\n      0x20\n        /* \"#utility.yul\":4716:4741   */\n      add\n      swap1\n        /* \"#utility.yul\":4565:4747   */\n      jump\t// out\n        /* \"#utility.yul\":4752:5159   */\n    tag_402:\n        /* \"#utility.yul\":4817:4822   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4843:4849   */\n      dup4\n        /* \"#utility.yul\":4840:4870   */\n      gt\n        /* \"#utility.yul\":4837:4893   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4873:4891   */\n      tag_456\n      tag_329\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4911:4968   */\n      tag_457\n        /* \"#utility.yul\":4956:4958   */\n      0x1f\n        /* \"#utility.yul\":4935:4950   */\n      dup5\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4931:4960   */\n      and\n        /* \"#utility.yul\":4962:4966   */\n      0x20\n        /* \"#utility.yul\":4927:4967   */\n      add\n        /* \"#utility.yul\":4911:4968   */\n      tag_400\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4902:4968   */\n      swap1\n      pop\n        /* \"#utility.yul\":4991:4997   */\n      dup3\n        /* \"#utility.yul\":4984:4989   */\n      dup2\n        /* \"#utility.yul\":4977:4998   */\n      mstore\n        /* \"#utility.yul\":5031:5034   */\n      dup4\n        /* \"#utility.yul\":5022:5028   */\n      dup4\n        /* \"#utility.yul\":5017:5020   */\n      dup4\n        /* \"#utility.yul\":5013:5029   */\n      add\n        /* \"#utility.yul\":5010:5035   */\n      gt\n        /* \"#utility.yul\":5007:5052   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":5048:5049   */\n      0x00\n        /* \"#utility.yul\":5045:5046   */\n      dup1\n        /* \"#utility.yul\":5038:5050   */\n      revert\n        /* \"#utility.yul\":5007:5052   */\n    tag_458:\n        /* \"#utility.yul\":5097:5103   */\n      dup3\n        /* \"#utility.yul\":5092:5095   */\n      dup3\n        /* \"#utility.yul\":5085:5089   */\n      0x20\n        /* \"#utility.yul\":5078:5083   */\n      dup4\n        /* \"#utility.yul\":5074:5090   */\n      add\n        /* \"#utility.yul\":5061:5104   */\n      calldatacopy\n        /* \"#utility.yul\":5151:5152   */\n      0x00\n        /* \"#utility.yul\":5144:5148   */\n      0x20\n        /* \"#utility.yul\":5135:5141   */\n      dup5\n        /* \"#utility.yul\":5128:5133   */\n      dup4\n        /* \"#utility.yul\":5124:5142   */\n      add\n        /* \"#utility.yul\":5120:5149   */\n      add\n        /* \"#utility.yul\":5113:5153   */\n      mstore\n        /* \"#utility.yul\":4752:5159   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5164:5831   */\n    tag_403:\n        /* \"#utility.yul\":5218:5223   */\n      0x00\n        /* \"#utility.yul\":5271:5274   */\n      dup3\n        /* \"#utility.yul\":5264:5268   */\n      0x1f\n        /* \"#utility.yul\":5256:5262   */\n      dup4\n        /* \"#utility.yul\":5252:5269   */\n      add\n        /* \"#utility.yul\":5248:5275   */\n      slt\n        /* \"#utility.yul\":5238:5293   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":5289:5290   */\n      0x00\n        /* \"#utility.yul\":5286:5287   */\n      dup1\n        /* \"#utility.yul\":5279:5291   */\n      revert\n        /* \"#utility.yul\":5238:5293   */\n    tag_460:\n        /* \"#utility.yul\":5325:5331   */\n      dup2\n        /* \"#utility.yul\":5312:5332   */\n      calldataload\n        /* \"#utility.yul\":5351:5355   */\n      0x20\n        /* \"#utility.yul\":5375:5434   */\n      tag_461\n        /* \"#utility.yul\":5391:5433   */\n      tag_462\n        /* \"#utility.yul\":5430:5432   */\n      dup4\n        /* \"#utility.yul\":5391:5433   */\n      tag_401\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5375:5434   */\n      tag_400\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5456:5459   */\n      dup1\n        /* \"#utility.yul\":5480:5482   */\n      dup4\n        /* \"#utility.yul\":5475:5478   */\n      dup3\n        /* \"#utility.yul\":5468:5483   */\n      mstore\n        /* \"#utility.yul\":5508:5512   */\n      0x20\n        /* \"#utility.yul\":5503:5506   */\n      dup3\n        /* \"#utility.yul\":5499:5513   */\n      add\n        /* \"#utility.yul\":5492:5513   */\n      swap2\n      pop\n        /* \"#utility.yul\":5565:5569   */\n      0x20\n        /* \"#utility.yul\":5559:5561   */\n      dup5\n        /* \"#utility.yul\":5556:5557   */\n      0x05\n        /* \"#utility.yul\":5552:5562   */\n      shl\n        /* \"#utility.yul\":5544:5550   */\n      dup8\n        /* \"#utility.yul\":5540:5563   */\n      add\n        /* \"#utility.yul\":5536:5570   */\n      add\n        /* \"#utility.yul\":5522:5570   */\n      swap4\n      pop\n        /* \"#utility.yul\":5593:5596   */\n      dup7\n        /* \"#utility.yul\":5585:5591   */\n      dup5\n        /* \"#utility.yul\":5582:5597   */\n      gt\n        /* \"#utility.yul\":5579:5614   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":5610:5611   */\n      0x00\n        /* \"#utility.yul\":5607:5608   */\n      dup1\n        /* \"#utility.yul\":5600:5612   */\n      revert\n        /* \"#utility.yul\":5579:5614   */\n    tag_463:\n        /* \"#utility.yul\":5646:5650   */\n      0x20\n        /* \"#utility.yul\":5638:5644   */\n      dup7\n        /* \"#utility.yul\":5634:5651   */\n      add\n        /* \"#utility.yul\":5660:5802   */\n    tag_464:\n        /* \"#utility.yul\":5676:5682   */\n      dup5\n        /* \"#utility.yul\":5671:5674   */\n      dup2\n        /* \"#utility.yul\":5668:5683   */\n      lt\n        /* \"#utility.yul\":5660:5802   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":5742:5759   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":5730:5760   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5780:5792   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5693:5705   */\n      dup4\n      add\n        /* \"#utility.yul\":5660:5802   */\n      jump(tag_464)\n    tag_466:\n      pop\n        /* \"#utility.yul\":5820:5825   */\n      swap7\n        /* \"#utility.yul\":5164:5831   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5836:7333   */\n    tag_77:\n        /* \"#utility.yul\":5973:5979   */\n      0x00\n        /* \"#utility.yul\":5981:5987   */\n      dup1\n        /* \"#utility.yul\":5989:5995   */\n      0x00\n        /* \"#utility.yul\":6042:6044   */\n      0x60\n        /* \"#utility.yul\":6030:6039   */\n      dup5\n        /* \"#utility.yul\":6021:6028   */\n      dup7\n        /* \"#utility.yul\":6017:6040   */\n      sub\n        /* \"#utility.yul\":6013:6045   */\n      slt\n        /* \"#utility.yul\":6010:6062   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":6058:6059   */\n      0x00\n        /* \"#utility.yul\":6055:6056   */\n      dup1\n        /* \"#utility.yul\":6048:6060   */\n      revert\n        /* \"#utility.yul\":6010:6062   */\n    tag_468:\n        /* \"#utility.yul\":6081:6110   */\n      tag_469\n        /* \"#utility.yul\":6100:6109   */\n      dup5\n        /* \"#utility.yul\":6081:6110   */\n      tag_399\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6071:6110   */\n      swap3\n      pop\n        /* \"#utility.yul\":6129:6131   */\n      0x20\n        /* \"#utility.yul\":6182:6184   */\n      dup1\n        /* \"#utility.yul\":6171:6180   */\n      dup6\n        /* \"#utility.yul\":6167:6185   */\n      add\n        /* \"#utility.yul\":6154:6186   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6246:6248   */\n      dup1\n        /* \"#utility.yul\":6238:6244   */\n      dup3\n        /* \"#utility.yul\":6235:6249   */\n      gt\n        /* \"#utility.yul\":6232:6266   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":6262:6263   */\n      0x00\n        /* \"#utility.yul\":6259:6260   */\n      dup1\n        /* \"#utility.yul\":6252:6264   */\n      revert\n        /* \"#utility.yul\":6232:6266   */\n    tag_470:\n        /* \"#utility.yul\":6300:6306   */\n      dup2\n        /* \"#utility.yul\":6289:6298   */\n      dup8\n        /* \"#utility.yul\":6285:6307   */\n      add\n        /* \"#utility.yul\":6275:6307   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6352   */\n      dup8\n        /* \"#utility.yul\":6338:6342   */\n      0x1f\n        /* \"#utility.yul\":6334:6336   */\n      dup4\n        /* \"#utility.yul\":6330:6343   */\n      add\n        /* \"#utility.yul\":6326:6353   */\n      slt\n        /* \"#utility.yul\":6316:6371   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6364:6365   */\n      dup1\n        /* \"#utility.yul\":6357:6369   */\n      revert\n        /* \"#utility.yul\":6316:6371   */\n    tag_471:\n        /* \"#utility.yul\":6403:6405   */\n      dup2\n        /* \"#utility.yul\":6390:6406   */\n      calldataload\n        /* \"#utility.yul\":6426:6485   */\n      tag_472\n        /* \"#utility.yul\":6442:6484   */\n      tag_462\n        /* \"#utility.yul\":6481:6483   */\n      dup3\n        /* \"#utility.yul\":6442:6484   */\n      tag_401\n      jump\t// in\n        /* \"#utility.yul\":6426:6485   */\n    tag_472:\n        /* \"#utility.yul\":6519:6534   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":6601:6602   */\n      0x05\n        /* \"#utility.yul\":6597:6607   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":6589:6608   */\n      dup4\n      add\n        /* \"#utility.yul\":6585:6613   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6550:6562   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":6625:6644   */\n      dup11\n      dup4\n      gt\n        /* \"#utility.yul\":6622:6661   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6657:6658   */\n      0x00\n        /* \"#utility.yul\":6654:6655   */\n      dup1\n        /* \"#utility.yul\":6647:6659   */\n      revert\n        /* \"#utility.yul\":6622:6661   */\n    tag_474:\n        /* \"#utility.yul\":6689:6691   */\n      dup6\n        /* \"#utility.yul\":6685:6687   */\n      dup6\n        /* \"#utility.yul\":6681:6692   */\n      add\n        /* \"#utility.yul\":6701:7119   */\n    tag_475:\n        /* \"#utility.yul\":6717:6723   */\n      dup4\n        /* \"#utility.yul\":6712:6715   */\n      dup2\n        /* \"#utility.yul\":6709:6724   */\n      lt\n        /* \"#utility.yul\":6701:7119   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":6803:6806   */\n      dup1\n        /* \"#utility.yul\":6790:6807   */\n      calldataload\n        /* \"#utility.yul\":6839:6841   */\n      dup6\n        /* \"#utility.yul\":6826:6837   */\n      dup2\n        /* \"#utility.yul\":6823:6842   */\n      gt\n        /* \"#utility.yul\":6820:6859   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6855:6856   */\n      0x00\n        /* \"#utility.yul\":6852:6853   */\n      dup1\n        /* \"#utility.yul\":6845:6857   */\n      revert\n        /* \"#utility.yul\":6820:6859   */\n    tag_478:\n        /* \"#utility.yul\":6882:6902   */\n      dup7\n      add\n        /* \"#utility.yul\":6937:6939   */\n      0x3f\n        /* \"#utility.yul\":6929:6940   */\n      dup2\n      add\n        /* \"#utility.yul\":6925:6950   */\n      dup14\n      sgt\n        /* \"#utility.yul\":6915:6968   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":6964:6965   */\n      0x00\n        /* \"#utility.yul\":6961:6962   */\n      dup1\n        /* \"#utility.yul\":6954:6966   */\n      revert\n        /* \"#utility.yul\":6915:6968   */\n    tag_479:\n        /* \"#utility.yul\":6993:7076   */\n      tag_480\n        /* \"#utility.yul\":7068:7075   */\n      dup14\n        /* \"#utility.yul\":7062:7064   */\n      dup10\n        /* \"#utility.yul\":7058:7060   */\n      dup4\n        /* \"#utility.yul\":7054:7065   */\n      add\n        /* \"#utility.yul\":7041:7066   */\n      calldataload\n        /* \"#utility.yul\":7036:7038   */\n      0x40\n        /* \"#utility.yul\":7032:7034   */\n      dup5\n        /* \"#utility.yul\":7028:7039   */\n      add\n        /* \"#utility.yul\":6993:7076   */\n      tag_402\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6981:7077   */\n      dup5\n      mstore\n      pop\n        /* \"#utility.yul\":7097:7109   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"#utility.yul\":6734:6746   */\n      dup7\n      add\n        /* \"#utility.yul\":6701:7119   */\n      jump(tag_475)\n    tag_477:\n      pop\n        /* \"#utility.yul\":7138:7143   */\n      swap7\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7196:7198   */\n      0x40\n        /* \"#utility.yul\":7181:7199   */\n      dup8\n      add\n        /* \"#utility.yul\":7168:7200   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":7212:7228   */\n      dup1\n      dup4\n      gt\n        /* \"#utility.yul\":7209:7245   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":7241:7242   */\n      0x00\n        /* \"#utility.yul\":7238:7239   */\n      dup1\n        /* \"#utility.yul\":7231:7243   */\n      revert\n        /* \"#utility.yul\":7209:7245   */\n    tag_481:\n      pop\n      pop\n        /* \"#utility.yul\":7264:7327   */\n      tag_482\n        /* \"#utility.yul\":7319:7326   */\n      dup7\n        /* \"#utility.yul\":7308:7316   */\n      dup3\n        /* \"#utility.yul\":7297:7306   */\n      dup8\n        /* \"#utility.yul\":7293:7317   */\n      add\n        /* \"#utility.yul\":7264:7327   */\n      tag_403\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7254:7327   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5836:7333   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7338:7685   */\n    tag_87:\n        /* \"#utility.yul\":7403:7409   */\n      0x00\n        /* \"#utility.yul\":7411:7417   */\n      dup1\n        /* \"#utility.yul\":7464:7466   */\n      0x40\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7443:7450   */\n      dup6\n        /* \"#utility.yul\":7439:7462   */\n      sub\n        /* \"#utility.yul\":7435:7467   */\n      slt\n        /* \"#utility.yul\":7432:7484   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":7480:7481   */\n      0x00\n        /* \"#utility.yul\":7477:7478   */\n      dup1\n        /* \"#utility.yul\":7470:7482   */\n      revert\n        /* \"#utility.yul\":7432:7484   */\n    tag_484:\n        /* \"#utility.yul\":7503:7532   */\n      tag_485\n        /* \"#utility.yul\":7522:7531   */\n      dup4\n        /* \"#utility.yul\":7503:7532   */\n      tag_399\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7493:7532   */\n      swap2\n      pop\n        /* \"#utility.yul\":7582:7584   */\n      0x20\n        /* \"#utility.yul\":7571:7580   */\n      dup4\n        /* \"#utility.yul\":7567:7585   */\n      add\n        /* \"#utility.yul\":7554:7586   */\n      calldataload\n        /* \"#utility.yul\":7629:7634   */\n      dup1\n        /* \"#utility.yul\":7622:7635   */\n      iszero\n        /* \"#utility.yul\":7615:7636   */\n      iszero\n        /* \"#utility.yul\":7608:7613   */\n      dup2\n        /* \"#utility.yul\":7605:7637   */\n      eq\n        /* \"#utility.yul\":7595:7655   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7595:7655   */\n    tag_486:\n        /* \"#utility.yul\":7674:7679   */\n      dup1\n        /* \"#utility.yul\":7664:7679   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7338:7685   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7690:8065   */\n    tag_404:\n        /* \"#utility.yul\":7761:7769   */\n      0x00\n        /* \"#utility.yul\":7771:7777   */\n      dup1\n        /* \"#utility.yul\":7825:7828   */\n      dup4\n        /* \"#utility.yul\":7818:7822   */\n      0x1f\n        /* \"#utility.yul\":7810:7816   */\n      dup5\n        /* \"#utility.yul\":7806:7823   */\n      add\n        /* \"#utility.yul\":7802:7829   */\n      slt\n        /* \"#utility.yul\":7792:7847   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":7843:7844   */\n      0x00\n        /* \"#utility.yul\":7840:7841   */\n      dup1\n        /* \"#utility.yul\":7833:7845   */\n      revert\n        /* \"#utility.yul\":7792:7847   */\n    tag_488:\n      pop\n        /* \"#utility.yul\":7866:7886   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7898:7928   */\n      dup2\n      gt\n        /* \"#utility.yul\":7895:7945   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":7941:7942   */\n      0x00\n        /* \"#utility.yul\":7938:7939   */\n      dup1\n        /* \"#utility.yul\":7931:7943   */\n      revert\n        /* \"#utility.yul\":7895:7945   */\n    tag_489:\n        /* \"#utility.yul\":7978:7982   */\n      0x20\n        /* \"#utility.yul\":7970:7976   */\n      dup4\n        /* \"#utility.yul\":7966:7983   */\n      add\n        /* \"#utility.yul\":7954:7983   */\n      swap2\n      pop\n        /* \"#utility.yul\":8038:8041   */\n      dup4\n        /* \"#utility.yul\":8031:8035   */\n      0x20\n        /* \"#utility.yul\":8021:8027   */\n      dup3\n        /* \"#utility.yul\":8018:8019   */\n      0x05\n        /* \"#utility.yul\":8014:8028   */\n      shl\n        /* \"#utility.yul\":8006:8012   */\n      dup6\n        /* \"#utility.yul\":8002:8029   */\n      add\n        /* \"#utility.yul\":7998:8036   */\n      add\n        /* \"#utility.yul\":7995:8042   */\n      gt\n        /* \"#utility.yul\":7992:8059   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":8055:8056   */\n      0x00\n        /* \"#utility.yul\":8052:8053   */\n      dup1\n        /* \"#utility.yul\":8045:8057   */\n      revert\n        /* \"#utility.yul\":7992:8059   */\n    tag_490:\n        /* \"#utility.yul\":7690:8065   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8070:8939   */\n    tag_91:\n        /* \"#utility.yul\":8213:8219   */\n      0x00\n        /* \"#utility.yul\":8221:8227   */\n      dup1\n        /* \"#utility.yul\":8229:8235   */\n      0x00\n        /* \"#utility.yul\":8237:8243   */\n      dup1\n        /* \"#utility.yul\":8245:8251   */\n      0x00\n        /* \"#utility.yul\":8298:8300   */\n      0x60\n        /* \"#utility.yul\":8286:8295   */\n      dup7\n        /* \"#utility.yul\":8277:8284   */\n      dup9\n        /* \"#utility.yul\":8273:8296   */\n      sub\n        /* \"#utility.yul\":8269:8301   */\n      slt\n        /* \"#utility.yul\":8266:8318   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":8314:8315   */\n      0x00\n        /* \"#utility.yul\":8311:8312   */\n      dup1\n        /* \"#utility.yul\":8304:8316   */\n      revert\n        /* \"#utility.yul\":8266:8318   */\n    tag_492:\n        /* \"#utility.yul\":8350:8359   */\n      dup6\n        /* \"#utility.yul\":8337:8360   */\n      calldataload\n        /* \"#utility.yul\":8327:8360   */\n      swap5\n      pop\n        /* \"#utility.yul\":8411:8413   */\n      0x20\n        /* \"#utility.yul\":8400:8409   */\n      dup7\n        /* \"#utility.yul\":8396:8414   */\n      add\n        /* \"#utility.yul\":8383:8415   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8475:8477   */\n      dup1\n        /* \"#utility.yul\":8467:8473   */\n      dup3\n        /* \"#utility.yul\":8464:8478   */\n      gt\n        /* \"#utility.yul\":8461:8495   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":8491:8492   */\n      0x00\n        /* \"#utility.yul\":8488:8489   */\n      dup1\n        /* \"#utility.yul\":8481:8493   */\n      revert\n        /* \"#utility.yul\":8461:8495   */\n    tag_493:\n        /* \"#utility.yul\":8530:8608   */\n      tag_494\n        /* \"#utility.yul\":8600:8607   */\n      dup10\n        /* \"#utility.yul\":8591:8597   */\n      dup4\n        /* \"#utility.yul\":8580:8589   */\n      dup11\n        /* \"#utility.yul\":8576:8598   */\n      add\n        /* \"#utility.yul\":8530:8608   */\n      tag_404\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8627:8635   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":8504:8608   */\n      swap5\n      pop\n        /* \"#utility.yul\":8715:8717   */\n      0x40\n        /* \"#utility.yul\":8700:8718   */\n      dup9\n      add\n        /* \"#utility.yul\":8687:8719   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":8731:8747   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8728:8764   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":8760:8761   */\n      0x00\n        /* \"#utility.yul\":8757:8758   */\n      dup1\n        /* \"#utility.yul\":8750:8762   */\n      revert\n        /* \"#utility.yul\":8728:8764   */\n    tag_495:\n      pop\n        /* \"#utility.yul\":8799:8879   */\n      tag_496\n        /* \"#utility.yul\":8871:8878   */\n      dup9\n        /* \"#utility.yul\":8860:8868   */\n      dup3\n        /* \"#utility.yul\":8849:8858   */\n      dup10\n        /* \"#utility.yul\":8845:8869   */\n      add\n        /* \"#utility.yul\":8799:8879   */\n      tag_404\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8070:8939   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":8898:8906   */\n      swap3\n      swap5\n        /* \"#utility.yul\":8773:8879   */\n      swap4\n        /* \"#utility.yul\":8070:8939   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8944:9611   */\n    tag_95:\n        /* \"#utility.yul\":9039:9045   */\n      0x00\n        /* \"#utility.yul\":9047:9053   */\n      dup1\n        /* \"#utility.yul\":9055:9061   */\n      0x00\n        /* \"#utility.yul\":9063:9069   */\n      dup1\n        /* \"#utility.yul\":9116:9119   */\n      0x80\n        /* \"#utility.yul\":9104:9113   */\n      dup6\n        /* \"#utility.yul\":9095:9102   */\n      dup8\n        /* \"#utility.yul\":9091:9114   */\n      sub\n        /* \"#utility.yul\":9087:9120   */\n      slt\n        /* \"#utility.yul\":9084:9137   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":9133:9134   */\n      0x00\n        /* \"#utility.yul\":9130:9131   */\n      dup1\n        /* \"#utility.yul\":9123:9135   */\n      revert\n        /* \"#utility.yul\":9084:9137   */\n    tag_498:\n        /* \"#utility.yul\":9156:9185   */\n      tag_499\n        /* \"#utility.yul\":9175:9184   */\n      dup6\n        /* \"#utility.yul\":9156:9185   */\n      tag_399\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9146:9185   */\n      swap4\n      pop\n        /* \"#utility.yul\":9204:9242   */\n      tag_500\n        /* \"#utility.yul\":9238:9240   */\n      0x20\n        /* \"#utility.yul\":9227:9236   */\n      dup7\n        /* \"#utility.yul\":9223:9241   */\n      add\n        /* \"#utility.yul\":9204:9242   */\n      tag_399\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9194:9242   */\n      swap3\n      pop\n        /* \"#utility.yul\":9289:9291   */\n      0x40\n        /* \"#utility.yul\":9278:9287   */\n      dup6\n        /* \"#utility.yul\":9274:9292   */\n      add\n        /* \"#utility.yul\":9261:9293   */\n      calldataload\n        /* \"#utility.yul\":9251:9293   */\n      swap2\n      pop\n        /* \"#utility.yul\":9344:9346   */\n      0x60\n        /* \"#utility.yul\":9333:9342   */\n      dup6\n        /* \"#utility.yul\":9329:9347   */\n      add\n        /* \"#utility.yul\":9316:9348   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":9363:9369   */\n      dup2\n        /* \"#utility.yul\":9360:9390   */\n      gt\n        /* \"#utility.yul\":9357:9407   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":9403:9404   */\n      0x00\n        /* \"#utility.yul\":9400:9401   */\n      dup1\n        /* \"#utility.yul\":9393:9405   */\n      revert\n        /* \"#utility.yul\":9357:9407   */\n    tag_501:\n        /* \"#utility.yul\":9426:9448   */\n      dup6\n      add\n        /* \"#utility.yul\":9479:9483   */\n      0x1f\n        /* \"#utility.yul\":9471:9484   */\n      dup2\n      add\n        /* \"#utility.yul\":9467:9494   */\n      dup8\n      sgt\n        /* \"#utility.yul\":9457:9512   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":9508:9509   */\n      0x00\n        /* \"#utility.yul\":9505:9506   */\n      dup1\n        /* \"#utility.yul\":9498:9510   */\n      revert\n        /* \"#utility.yul\":9457:9512   */\n    tag_502:\n        /* \"#utility.yul\":9531:9605   */\n      tag_503\n        /* \"#utility.yul\":9597:9604   */\n      dup8\n        /* \"#utility.yul\":9592:9594   */\n      dup3\n        /* \"#utility.yul\":9579:9595   */\n      calldataload\n        /* \"#utility.yul\":9574:9576   */\n      0x20\n        /* \"#utility.yul\":9570:9572   */\n      dup5\n        /* \"#utility.yul\":9566:9577   */\n      add\n        /* \"#utility.yul\":9531:9605   */\n      tag_402\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9521:9605   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8944:9611   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9616:9876   */\n    tag_103:\n        /* \"#utility.yul\":9684:9690   */\n      0x00\n        /* \"#utility.yul\":9692:9698   */\n      dup1\n        /* \"#utility.yul\":9745:9747   */\n      0x40\n        /* \"#utility.yul\":9733:9742   */\n      dup4\n        /* \"#utility.yul\":9724:9731   */\n      dup6\n        /* \"#utility.yul\":9720:9743   */\n      sub\n        /* \"#utility.yul\":9716:9748   */\n      slt\n        /* \"#utility.yul\":9713:9765   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9761:9762   */\n      0x00\n        /* \"#utility.yul\":9758:9759   */\n      dup1\n        /* \"#utility.yul\":9751:9763   */\n      revert\n        /* \"#utility.yul\":9713:9765   */\n    tag_505:\n        /* \"#utility.yul\":9784:9813   */\n      tag_506\n        /* \"#utility.yul\":9803:9812   */\n      dup4\n        /* \"#utility.yul\":9784:9813   */\n      tag_399\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9774:9813   */\n      swap2\n      pop\n        /* \"#utility.yul\":9832:9870   */\n      tag_507\n        /* \"#utility.yul\":9866:9868   */\n      0x20\n        /* \"#utility.yul\":9855:9864   */\n      dup5\n        /* \"#utility.yul\":9851:9869   */\n      add\n        /* \"#utility.yul\":9832:9870   */\n      tag_399\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9822:9870   */\n      swap1\n      pop\n        /* \"#utility.yul\":9616:9876   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9881:10261   */\n    tag_116:\n        /* \"#utility.yul\":9960:9961   */\n      0x01\n        /* \"#utility.yul\":9956:9968   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":10003:10015   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":10024:10085   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":10078:10082   */\n      0x7f\n        /* \"#utility.yul\":10070:10076   */\n      dup3\n        /* \"#utility.yul\":10066:10083   */\n      and\n        /* \"#utility.yul\":10056:10083   */\n      swap2\n      pop\n        /* \"#utility.yul\":10024:10085   */\n    tag_509:\n        /* \"#utility.yul\":10131:10133   */\n      0x20\n        /* \"#utility.yul\":10123:10129   */\n      dup3\n        /* \"#utility.yul\":10120:10134   */\n      lt\n        /* \"#utility.yul\":10100:10118   */\n      dup2\n        /* \"#utility.yul\":10097:10135   */\n      sub\n        /* \"#utility.yul\":10094:10255   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":10177:10187   */\n      0x4e487b71\n        /* \"#utility.yul\":10172:10175   */\n      0xe0\n        /* \"#utility.yul\":10168:10188   */\n      shl\n        /* \"#utility.yul\":10165:10166   */\n      0x00\n        /* \"#utility.yul\":10158:10189   */\n      mstore\n        /* \"#utility.yul\":10212:10216   */\n      0x22\n        /* \"#utility.yul\":10209:10210   */\n      0x04\n        /* \"#utility.yul\":10202:10217   */\n      mstore\n        /* \"#utility.yul\":10240:10244   */\n      0x24\n        /* \"#utility.yul\":10237:10238   */\n      0x00\n        /* \"#utility.yul\":10230:10245   */\n      revert\n        /* \"#utility.yul\":10094:10255   */\n    tag_510:\n      pop\n        /* \"#utility.yul\":9881:10261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10646:10919   */\n    tag_155:\n        /* \"#utility.yul\":10831:10837   */\n      dup2\n        /* \"#utility.yul\":10823:10829   */\n      dup4\n        /* \"#utility.yul\":10818:10821   */\n      dup3\n        /* \"#utility.yul\":10805:10838   */\n      calldatacopy\n        /* \"#utility.yul\":10787:10790   */\n      0x00\n        /* \"#utility.yul\":10857:10873   */\n      swap2\n      add\n        /* \"#utility.yul\":10882:10895   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10857:10873   */\n      swap2\n        /* \"#utility.yul\":10646:10919   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11334   */\n    tag_170:\n        /* \"#utility.yul\":11126:11128   */\n      0x20\n        /* \"#utility.yul\":11108:11129   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11165:11167   */\n      0x2e\n        /* \"#utility.yul\":11145:11163   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11138:11168   */\n      mstore\n        /* \"#utility.yul\":11204:11238   */\n      0x43726564697420747970657320616e6420737570706c79206c696d697473206c\n        /* \"#utility.yul\":11199:11201   */\n      0x40\n        /* \"#utility.yul\":11184:11202   */\n      dup3\n      add\n        /* \"#utility.yul\":11177:11239   */\n      mstore\n      shl(0x93, 0x0cadccee8d040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":11270:11272   */\n      0x60\n        /* \"#utility.yul\":11255:11273   */\n      dup3\n      add\n        /* \"#utility.yul\":11248:11292   */\n      mstore\n        /* \"#utility.yul\":11324:11327   */\n      0x80\n        /* \"#utility.yul\":11309:11328   */\n      add\n      swap1\n        /* \"#utility.yul\":10924:11334   */\n      jump\t// out\n        /* \"#utility.yul\":11339:11561   */\n    tag_172:\n        /* \"#utility.yul\":11404:11413   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11425:11435   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11422:11555   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":11477:11487   */\n      0x4e487b71\n        /* \"#utility.yul\":11472:11475   */\n      0xe0\n        /* \"#utility.yul\":11468:11488   */\n      shl\n        /* \"#utility.yul\":11465:11466   */\n      0x00\n        /* \"#utility.yul\":11458:11489   */\n      mstore\n        /* \"#utility.yul\":11512:11516   */\n      0x11\n        /* \"#utility.yul\":11509:11510   */\n      0x04\n        /* \"#utility.yul\":11502:11517   */\n      mstore\n        /* \"#utility.yul\":11540:11544   */\n      0x24\n        /* \"#utility.yul\":11537:11538   */\n      0x00\n        /* \"#utility.yul\":11530:11545   */\n      revert\n        /* \"#utility.yul\":11566:11693   */\n    tag_180:\n        /* \"#utility.yul\":11627:11637   */\n      0x4e487b71\n        /* \"#utility.yul\":11622:11625   */\n      0xe0\n        /* \"#utility.yul\":11618:11638   */\n      shl\n        /* \"#utility.yul\":11615:11616   */\n      0x00\n        /* \"#utility.yul\":11608:11639   */\n      mstore\n        /* \"#utility.yul\":11658:11662   */\n      0x32\n        /* \"#utility.yul\":11655:11656   */\n      0x04\n        /* \"#utility.yul\":11648:11663   */\n      mstore\n        /* \"#utility.yul\":11682:11686   */\n      0x24\n        /* \"#utility.yul\":11679:11680   */\n      0x00\n        /* \"#utility.yul\":11672:11687   */\n      revert\n        /* \"#utility.yul\":11824:12342   */\n    tag_406:\n        /* \"#utility.yul\":11926:11928   */\n      0x1f\n        /* \"#utility.yul\":11921:11924   */\n      dup3\n        /* \"#utility.yul\":11918:11929   */\n      gt\n        /* \"#utility.yul\":11915:12336   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":11962:11967   */\n      dup1\n        /* \"#utility.yul\":11959:11960   */\n      0x00\n        /* \"#utility.yul\":11952:11968   */\n      mstore\n        /* \"#utility.yul\":12006:12010   */\n      0x20\n        /* \"#utility.yul\":12003:12004   */\n      0x00\n        /* \"#utility.yul\":11993:12011   */\n      keccak256\n        /* \"#utility.yul\":12076:12078   */\n      0x1f\n        /* \"#utility.yul\":12064:12074   */\n      dup5\n        /* \"#utility.yul\":12060:12079   */\n      add\n        /* \"#utility.yul\":12057:12058   */\n      0x05\n        /* \"#utility.yul\":12053:12080   */\n      shr\n        /* \"#utility.yul\":12047:12051   */\n      dup2\n        /* \"#utility.yul\":12043:12081   */\n      add\n        /* \"#utility.yul\":12112:12116   */\n      0x20\n        /* \"#utility.yul\":12100:12110   */\n      dup6\n        /* \"#utility.yul\":12097:12117   */\n      lt\n        /* \"#utility.yul\":12094:12141   */\n      iszero\n      tag_520\n      jumpi\n      pop\n        /* \"#utility.yul\":12135:12139   */\n      dup1\n        /* \"#utility.yul\":12094:12141   */\n    tag_520:\n        /* \"#utility.yul\":12190:12192   */\n      0x1f\n        /* \"#utility.yul\":12185:12188   */\n      dup5\n        /* \"#utility.yul\":12181:12193   */\n      add\n        /* \"#utility.yul\":12178:12179   */\n      0x05\n        /* \"#utility.yul\":12174:12194   */\n      shr\n        /* \"#utility.yul\":12168:12172   */\n      dup3\n        /* \"#utility.yul\":12164:12195   */\n      add\n        /* \"#utility.yul\":12154:12195   */\n      swap2\n      pop\n        /* \"#utility.yul\":12245:12326   */\n    tag_521:\n        /* \"#utility.yul\":12263:12265   */\n      dup2\n        /* \"#utility.yul\":12256:12261   */\n      dup2\n        /* \"#utility.yul\":12253:12266   */\n      lt\n        /* \"#utility.yul\":12245:12326   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":12322:12323   */\n      0x00\n        /* \"#utility.yul\":12308:12324   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12289:12290   */\n      0x01\n        /* \"#utility.yul\":12278:12291   */\n      add\n        /* \"#utility.yul\":12245:12326   */\n      jump(tag_521)\n        /* \"#utility.yul\":12518:13863   */\n    tag_183:\n        /* \"#utility.yul\":12644:12647   */\n      dup2\n        /* \"#utility.yul\":12638:12648   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":12663:12669   */\n      dup2\n        /* \"#utility.yul\":12660:12690   */\n      gt\n        /* \"#utility.yul\":12657:12713   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":12693:12711   */\n      tag_527\n      tag_329\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12722:12819   */\n      tag_528\n        /* \"#utility.yul\":12812:12818   */\n      dup2\n        /* \"#utility.yul\":12772:12810   */\n      tag_529\n        /* \"#utility.yul\":12804:12808   */\n      dup5\n        /* \"#utility.yul\":12798:12809   */\n      sload\n        /* \"#utility.yul\":12772:12810   */\n      tag_116\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12766:12770   */\n      dup5\n        /* \"#utility.yul\":12722:12819   */\n      tag_406\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":12874:12878   */\n      0x20\n      dup1\n        /* \"#utility.yul\":12931:12933   */\n      0x1f\n        /* \"#utility.yul\":12920:12934   */\n      dup4\n      gt\n        /* \"#utility.yul\":12948:12949   */\n      0x01\n        /* \"#utility.yul\":12943:13606   */\n      dup2\n      eq\n      tag_531\n      jumpi\n        /* \"#utility.yul\":13650:13651   */\n      0x00\n        /* \"#utility.yul\":13667:13673   */\n      dup5\n        /* \"#utility.yul\":13664:13753   */\n      iszero\n      tag_532\n      jumpi\n      pop\n        /* \"#utility.yul\":13719:13738   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":13713:13739   */\n      mload\n        /* \"#utility.yul\":13664:13753   */\n    tag_532:\n      not(0x00)\n        /* \"#utility.yul\":12475:12476   */\n      0x03\n        /* \"#utility.yul\":12471:12482   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":12467:12491   */\n      shr\n        /* \"#utility.yul\":12463:12492   */\n      not\n        /* \"#utility.yul\":12453:12493   */\n      and\n        /* \"#utility.yul\":12499:12500   */\n      0x01\n        /* \"#utility.yul\":12495:12506   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":12450:12507   */\n      or\n        /* \"#utility.yul\":13766:13847   */\n      dup6\n      sstore\n        /* \"#utility.yul\":12913:13857   */\n      jump(tag_237)\n        /* \"#utility.yul\":12943:13606   */\n    tag_531:\n        /* \"#utility.yul\":11771:11772   */\n      0x00\n        /* \"#utility.yul\":11764:11778   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":11808:11812   */\n      0x20\n        /* \"#utility.yul\":11795:11813   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":12979:12999   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":13097:13333   */\n    tag_535:\n        /* \"#utility.yul\":13111:13118   */\n      dup3\n        /* \"#utility.yul\":13108:13109   */\n      dup2\n        /* \"#utility.yul\":13105:13119   */\n      lt\n        /* \"#utility.yul\":13097:13333   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":13200:13219   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":13194:13220   */\n      mload\n        /* \"#utility.yul\":13179:13221   */\n      dup3\n      sstore\n        /* \"#utility.yul\":13292:13319   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":13260:13261   */\n      0x01\n        /* \"#utility.yul\":13248:13262   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":13127:13146   */\n      dup5\n      add\n        /* \"#utility.yul\":13097:13333   */\n      jump(tag_535)\n    tag_537:\n        /* \"#utility.yul\":13101:13104   */\n      pop\n        /* \"#utility.yul\":13361:13367   */\n      dup6\n        /* \"#utility.yul\":13352:13359   */\n      dup3\n        /* \"#utility.yul\":13349:13368   */\n      lt\n        /* \"#utility.yul\":13346:13547   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":13422:13441   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":13416:13442   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":13505:13506   */\n      0x03\n        /* \"#utility.yul\":13501:13515   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":13517:13520   */\n      0xf8\n        /* \"#utility.yul\":13497:13521   */\n      and\n        /* \"#utility.yul\":13493:13530   */\n      shr\n        /* \"#utility.yul\":13489:13531   */\n      not\n        /* \"#utility.yul\":13474:13532   */\n      and\n        /* \"#utility.yul\":13459:13533   */\n      dup2\n      sstore\n        /* \"#utility.yul\":13346:13547   */\n    tag_538:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13593:13594   */\n      0x01\n        /* \"#utility.yul\":13577:13591   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":13573:13595   */\n      add\n        /* \"#utility.yul\":13560:13596   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":12518:13863   */\n      jump\t// out\n        /* \"#utility.yul\":13868:14080   */\n    tag_408:\n        /* \"#utility.yul\":13910:13913   */\n      0x00\n        /* \"#utility.yul\":13948:13953   */\n      dup2\n        /* \"#utility.yul\":13942:13954   */\n      mload\n        /* \"#utility.yul\":13992:13998   */\n      dup1\n        /* \"#utility.yul\":13985:13989   */\n      0x20\n        /* \"#utility.yul\":13978:13983   */\n      dup5\n        /* \"#utility.yul\":13974:13990   */\n      add\n        /* \"#utility.yul\":13969:13972   */\n      dup6\n        /* \"#utility.yul\":13963:13999   */\n      mcopy\n        /* \"#utility.yul\":14054:14055   */\n      0x00\n        /* \"#utility.yul\":14018:14034   */\n      swap4\n      add\n        /* \"#utility.yul\":14043:14056   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":14018:14034   */\n      swap1\n      swap2\n        /* \"#utility.yul\":13868:14080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14085:14277   */\n    tag_189:\n        /* \"#utility.yul\":14216:14219   */\n      0x00\n        /* \"#utility.yul\":14241:14271   */\n      tag_255\n        /* \"#utility.yul\":14267:14270   */\n      dup3\n        /* \"#utility.yul\":14259:14265   */\n      dup5\n        /* \"#utility.yul\":14241:14271   */\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":14282:14584   */\n    tag_199:\n        /* \"#utility.yul\":14459:14461   */\n      0x40\n        /* \"#utility.yul\":14448:14457   */\n      dup2\n        /* \"#utility.yul\":14441:14462   */\n      mstore\n        /* \"#utility.yul\":14422:14426   */\n      0x00\n        /* \"#utility.yul\":14479:14535   */\n      tag_543\n        /* \"#utility.yul\":14531:14533   */\n      0x40\n        /* \"#utility.yul\":14520:14529   */\n      dup4\n        /* \"#utility.yul\":14516:14534   */\n      add\n        /* \"#utility.yul\":14508:14514   */\n      dup6\n        /* \"#utility.yul\":14479:14535   */\n      tag_398\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14471:14535   */\n      swap1\n      pop\n        /* \"#utility.yul\":14571:14577   */\n      dup3\n        /* \"#utility.yul\":14566:14568   */\n      0x20\n        /* \"#utility.yul\":14555:14564   */\n      dup4\n        /* \"#utility.yul\":14551:14569   */\n      add\n        /* \"#utility.yul\":14544:14578   */\n      mstore\n        /* \"#utility.yul\":14282:14584   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14589:15111   */\n    tag_224:\n        /* \"#utility.yul\":14667:14671   */\n      0x00\n        /* \"#utility.yul\":14673:14679   */\n      dup1\n        /* \"#utility.yul\":14733:14744   */\n      dup4\n        /* \"#utility.yul\":14720:14745   */\n      calldataload\n        /* \"#utility.yul\":14827:14829   */\n      0x1e\n        /* \"#utility.yul\":14823:14830   */\n      not\n        /* \"#utility.yul\":14812:14820   */\n      dup5\n        /* \"#utility.yul\":14796:14810   */\n      calldatasize\n        /* \"#utility.yul\":14792:14821   */\n      sub\n        /* \"#utility.yul\":14788:14831   */\n      add\n        /* \"#utility.yul\":14768:14786   */\n      dup2\n        /* \"#utility.yul\":14764:14832   */\n      slt\n        /* \"#utility.yul\":14754:14850   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":14846:14847   */\n      0x00\n        /* \"#utility.yul\":14843:14844   */\n      dup1\n        /* \"#utility.yul\":14836:14848   */\n      revert\n        /* \"#utility.yul\":14754:14850   */\n    tag_545:\n        /* \"#utility.yul\":14873:14906   */\n      dup4\n      add\n        /* \"#utility.yul\":14925:14945   */\n      dup1\n      calldataload\n      swap2\n      pop\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":14957:14987   */\n      dup3\n      gt\n        /* \"#utility.yul\":14954:15004   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":15000:15001   */\n      0x00\n        /* \"#utility.yul\":14997:14998   */\n      dup1\n        /* \"#utility.yul\":14990:15002   */\n      revert\n        /* \"#utility.yul\":14954:15004   */\n    tag_546:\n        /* \"#utility.yul\":15033:15037   */\n      0x20\n        /* \"#utility.yul\":15021:15038   */\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":15064:15078   */\n      calldatasize\n        /* \"#utility.yul\":15060:15087   */\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":15050:15088   */\n      dup3\n      sgt\n        /* \"#utility.yul\":15047:15105   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":15101:15102   */\n      0x00\n        /* \"#utility.yul\":15098:15099   */\n      dup1\n        /* \"#utility.yul\":15091:15103   */\n      revert\n        /* \"#utility.yul\":15116:16314   */\n    tag_227:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":15235:15238   */\n      dup4\n        /* \"#utility.yul\":15232:15259   */\n      gt\n        /* \"#utility.yul\":15229:15282   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":15262:15280   */\n      tag_550\n      tag_329\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15291:15385   */\n      tag_551\n        /* \"#utility.yul\":15381:15384   */\n      dup4\n        /* \"#utility.yul\":15341:15379   */\n      tag_552\n        /* \"#utility.yul\":15373:15377   */\n      dup4\n        /* \"#utility.yul\":15367:15378   */\n      sload\n        /* \"#utility.yul\":15341:15379   */\n      tag_116\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15335:15339   */\n      dup4\n        /* \"#utility.yul\":15291:15385   */\n      tag_406\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15411:15412   */\n      0x00\n        /* \"#utility.yul\":15436:15438   */\n      0x1f\n        /* \"#utility.yul\":15431:15434   */\n      dup5\n        /* \"#utility.yul\":15428:15439   */\n      gt\n        /* \"#utility.yul\":15453:15454   */\n      0x01\n        /* \"#utility.yul\":15448:16056   */\n      dup2\n      eq\n      tag_554\n      jumpi\n        /* \"#utility.yul\":16100:16101   */\n      0x00\n        /* \"#utility.yul\":16117:16120   */\n      dup6\n        /* \"#utility.yul\":16114:16207   */\n      iszero\n      tag_555\n      jumpi\n      pop\n        /* \"#utility.yul\":16173:16192   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":16160:16193   */\n      calldataload\n        /* \"#utility.yul\":16114:16207   */\n    tag_555:\n      not(0x00)\n        /* \"#utility.yul\":12475:12476   */\n      0x03\n        /* \"#utility.yul\":12471:12482   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":12467:12491   */\n      shr\n        /* \"#utility.yul\":12463:12492   */\n      not\n        /* \"#utility.yul\":12453:12493   */\n      and\n        /* \"#utility.yul\":12499:12500   */\n      0x01\n        /* \"#utility.yul\":12495:12506   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":12450:12507   */\n      or\n        /* \"#utility.yul\":16220:16298   */\n      dup4\n      sstore\n        /* \"#utility.yul\":15421:16308   */\n      jump(tag_192)\n        /* \"#utility.yul\":15448:16056   */\n    tag_554:\n        /* \"#utility.yul\":11771:11772   */\n      0x00\n        /* \"#utility.yul\":11764:11778   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":11808:11812   */\n      0x20\n        /* \"#utility.yul\":11795:11813   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":15484:15501   */\n      dup8\n      and\n      swap2\n        /* \"#utility.yul\":15599:15828   */\n    tag_558:\n        /* \"#utility.yul\":15613:15620   */\n      dup3\n        /* \"#utility.yul\":15610:15611   */\n      dup2\n        /* \"#utility.yul\":15607:15621   */\n      lt\n        /* \"#utility.yul\":15599:15828   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":15702:15721   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":15689:15722   */\n      calldataload\n        /* \"#utility.yul\":15674:15723   */\n      dup3\n      sstore\n        /* \"#utility.yul\":15809:15813   */\n      0x20\n        /* \"#utility.yul\":15794:15814   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":15762:15763   */\n      0x01\n        /* \"#utility.yul\":15750:15764   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":15629:15641   */\n      add\n        /* \"#utility.yul\":15599:15828   */\n      jump(tag_558)\n    tag_560:\n        /* \"#utility.yul\":15603:15606   */\n      pop\n        /* \"#utility.yul\":15856:15859   */\n      dup7\n        /* \"#utility.yul\":15847:15854   */\n      dup3\n        /* \"#utility.yul\":15844:15860   */\n      lt\n        /* \"#utility.yul\":15841:16000   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":15980:15981   */\n      0x00\n        /* \"#utility.yul\":15976:15982   */\n      not\n        /* \"#utility.yul\":15970:15973   */\n      0xf8\n        /* \"#utility.yul\":15964:15967   */\n      dup9\n        /* \"#utility.yul\":15961:15962   */\n      0x03\n        /* \"#utility.yul\":15957:15968   */\n      shl\n        /* \"#utility.yul\":15953:15974   */\n      and\n        /* \"#utility.yul\":15949:15983   */\n      shr\n        /* \"#utility.yul\":15945:15984   */\n      not\n        /* \"#utility.yul\":15932:15941   */\n      dup5\n        /* \"#utility.yul\":15927:15930   */\n      dup8\n        /* \"#utility.yul\":15923:15942   */\n      add\n        /* \"#utility.yul\":15910:15943   */\n      calldataload\n        /* \"#utility.yul\":15906:15985   */\n      and\n        /* \"#utility.yul\":15898:15904   */\n      dup2\n        /* \"#utility.yul\":15891:15986   */\n      sstore\n        /* \"#utility.yul\":15841:16000   */\n    tag_561:\n      pop\n      pop\n        /* \"#utility.yul\":16043:16044   */\n      0x01\n        /* \"#utility.yul\":16037:16040   */\n      dup6\n        /* \"#utility.yul\":16034:16035   */\n      0x01\n        /* \"#utility.yul\":16030:16041   */\n      shl\n        /* \"#utility.yul\":16026:16045   */\n      add\n        /* \"#utility.yul\":16020:16024   */\n      dup4\n        /* \"#utility.yul\":16013:16046   */\n      sstore\n        /* \"#utility.yul\":15421:16308   */\n      pop\n      pop\n        /* \"#utility.yul\":15116:16314   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16319:16586   */\n    tag_409:\n        /* \"#utility.yul\":16408:16414   */\n      dup2\n        /* \"#utility.yul\":16403:16406   */\n      dup4\n        /* \"#utility.yul\":16396:16415   */\n      mstore\n        /* \"#utility.yul\":16460:16466   */\n      dup2\n        /* \"#utility.yul\":16453:16458   */\n      dup2\n        /* \"#utility.yul\":16446:16450   */\n      0x20\n        /* \"#utility.yul\":16441:16444   */\n      dup6\n        /* \"#utility.yul\":16437:16451   */\n      add\n        /* \"#utility.yul\":16424:16467   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":16512:16513   */\n      0x00\n        /* \"#utility.yul\":16487:16503   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":16505:16509   */\n      0x20\n        /* \"#utility.yul\":16483:16510   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16476:16514   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":16568:16570   */\n      0x1f\n        /* \"#utility.yul\":16547:16562   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16543:16572   */\n      and\n        /* \"#utility.yul\":16534:16573   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":16530:16580   */\n      add\n      swap1\n        /* \"#utility.yul\":16319:16586   */\n      jump\t// out\n        /* \"#utility.yul\":16591:17820   */\n    tag_235:\n        /* \"#utility.yul\":16794:16796   */\n      0x20\n        /* \"#utility.yul\":16846:16867   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16819:16837   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16902:16924   */\n      dup4\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":16955:16957   */\n      0x40\n        /* \"#utility.yul\":17004:17005   */\n      0x05\n        /* \"#utility.yul\":17000:17014   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":16985:17015   */\n      dup5\n      add\n        /* \"#utility.yul\":16981:17020   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":16940:16958   */\n      dup5\n      add\n        /* \"#utility.yul\":17043:17049   */\n      dup7\n      dup5\n        /* \"#utility.yul\":17077:17791   */\n    tag_564:\n        /* \"#utility.yul\":17091:17097   */\n      dup8\n        /* \"#utility.yul\":17088:17089   */\n      dup2\n        /* \"#utility.yul\":17085:17098   */\n      lt\n        /* \"#utility.yul\":17077:17791   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":17156:17178   */\n      dup7\n      dup5\n      sub\n      not(0x3f)\n        /* \"#utility.yul\":17152:17188   */\n      add\n        /* \"#utility.yul\":17140:17189   */\n      dup4\n      mstore\n        /* \"#utility.yul\":17228:17248   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":17303:17317   */\n      calldatasize\n        /* \"#utility.yul\":17299:17326   */\n      dup11\n      swap1\n      sub\n      not(0x1e)\n        /* \"#utility.yul\":17295:17336   */\n      add\n        /* \"#utility.yul\":17271:17337   */\n      dup2\n      slt\n        /* \"#utility.yul\":17261:17355   */\n      tag_567\n      jumpi\n        /* \"#utility.yul\":17351:17352   */\n      0x00\n        /* \"#utility.yul\":17348:17349   */\n      dup1\n        /* \"#utility.yul\":17341:17353   */\n      revert\n        /* \"#utility.yul\":17261:17355   */\n    tag_567:\n        /* \"#utility.yul\":17381:17412   */\n      dup10\n      add\n        /* \"#utility.yul\":17486:17500   */\n      dup6\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":17439:17458   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":17516:17546   */\n      dup2\n      gt\n        /* \"#utility.yul\":17513:17563   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":17559:17560   */\n      0x00\n        /* \"#utility.yul\":17556:17557   */\n      dup1\n        /* \"#utility.yul\":17549:17561   */\n      revert\n        /* \"#utility.yul\":17513:17563   */\n    tag_568:\n        /* \"#utility.yul\":17612:17618   */\n      dup1\n        /* \"#utility.yul\":17596:17610   */\n      calldatasize\n        /* \"#utility.yul\":17592:17619   */\n      sub\n        /* \"#utility.yul\":17583:17590   */\n      dup3\n        /* \"#utility.yul\":17579:17620   */\n      sgt\n        /* \"#utility.yul\":17576:17637   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":17633:17634   */\n      0x00\n        /* \"#utility.yul\":17630:17631   */\n      dup1\n        /* \"#utility.yul\":17623:17635   */\n      revert\n        /* \"#utility.yul\":17576:17637   */\n    tag_569:\n        /* \"#utility.yul\":17660:17711   */\n      tag_570\n        /* \"#utility.yul\":17704:17710   */\n      dup7\n        /* \"#utility.yul\":17696:17702   */\n      dup3\n        /* \"#utility.yul\":17687:17694   */\n      dup5\n        /* \"#utility.yul\":17660:17711   */\n      tag_409\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":17650:17711   */\n      swap6\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17769:17781   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":17734:17749   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":17113:17114   */\n      0x01\n        /* \"#utility.yul\":17106:17115   */\n      add\n        /* \"#utility.yul\":17077:17791   */\n      jump(tag_564)\n    tag_566:\n      pop\n        /* \"#utility.yul\":17808:17814   */\n      swap2\n      swap8\n        /* \"#utility.yul\":16591:17820   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17825:18143   */\n    tag_245:\n        /* \"#utility.yul\":18012:18014   */\n      0x40\n        /* \"#utility.yul\":18001:18010   */\n      dup2\n        /* \"#utility.yul\":17994:18015   */\n      mstore\n        /* \"#utility.yul\":17975:17979   */\n      0x00\n        /* \"#utility.yul\":18032:18094   */\n      tag_572\n        /* \"#utility.yul\":18090:18092   */\n      0x40\n        /* \"#utility.yul\":18079:18088   */\n      dup4\n        /* \"#utility.yul\":18075:18093   */\n      add\n        /* \"#utility.yul\":18067:18073   */\n      dup6\n        /* \"#utility.yul\":18059:18065   */\n      dup8\n        /* \"#utility.yul\":18032:18094   */\n      tag_409\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":18024:18094   */\n      swap1\n      pop\n        /* \"#utility.yul\":18130:18136   */\n      dup3\n        /* \"#utility.yul\":18125:18127   */\n      0x20\n        /* \"#utility.yul\":18114:18123   */\n      dup4\n        /* \"#utility.yul\":18110:18128   */\n      add\n        /* \"#utility.yul\":18103:18137   */\n      mstore\n        /* \"#utility.yul\":17825:18143   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18148:18415   */\n    tag_259:\n        /* \"#utility.yul\":18327:18330   */\n      0x00\n        /* \"#utility.yul\":18352:18409   */\n      tag_381\n        /* \"#utility.yul\":18378:18408   */\n      tag_575\n        /* \"#utility.yul\":18404:18407   */\n      dup4\n        /* \"#utility.yul\":18396:18402   */\n      dup7\n        /* \"#utility.yul\":18378:18408   */\n      tag_408\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":18370:18376   */\n      dup5\n        /* \"#utility.yul\":18352:18409   */\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":18420:18920   */\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18689:18704   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":18671:18705   */\n      dup3\n      mstore\n        /* \"#utility.yul\":18741:18756   */\n      dup5\n      and\n        /* \"#utility.yul\":18736:18738   */\n      0x20\n        /* \"#utility.yul\":18721:18739   */\n      dup3\n      add\n        /* \"#utility.yul\":18714:18757   */\n      mstore\n        /* \"#utility.yul\":18788:18790   */\n      0x40\n        /* \"#utility.yul\":18773:18791   */\n      dup2\n      add\n        /* \"#utility.yul\":18766:18800   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":18836:18839   */\n      0x80\n        /* \"#utility.yul\":18831:18833   */\n      0x60\n        /* \"#utility.yul\":18816:18834   */\n      dup3\n      add\n        /* \"#utility.yul\":18809:18840   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18614:18618   */\n      0x00\n      swap1\n        /* \"#utility.yul\":18857:18914   */\n      tag_577\n      swap1\n        /* \"#utility.yul\":18894:18913   */\n      dup4\n      add\n        /* \"#utility.yul\":18886:18892   */\n      dup5\n        /* \"#utility.yul\":18857:18914   */\n      tag_398\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":18849:18914   */\n      swap7\n        /* \"#utility.yul\":18420:18920   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18925:19174   */\n    tag_310:\n        /* \"#utility.yul\":18994:19000   */\n      0x00\n        /* \"#utility.yul\":19047:19049   */\n      0x20\n        /* \"#utility.yul\":19035:19044   */\n      dup3\n        /* \"#utility.yul\":19026:19033   */\n      dup5\n        /* \"#utility.yul\":19022:19045   */\n      sub\n        /* \"#utility.yul\":19018:19050   */\n      slt\n        /* \"#utility.yul\":19015:19067   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":19063:19064   */\n      0x00\n        /* \"#utility.yul\":19060:19061   */\n      dup1\n        /* \"#utility.yul\":19053:19065   */\n      revert\n        /* \"#utility.yul\":19015:19067   */\n    tag_579:\n        /* \"#utility.yul\":19095:19104   */\n      dup2\n        /* \"#utility.yul\":19089:19105   */\n      mload\n        /* \"#utility.yul\":19114:19144   */\n      tag_255\n        /* \"#utility.yul\":19138:19143   */\n      dup2\n        /* \"#utility.yul\":19114:19144   */\n      tag_397\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e30b7d5a594251fbfba1c4a1de4c25049b8833901d14e92e289b3ee7ba5fab6764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2988": {
									"entryPoint": null,
									"id": 2988,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 170,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2906:13",
										"nodeType": "YulBlock",
										"src": "0:2906:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:13",
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:13",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:13",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:13",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nativeSrc": "66:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nativeSrc": "56:31:13",
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nativeSrc": "56:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:13",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:13",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nativeSrc": "96:15:13",
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nativeSrc": "96:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:13",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:13",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nativeSrc": "120:15:13",
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nativeSrc": "120:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nativeSrc": "201:325:13",
													"nodeType": "YulBlock",
													"src": "201:325:13",
													"statements": [
														{
															"nativeSrc": "211:22:13",
															"nodeType": "YulAssignment",
															"src": "211:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:13",
																		"nodeType": "YulLiteral",
																		"src": "225:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:13"
																},
																"nativeSrc": "221:12:13",
																"nodeType": "YulFunctionCall",
																"src": "221:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:13"
																}
															]
														},
														{
															"nativeSrc": "242:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "278:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:13"
																},
																"nativeSrc": "268:12:13",
																"nodeType": "YulFunctionCall",
																"src": "268:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:13",
																	"nodeType": "YulTypedName",
																	"src": "246:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:13",
																"nodeType": "YulBlock",
																"src": "319:31:13",
																"statements": [
																	{
																		"nativeSrc": "321:27:13",
																		"nodeType": "YulAssignment",
																		"src": "321:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:13",
																					"nodeType": "YulLiteral",
																					"src": "343:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:13"
																			},
																			"nativeSrc": "331:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:13"
																},
																"nativeSrc": "292:26:13",
																"nodeType": "YulFunctionCall",
																"src": "292:26:13"
															},
															"nativeSrc": "289:61:13",
															"nodeType": "YulIf",
															"src": "289:61:13"
														},
														{
															"body": {
																"nativeSrc": "409:111:13",
																"nodeType": "YulBlock",
																"src": "409:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:13",
																					"nodeType": "YulLiteral",
																					"src": "430:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:13",
																							"nodeType": "YulLiteral",
																							"src": "437:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:13",
																							"nodeType": "YulLiteral",
																							"src": "442:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:13"
																					},
																					"nativeSrc": "433:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:13"
																			},
																			"nativeSrc": "423:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:13"
																		},
																		"nativeSrc": "423:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:13",
																					"nodeType": "YulLiteral",
																					"src": "474:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:13",
																					"nodeType": "YulLiteral",
																					"src": "477:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:13"
																			},
																			"nativeSrc": "467:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:13"
																		},
																		"nativeSrc": "467:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:13",
																					"nodeType": "YulLiteral",
																					"src": "502:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:13",
																					"nodeType": "YulLiteral",
																					"src": "505:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:13"
																			},
																			"nativeSrc": "495:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:13"
																		},
																		"nativeSrc": "495:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:13",
																				"nodeType": "YulLiteral",
																				"src": "396:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:13"
																		},
																		"nativeSrc": "385:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:13"
																},
																"nativeSrc": "362:38:13",
																"nodeType": "YulFunctionCall",
																"src": "362:38:13"
															},
															"nativeSrc": "359:161:13",
															"nodeType": "YulIf",
															"src": "359:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:13",
														"nodeType": "YulTypedName",
														"src": "181:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:13",
														"nodeType": "YulTypedName",
														"src": "190:6:13",
														"type": ""
													}
												],
												"src": "146:380:13"
											},
											{
												"body": {
													"nativeSrc": "587:65:13",
													"nodeType": "YulBlock",
													"src": "587:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:13",
																		"nodeType": "YulLiteral",
																		"src": "604:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nativeSrc": "597:14:13",
																"nodeType": "YulFunctionCall",
																"src": "597:14:13"
															},
															"nativeSrc": "597:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:13"
														},
														{
															"nativeSrc": "620:26:13",
															"nodeType": "YulAssignment",
															"src": "620:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:13",
																		"nodeType": "YulLiteral",
																		"src": "638:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:13",
																		"nodeType": "YulLiteral",
																		"src": "641:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:13"
																},
																"nativeSrc": "628:18:13",
																"nodeType": "YulFunctionCall",
																"src": "628:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:13",
														"nodeType": "YulTypedName",
														"src": "570:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:13",
														"nodeType": "YulTypedName",
														"src": "578:4:13",
														"type": ""
													}
												],
												"src": "531:121:13"
											},
											{
												"body": {
													"nativeSrc": "738:437:13",
													"nodeType": "YulBlock",
													"src": "738:437:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:13",
																"nodeType": "YulBlock",
																"src": "771:398:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:13",
																					"nodeType": "YulLiteral",
																					"src": "792:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:13"
																			},
																			"nativeSrc": "785:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:13"
																		},
																		"nativeSrc": "785:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:13"
																	},
																	{
																		"nativeSrc": "814:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:13",
																					"nodeType": "YulLiteral",
																					"src": "836:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:13",
																					"nodeType": "YulLiteral",
																					"src": "839:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:13"
																			},
																			"nativeSrc": "826:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:13",
																				"nodeType": "YulTypedName",
																				"src": "818:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:13",
																							"nodeType": "YulLiteral",
																							"src": "890:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:13",
																									"nodeType": "YulLiteral",
																									"src": "909:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:13"
																							},
																							"nativeSrc": "893:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:13"
																					},
																					"nativeSrc": "886:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:13"
																			},
																			"nativeSrc": "876:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:13",
																				"nodeType": "YulTypedName",
																				"src": "861:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:13",
																			"nodeType": "YulBlock",
																			"src": "951:23:13",
																			"statements": [
																				{
																					"nativeSrc": "953:19:13",
																					"nodeType": "YulAssignment",
																					"src": "953:19:13",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:13",
																					"nodeType": "YulLiteral",
																					"src": "945:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:13"
																			},
																			"nativeSrc": "930:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:13"
																		},
																		"nativeSrc": "927:47:13",
																		"nodeType": "YulIf",
																		"src": "927:47:13"
																	},
																	{
																		"nativeSrc": "987:41:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:13",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:13",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:13"
																							},
																							"nativeSrc": "1014:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:13"
																					},
																					"nativeSrc": "1007:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:13"
																			},
																			"nativeSrc": "997:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:13"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:13",
																				"nodeType": "YulTypedName",
																				"src": "991:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:13",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:13",
																			"nodeType": "YulBlock",
																			"src": "1139:20:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:13"
																						},
																						"nativeSrc": "1141:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:13"
																					},
																					"nativeSrc": "1141:16:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:13"
																			},
																			"nativeSrc": "1086:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:13"
																		},
																		"nativeSrc": "1078:81:13",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:13",
																			"nodeType": "YulBlock",
																			"src": "1100:26:13",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:13",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:13"
																						},
																						"nativeSrc": "1111:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:13",
																			"nodeType": "YulBlock",
																			"src": "1082:3:13",
																			"statements": []
																		},
																		"src": "1078:81:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:13",
																		"nodeType": "YulLiteral",
																		"src": "759:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:13"
																},
																"nativeSrc": "751:11:13",
																"nodeType": "YulFunctionCall",
																"src": "751:11:13"
															},
															"nativeSrc": "748:421:13",
															"nodeType": "YulIf",
															"src": "748:421:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:13",
														"nodeType": "YulTypedName",
														"src": "710:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:13",
														"nodeType": "YulTypedName",
														"src": "717:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:13",
														"nodeType": "YulTypedName",
														"src": "722:10:13",
														"type": ""
													}
												],
												"src": "657:518:13"
											},
											{
												"body": {
													"nativeSrc": "1265:81:13",
													"nodeType": "YulBlock",
													"src": "1265:81:13",
													"statements": [
														{
															"nativeSrc": "1275:65:13",
															"nodeType": "YulAssignment",
															"src": "1275:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:13"
																								},
																								"nativeSrc": "1304:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:13"
																								},
																								"nativeSrc": "1317:6:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:13"
																						},
																						"nativeSrc": "1300:24:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:13"
																				},
																				"nativeSrc": "1296:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:13"
																		},
																		"nativeSrc": "1286:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:13"
																		},
																		"nativeSrc": "1328:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:13"
																},
																"nativeSrc": "1283:57:13",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:13",
														"nodeType": "YulTypedName",
														"src": "1242:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:13",
														"nodeType": "YulTypedName",
														"src": "1248:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:13",
														"nodeType": "YulTypedName",
														"src": "1256:4:13",
														"type": ""
													}
												],
												"src": "1180:166:13"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:13",
													"nodeType": "YulBlock",
													"src": "1447:1249:13",
													"statements": [
														{
															"nativeSrc": "1457:24:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:13"
																},
																"nativeSrc": "1471:10:13",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:13",
																"nodeType": "YulBlock",
																"src": "1524:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:13"
																			},
																			"nativeSrc": "1526:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:13"
																		},
																		"nativeSrc": "1526:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:13"
																				},
																				"nativeSrc": "1508:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:13"
																		},
																		"nativeSrc": "1504:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:13"
																},
																"nativeSrc": "1493:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:13"
															},
															"nativeSrc": "1490:56:13",
															"nodeType": "YulIf",
															"src": "1490:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:13"
																				},
																				"nativeSrc": "1631:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:13"
																		},
																		"nativeSrc": "1605:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:13"
																},
																"nativeSrc": "1555:97:13",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:13"
															},
															"nativeSrc": "1555:97:13",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:13"
														},
														{
															"nativeSrc": "1661:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:13",
																"nodeType": "YulLiteral",
																"src": "1678:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:13",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:13",
																"nodeType": "YulLiteral",
																"src": "1707:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:13",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:13",
															"nodeType": "YulAssignment",
															"src": "1720:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:13",
																"nodeType": "YulLiteral",
																"src": "1733:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:13",
																		"nodeType": "YulBlock",
																		"src": "1783:656:13",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:13",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:13"
																							},
																							"nativeSrc": "1824:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:13"
																					},
																					"nativeSrc": "1812:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:13",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:13"
																					},
																					"nativeSrc": "1859:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:13",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:13",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:13",
																					"nodeType": "YulBlock",
																					"src": "1994:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:13"
																												},
																												"nativeSrc": "2033:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:13"
																										},
																										"nativeSrc": "2027:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:13"
																								},
																								"nativeSrc": "2012:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:13"
																							},
																							"nativeSrc": "2012:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:13"
																						},
																						{
																							"nativeSrc": "2071:24:13",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:13",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:13"
																								},
																								"nativeSrc": "2081:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:13",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:13"
																								},
																								"nativeSrc": "2125:27:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:13"
																					},
																					"nativeSrc": "1938:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:13"
																				},
																				"nativeSrc": "1930:236:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:13",
																					"nodeType": "YulBlock",
																					"src": "1953:28:13",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:13",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:13"
																								},
																								"nativeSrc": "1960:19:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:13",
																					"nodeType": "YulBlock",
																					"src": "1934:3:13",
																					"statements": []
																				},
																				"src": "1930:236:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:13",
																					"nodeType": "YulBlock",
																					"src": "2214:166:13",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:13"
																										},
																										"nativeSrc": "2255:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:13"
																								},
																								"nativeSrc": "2249:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:13",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:13"
																																		},
																																		"nativeSrc": "2334:14:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:13"
																																},
																																"nativeSrc": "2330:24:13",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:13"
																																},
																																"nativeSrc": "2356:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:13"
																														},
																														"nativeSrc": "2326:37:13",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:13"
																												},
																												"nativeSrc": "2322:42:13",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:13"
																										},
																										"nativeSrc": "2307:58:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:13"
																								},
																								"nativeSrc": "2292:74:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:13"
																							},
																							"nativeSrc": "2292:74:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:13"
																					},
																					"nativeSrc": "2182:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:13"
																				},
																				"nativeSrc": "2179:201:13",
																				"nodeType": "YulIf",
																				"src": "2179:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:13",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:13"
																									},
																									"nativeSrc": "2410:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:13",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:13"
																							},
																							"nativeSrc": "2406:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:13"
																					},
																					"nativeSrc": "2393:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:13"
																				},
																				"nativeSrc": "2393:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:13"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:13",
																	"nodeType": "YulCase",
																	"src": "1776:663:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:13",
																		"nodeType": "YulBlock",
																		"src": "2456:234:13",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:13",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:13",
																					"nodeType": "YulBlock",
																					"src": "2519:67:13",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:13",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:13"
																										},
																										"nativeSrc": "2552:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:13"
																								},
																								"nativeSrc": "2546:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:13"
																				},
																				"nativeSrc": "2497:89:13",
																				"nodeType": "YulIf",
																				"src": "2497:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:13"
																							},
																							"nativeSrc": "2612:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:13"
																					},
																					"nativeSrc": "2599:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:13"
																				},
																				"nativeSrc": "2599:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:13"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:13",
																	"nodeType": "YulCase",
																	"src": "2448:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:13"
																},
																"nativeSrc": "1753:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:13"
															},
															"nativeSrc": "1746:944:13",
															"nodeType": "YulSwitch",
															"src": "1746:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:13",
														"nodeType": "YulTypedName",
														"src": "1432:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:13",
														"nodeType": "YulTypedName",
														"src": "1438:3:13",
														"type": ""
													}
												],
												"src": "1351:1345:13"
											},
											{
												"body": {
													"nativeSrc": "2802:102:13",
													"nodeType": "YulBlock",
													"src": "2802:102:13",
													"statements": [
														{
															"nativeSrc": "2812:26:13",
															"nodeType": "YulAssignment",
															"src": "2812:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2824:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2824:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2835:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2820:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:13"
																},
																"nativeSrc": "2820:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2820:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2812:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2812:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2854:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2854:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2869:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2869:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2885:3:13",
																								"nodeType": "YulLiteral",
																								"src": "2885:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2890:1:13",
																								"nodeType": "YulLiteral",
																								"src": "2890:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2881:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2881:3:13"
																						},
																						"nativeSrc": "2881:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2881:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2894:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2894:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2877:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2877:3:13"
																				},
																				"nativeSrc": "2877:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2865:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2865:3:13"
																		},
																		"nativeSrc": "2865:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2865:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2847:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2847:6:13"
																},
																"nativeSrc": "2847:51:13",
																"nodeType": "YulFunctionCall",
																"src": "2847:51:13"
															},
															"nativeSrc": "2847:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "2847:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2701:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2771:9:13",
														"nodeType": "YulTypedName",
														"src": "2771:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2782:6:13",
														"nodeType": "YulTypedName",
														"src": "2782:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2793:4:13",
														"nodeType": "YulTypedName",
														"src": "2793:4:13",
														"type": ""
													}
												],
												"src": "2701:203:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b503360405180604001604052806006815260200165139410d3919560d21b815250604051806040016040528060038152602001624e504360e81b815250815f908161005a9190610193565b5060016100678282610193565b5050506001600160a01b03811661009757604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100a0816100aa565b505f600955610252565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061012357607f821691505b60208210810361014157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561018e57805f5260205f20601f840160051c8101602085101561016c5750805b601f840160051c820191505b8181101561018b575f8155600101610178565b50505b505050565b81516001600160401b038111156101ac576101ac6100fb565b6101c0816101ba845461010f565b84610147565b602080601f8311600181146101f3575f84156101dc5750858301515b5f19600386901b1c1916600185901b17855561024a565b5f85815260208120601f198616915b8281101561022157888601518255948401946001909101908401610202565b508582101561023e57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b611c708061025f5f395ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c80637f177d31116100a9578063af77af041161006e578063af77af041461027c578063b88d4fde1461028f578063c87b56dd146102a2578063e985e9c5146102b5578063f2fde38b146102c8575f80fd5b80637f177d311461021d5780638a6054361461023d5780638da5cb5b1461025057806395d89b4114610261578063a22cb46514610269575f80fd5b806342842e0e116100ef57806342842e0e146101bb5780636352211e146101ce57806370a08231146101e1578063715018a614610202578063736dea811461020a575f80fd5b806301ffc9a71461012b57806306fdde0314610153578063081812fc14610168578063095ea7b31461019357806323b872dd146101a8575b5f80fd5b61013e61013936600461125c565b6102db565b60405190151581526020015b60405180910390f35b61015b61032c565b60405161014a91906112a5565b61017b6101763660046112b7565b6103bb565b6040516001600160a01b03909116815260200161014a565b6101a66101a13660046112e9565b6103e2565b005b6101a66101b6366004611311565b6103f1565b6101a66101c9366004611311565b61047f565b61017b6101dc3660046112b7565b61049e565b6101f46101ef36600461134a565b6104a8565b60405190815260200161014a565b6101a66104ed565b6101f4610218366004611363565b610500565b61023061022b3660046112b7565b610535565b60405161014a91906113d7565b6101a661024b36600461155f565b61061a565b6006546001600160a01b031661017b565b61015b6107e2565b6101a661027736600461164e565b6107f1565b6101a661028a3660046116ce565b6107fc565b6101a661029d366004611741565b6109d3565b61015b6102b03660046112b7565b6109ea565b61013e6102c33660046117b7565b610a5b565b6101a66102d636600461134a565b610a88565b5f6001600160e01b031982166380ac58cd60e01b148061030b57506001600160e01b03198216635b5e139f60e01b145b8061032657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461033a906117e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906117e8565b80156103b15780601f10610388576101008083540402835291602001916103b1565b820191905f5260205f20905b81548152906001019060200180831161039457829003601f168201915b5050505050905090565b5f6103c582610ac5565b505f828152600460205260409020546001600160a01b0316610326565b6103ed828233610afd565b5050565b6001600160a01b03821661041f57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61042b838333610b0a565b9050836001600160a01b0316816001600160a01b031614610479576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610416565b50505050565b61049983838360405180602001604052805f8152506109d3565b505050565b5f61032682610ac5565b5f6001600160a01b0382166104d2576040516322718ad960e21b81525f6004820152602401610416565b506001600160a01b03165f9081526003602052604090205490565b6104f5610bfc565b6104fe5f610c29565b565b5f83815260086020526040808220905161051d9085908590611820565b90815260200160405180910390205490509392505050565b606060075f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561060f578382905f5260205f20018054610584906117e8565b80601f01602080910402602001604051908101604052809291908181526020018280546105b0906117e8565b80156105fb5780601f106105d2576101008083540402835291602001916105fb565b820191905f5260205f20905b8154815290600101906020018083116105de57829003601f168201915b505050505081526020019060010190610567565b505050509050919050565b610622610bfc565b80518251146106435760405162461bcd60e51b81526004016104169061182f565b5f6009546001610653919061187d565b600981905590506106648482610c7a565b5f5b8351811015610723575f82815260076020526040902084518590839081106106905761069061189c565b60209081029190910181015182546001810184555f9384529190922001906106b890826118f4565b508281815181106106cb576106cb61189c565b602002602001015160085f8481526020019081526020015f208583815181106106f6576106f661189c565b602002602001015160405161070b91906119c6565b90815260405190819003602001902055600101610666565b50807faaa3ef9b79affd1b4052e81dd38126a7a1dd22345b41b8866fbe06d6c5cb02fe8460405161075491906113d7565b60405180910390a25f5b83518110156107db57817ff09c4f8065057564478e900e30beeaa7be6409e52ad156a4067fdcab3e9ad5d085838151811061079b5761079b61189c565b60200260200101518584815181106107b5576107b561189c565b60200260200101516040516107cb9291906119d1565b60405180910390a260010161075e565b5050505050565b60606001805461033a906117e8565b6103ed338383610cdb565b610804610bfc565b8281146108235760405162461bcd60e51b81526004016104169061182f565b5f858152600760205260408120610839916111ca565b5f5b83811015610908575f8681526007602052604090208585838181106108625761086261189c565b905060200281019061087491906119f2565b82546001810184555f9384526020909320909201916108939183611a34565b508282828181106108a6576108a661189c565b9050602002013560085f8881526020019081526020015f208686848181106108d0576108d061189c565b90506020028101906108e291906119f2565b6040516108f0929190611820565b9081526040519081900360200190205560010161083b565b50847faaa3ef9b79affd1b4052e81dd38126a7a1dd22345b41b8866fbe06d6c5cb02fe858560405161093b929190611b15565b60405180910390a25f5b838110156109cb57857ff09c4f8065057564478e900e30beeaa7be6409e52ad156a4067fdcab3e9ad5d08686848181106109815761098161189c565b905060200281019061099391906119f2565b8686868181106109a5576109a561189c565b905060200201356040516109bb93929190611bac565b60405180910390a2600101610945565b505050505050565b6109de8484846103f1565b61047984848484610d79565b60606109f582610ac5565b505f610a0b60408051602081019091525f815290565b90505f815111610a295760405180602001604052805f815250610a54565b80610a3384610e98565b604051602001610a44929190611bcf565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610a90610bfc565b6001600160a01b038116610ab957604051631e4fbdf760e01b81525f6004820152602401610416565b610ac281610c29565b50565b5f818152600260205260408120546001600160a01b03168061032657604051637e27328960e01b815260048101849052602401610416565b6104998383836001610f27565b5f828152600260205260408120546001600160a01b0390811690831615610b3657610b3681848661102b565b6001600160a01b03811615610b7057610b515f855f80610f27565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610b9e576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146104fe5760405163118cdaa760e01b8152336004820152602401610416565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610ca357604051633250574960e11b81525f6004820152602401610416565b5f610caf83835f610b0a565b90506001600160a01b03811615610499576040516339e3563760e11b81525f6004820152602401610416565b6001600160a01b038216610d0d57604051630b61174360e31b81526001600160a01b0383166004820152602401610416565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561047957604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610dbb903390889087908790600401611be3565b6020604051808303815f875af1925050508015610df5575060408051601f3d908101601f19168201909252610df291810190611c1f565b60015b610e5c573d808015610e22576040519150601f19603f3d011682016040523d82523d5f602084013e610e27565b606091505b5080515f03610e5457604051633250574960e11b81526001600160a01b0385166004820152602401610416565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146107db57604051633250574960e11b81526001600160a01b0385166004820152602401610416565b60605f610ea48361108f565b60010190505f816001600160401b03811115610ec257610ec2611439565b6040519080825280601f01601f191660200182016040528015610eec576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ef657509392505050565b8080610f3b57506001600160a01b03821615155b15610ffc575f610f4a84610ac5565b90506001600160a01b03831615801590610f765750826001600160a01b0316816001600160a01b031614155b8015610f895750610f878184610a5b565b155b15610fb25760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610416565b8115610ffa5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b611036838383611166565b610499576001600160a01b03831661106457604051637e27328960e01b815260048101829052602401610416565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610416565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110cd5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110f9576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061111757662386f26fc10000830492506010015b6305f5e100831061112f576305f5e100830492506008015b612710831061114357612710830492506004015b60648310611155576064830492506002015b600a83106103265760010192915050565b5f6001600160a01b038316158015906111c25750826001600160a01b0316846001600160a01b0316148061119f575061119f8484610a5b565b806111c257505f828152600460205260409020546001600160a01b038481169116145b949350505050565b5080545f8255905f5260205f2090810190610ac291905b808211156111fd575f6111f48282611201565b506001016111e1565b5090565b50805461120d906117e8565b5f825580601f1061121c575050565b601f0160209004905f5260205f2090810190610ac291905b808211156111fd575f8155600101611234565b6001600160e01b031981168114610ac2575f80fd5b5f6020828403121561126c575f80fd5b8135610a5481611247565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610a546020830184611277565b5f602082840312156112c7575f80fd5b5035919050565b80356001600160a01b03811681146112e4575f80fd5b919050565b5f80604083850312156112fa575f80fd5b611303836112ce565b946020939093013593505050565b5f805f60608486031215611323575f80fd5b61132c846112ce565b925061133a602085016112ce565b9150604084013590509250925092565b5f6020828403121561135a575f80fd5b610a54826112ce565b5f805f60408486031215611375575f80fd5b8335925060208401356001600160401b0380821115611392575f80fd5b818601915086601f8301126113a5575f80fd5b8135818111156113b3575f80fd5b8760208285010111156113c4575f80fd5b6020830194508093505050509250925092565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561142c57603f1988860301845261141a858351611277565b945092850192908501906001016113fe565b5092979650505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561147557611475611439565b604052919050565b5f6001600160401b0382111561149557611495611439565b5060051b60200190565b5f6001600160401b038311156114b7576114b7611439565b6114ca601f8401601f191660200161144d565b90508281528383830111156114dd575f80fd5b828260208301375f602084830101529392505050565b5f82601f830112611502575f80fd5b813560206115176115128361147d565b61144d565b8083825260208201915060208460051b870101935086841115611538575f80fd5b602086015b84811015611554578035835291830191830161153d565b509695505050505050565b5f805f60608486031215611571575f80fd5b61157a846112ce565b92506020808501356001600160401b0380821115611596575f80fd5b818701915087601f8301126115a9575f80fd5b81356115b76115128261147d565b81815260059190911b8301840190848101908a8311156115d5575f80fd5b8585015b8381101561161e578035858111156115ef575f80fd5b8601603f81018d136115ff575f80fd5b6116108d898301356040840161149f565b8452509186019186016115d9565b50965050506040870135925080831115611636575f80fd5b5050611644868287016114f3565b9150509250925092565b5f806040838503121561165f575f80fd5b611668836112ce565b91506020830135801515811461167c575f80fd5b809150509250929050565b5f8083601f840112611697575f80fd5b5081356001600160401b038111156116ad575f80fd5b6020830191508360208260051b85010111156116c7575f80fd5b9250929050565b5f805f805f606086880312156116e2575f80fd5b8535945060208601356001600160401b03808211156116ff575f80fd5b61170b89838a01611687565b90965094506040880135915080821115611723575f80fd5b5061173088828901611687565b969995985093965092949392505050565b5f805f8060808587031215611754575f80fd5b61175d856112ce565b935061176b602086016112ce565b92506040850135915060608501356001600160401b0381111561178c575f80fd5b8501601f8101871361179c575f80fd5b6117ab8782356020840161149f565b91505092959194509250565b5f80604083850312156117c8575f80fd5b6117d1836112ce565b91506117df602084016112ce565b90509250929050565b600181811c908216806117fc57607f821691505b60208210810361181a57634e487b7160e01b5f52602260045260245ffd5b50919050565b818382375f9101908152919050565b6020808252602e908201527f43726564697420747970657320616e6420737570706c79206c696d697473206c60408201526d0cadccee8d040dad2e6dac2e8c6d60931b606082015260800190565b8082018082111561032657634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b601f82111561049957805f5260205f20601f840160051c810160208510156118d55750805b601f840160051c820191505b818110156107db575f81556001016118e1565b81516001600160401b0381111561190d5761190d611439565b6119218161191b84546117e8565b846118b0565b602080601f831160018114611954575f841561193d5750858301515b5f19600386901b1c1916600185901b1785556109cb565b5f85815260208120601f198616915b8281101561198257888601518255948401946001909101908401611963565b508582101561199f57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f81518060208401855e5f93019283525090919050565b5f610a5482846119af565b604081525f6119e36040830185611277565b90508260208301529392505050565b5f808335601e19843603018112611a07575f80fd5b8301803591506001600160401b03821115611a20575f80fd5b6020019150368190038213156116c7575f80fd5b6001600160401b03831115611a4b57611a4b611439565b611a5f83611a5983546117e8565b836118b0565b5f601f841160018114611a90575f8515611a795750838201355b5f19600387901b1c1916600186901b1783556107db565b5f83815260208120601f198716915b82811015611abf5786850135825560209485019460019092019101611a9f565b5086821015611adb575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b60208082528181018390525f906040600585901b8401810190840186845b87811015611b9f57868403603f190183528135368a9003601e19018112611b58575f80fd5b890185810190356001600160401b03811115611b72575f80fd5b803603821315611b80575f80fd5b611b8b868284611aed565b955050509184019190840190600101611b33565b5091979650505050505050565b604081525f611bbf604083018587611aed565b9050826020830152949350505050565b5f6111c2611bdd83866119af565b846119af565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611c1590830184611277565b9695505050505050565b5f60208284031215611c2f575f80fd5b8151610a548161124756fea2646970667358221220e30b7d5a594251fbfba1c4a1de4c25049b8833901d14e92e289b3ee7ba5fab6764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x139410D39195 PUSH1 0xD2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4E5043 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x193 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x67 DUP3 DUP3 PUSH2 0x193 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0 DUP2 PUSH2 0xAA JUMP JUMPDEST POP PUSH0 PUSH1 0x9 SSTORE PUSH2 0x252 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x123 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x141 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x16C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x178 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AC JUMPI PUSH2 0x1AC PUSH2 0xFB JUMP JUMPDEST PUSH2 0x1C0 DUP2 PUSH2 0x1BA DUP5 SLOAD PUSH2 0x10F JUMP JUMPDEST DUP5 PUSH2 0x147 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x24A JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x221 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x202 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x23E JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C70 DUP1 PUSH2 0x25F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F177D31 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xAF77AF04 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAF77AF04 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F177D31 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8A605436 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x736DEA81 EQ PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E9 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0x17B PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1363 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15B PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x134A JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x30B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x326 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x366 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x388 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x394 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C5 DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x326 JUMP JUMPDEST PUSH2 0x3ED DUP3 DUP3 CALLER PUSH2 0xAFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x42B DUP4 DUP4 CALLER PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x416 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x499 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x326 DUP3 PUSH2 0xAC5 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x4FE PUSH0 PUSH2 0xC29 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x51D SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x1820 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x60F JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x567 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x622 PUSH2 0xBFC JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE SWAP1 POP PUSH2 0x664 DUP5 DUP3 PUSH2 0xC7A JUMP JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x723 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x690 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SWAP1 PUSH2 0x6B8 SWAP1 DUP3 PUSH2 0x18F4 JUMP JUMPDEST POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6F6 JUMPI PUSH2 0x6F6 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x666 JUMP JUMPDEST POP DUP1 PUSH32 0xAAA3EF9B79AFFD1B4052E81DD38126A7A1DD22345B41B8866FBE06D6C5CB02FE DUP5 PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x7DB JUMPI DUP2 PUSH32 0xF09C4F8065057564478E900E30BEEAA7BE6409E52AD156A4067FDCAB3E9AD5D0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI PUSH2 0x79B PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7B5 JUMPI PUSH2 0x7B5 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7CB SWAP3 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x75E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x3ED CALLER DUP4 DUP4 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x804 PUSH2 0xBFC JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x839 SWAP2 PUSH2 0x11CA JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x908 JUMPI PUSH0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x862 JUMPI PUSH2 0x862 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 KECCAK256 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x893 SWAP2 DUP4 PUSH2 0x1A34 JUMP JUMPDEST POP DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x8 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8D0 JUMPI PUSH2 0x8D0 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F0 SWAP3 SWAP2 SWAP1 PUSH2 0x1820 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x83B JUMP JUMPDEST POP DUP5 PUSH32 0xAAA3EF9B79AFFD1B4052E81DD38126A7A1DD22345B41B8866FBE06D6C5CB02FE DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x93B SWAP3 SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9CB JUMPI DUP6 PUSH32 0xF09C4F8065057564478E900E30BEEAA7BE6409E52AD156A4067FDCAB3E9AD5D0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x981 JUMPI PUSH2 0x981 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x9A5 JUMPI PUSH2 0x9A5 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x9BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x945 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9DE DUP5 DUP5 DUP5 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x479 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9F5 DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH0 PUSH2 0xA0B PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA54 JUMP JUMPDEST DUP1 PUSH2 0xA33 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA44 SWAP3 SWAP2 SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA90 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0xAC2 DUP2 PUSH2 0xC29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x499 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF27 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB36 DUP2 DUP5 DUP7 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xB70 JUMPI PUSH2 0xB51 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xB9E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH0 PUSH2 0xCAF DUP4 DUP4 PUSH0 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xDBB SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDF5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDF2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE5C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xEA4 DUP4 PUSH2 0x108F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xEC2 JUMPI PUSH2 0xEC2 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEF6 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF3B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFFC JUMPI PUSH0 PUSH2 0xF4A DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF76 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF89 JUMPI POP PUSH2 0xF87 DUP2 DUP5 PUSH2 0xA5B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFFA JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1036 DUP4 DUP4 DUP4 PUSH2 0x1166 JUMP JUMPDEST PUSH2 0x499 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x416 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x10CD JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x10F9 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1117 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x112F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1143 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1155 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x326 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11C2 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x119F JUMPI POP PUSH2 0x119F DUP5 DUP5 PUSH2 0xA5B JUMP JUMPDEST DUP1 PUSH2 0x11C2 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11FD JUMPI PUSH0 PUSH2 0x11F4 DUP3 DUP3 PUSH2 0x1201 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x11E1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x120D SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x121C JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11FD JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA54 DUP2 PUSH2 0x1247 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xA54 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1303 DUP4 PUSH2 0x12CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1323 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132C DUP5 PUSH2 0x12CE JUMP JUMPDEST SWAP3 POP PUSH2 0x133A PUSH1 0x20 DUP6 ADD PUSH2 0x12CE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA54 DUP3 PUSH2 0x12CE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1375 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1392 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP PUSH1 0x20 DUP8 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x142C JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x141A DUP6 DUP4 MLOAD PUSH2 0x1277 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13FE JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1475 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1495 PUSH2 0x1439 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B7 PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x14CA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x144D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x14DD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1502 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1517 PUSH2 0x1512 DUP4 PUSH2 0x147D JUMP JUMPDEST PUSH2 0x144D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1538 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1554 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x153D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1571 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157A DUP5 PUSH2 0x12CE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1596 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15B7 PUSH2 0x1512 DUP3 PUSH2 0x147D JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP11 DUP4 GT ISZERO PUSH2 0x15D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x161E JUMPI DUP1 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x15EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x3F DUP2 ADD DUP14 SGT PUSH2 0x15FF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1610 DUP14 DUP10 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP5 ADD PUSH2 0x149F JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x15D9 JUMP JUMPDEST POP SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1636 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1644 DUP7 DUP3 DUP8 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x165F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1668 DUP4 PUSH2 0x12CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x167C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1697 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x16C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x16FF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x170B DUP10 DUP4 DUP11 ADD PUSH2 0x1687 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1723 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1730 DUP9 DUP3 DUP10 ADD PUSH2 0x1687 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1754 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x175D DUP6 PUSH2 0x12CE JUMP JUMPDEST SWAP4 POP PUSH2 0x176B PUSH1 0x20 DUP7 ADD PUSH2 0x12CE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x178C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x179C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17AB DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x149F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D1 DUP4 PUSH2 0x12CE JUMP JUMPDEST SWAP2 POP PUSH2 0x17DF PUSH1 0x20 DUP5 ADD PUSH2 0x12CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x181A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x43726564697420747970657320616E6420737570706C79206C696D697473206C PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0xCADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x326 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x499 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x18D5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7DB JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18E1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x190D JUMPI PUSH2 0x190D PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1921 DUP2 PUSH2 0x191B DUP5 SLOAD PUSH2 0x17E8 JUMP JUMPDEST DUP5 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1954 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x193D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x9CB JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1982 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1963 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x199F JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA54 DUP3 DUP5 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x19E3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1277 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1A07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A20 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x16C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1A4B JUMPI PUSH2 0x1A4B PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1A5F DUP4 PUSH2 0x1A59 DUP4 SLOAD PUSH2 0x17E8 JUMP JUMPDEST DUP4 PUSH2 0x18B0 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A90 JUMPI PUSH0 DUP6 ISZERO PUSH2 0x1A79 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x7DB JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1ABF JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A9F JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x1ADB JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x40 PUSH1 0x5 DUP6 SWAP1 SHL DUP5 ADD DUP2 ADD SWAP1 DUP5 ADD DUP7 DUP5 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x1B9F JUMPI DUP7 DUP5 SUB PUSH1 0x3F NOT ADD DUP4 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP11 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x1B58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 ADD DUP6 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B72 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1B80 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B8B DUP7 DUP3 DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP6 POP POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B33 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1BBF PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1AED JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11C2 PUSH2 0x1BDD DUP4 DUP7 PUSH2 0x19AF JUMP JUMPDEST DUP5 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1C15 SWAP1 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA54 DUP2 PUSH2 0x1247 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SIGNEXTEND PUSH30 0x5A594251FBFBA1C4A1DE4C25049B8833901D14E92E289B3EE7BA5FAB6764 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "175:3739:12:-:0;;;697:130;;;;;;;;;;743:10;1381:113:2;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:2;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2847:51:13;2820:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;784:1:12::2;766:15;:19:::0;175:3739;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:13:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:13;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:13;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:13;;;2546:26;2497:89;-1:-1:-1;;1308:1:13;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:13;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:13;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2701:203::-;175:3739:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1096": {
									"entryPoint": 2813,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 3879,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_489": {
									"entryPoint": null,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_744": {
									"entryPoint": 4139,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 3449,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3068,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": null,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 4454,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 3194,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": null,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": null,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1228": {
									"entryPoint": 2757,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 3291,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3113,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_850": {
									"entryPoint": 2826,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_505": {
									"entryPoint": 994,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 1192,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_522": {
									"entryPoint": 955,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCreditSupplyLimit_3120": {
									"entryPoint": 1280,
									"id": 3120,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getCreditTypes_3103": {
									"entryPoint": 1333,
									"id": 3103,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_555": {
									"entryPoint": 2651,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2651": {
									"entryPoint": 4239,
									"id": 2651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3089": {
									"entryPoint": 1562,
									"id": 3089,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_435": {
									"entryPoint": 812,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_426": {
									"entryPoint": 1182,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1261,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 1151,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 2515,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_538": {
									"entryPoint": 2033,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setCreditTypesAndLimits_3211": {
									"entryPoint": 2044,
									"id": 3211,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@supportsInterface_1764": {
									"entryPoint": null,
									"id": 1764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 731,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 2018,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1554": {
									"entryPoint": 3736,
									"id": 1554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_480": {
									"entryPoint": 2538,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_601": {
									"entryPoint": 1009,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2696,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_string_calldata_dyn_calldata": {
									"entryPoint": 5767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_string_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256t_string_calldata_ptr": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_string": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_calldata": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7119,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7084,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2cb6a5a9896aee21175869d21ed4d91ef4be1b4b6e0dabc3887c3e2a19cd06d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"access_calldata_tail_t_string_calldata_ptr": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_string_dyn": {
									"entryPoint": 5245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19587:13",
										"nodeType": "YulBlock",
										"src": "0:19587:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:13",
													"nodeType": "YulBlock",
													"src": "58:87:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:13",
																"nodeType": "YulBlock",
																"src": "123:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:13",
																					"nodeType": "YulLiteral",
																					"src": "132:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:13",
																					"nodeType": "YulLiteral",
																					"src": "135:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:13"
																			},
																			"nativeSrc": "125:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:13"
																		},
																		"nativeSrc": "125:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:13",
																								"nodeType": "YulLiteral",
																								"src": "103:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:13",
																								"nodeType": "YulLiteral",
																								"src": "108:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:13"
																						},
																						"nativeSrc": "99:20:13",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:13"
																				},
																				"nativeSrc": "88:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:13"
																		},
																		"nativeSrc": "78:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:13"
																},
																"nativeSrc": "71:51:13",
																"nodeType": "YulFunctionCall",
																"src": "71:51:13"
															},
															"nativeSrc": "68:71:13",
															"nodeType": "YulIf",
															"src": "68:71:13"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:13",
														"nodeType": "YulTypedName",
														"src": "47:5:13",
														"type": ""
													}
												],
												"src": "14:131:13"
											},
											{
												"body": {
													"nativeSrc": "219:176:13",
													"nodeType": "YulBlock",
													"src": "219:176:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:13",
																"nodeType": "YulBlock",
																"src": "265:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:13",
																					"nodeType": "YulLiteral",
																					"src": "274:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:13",
																					"nodeType": "YulLiteral",
																					"src": "277:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:13"
																			},
																			"nativeSrc": "267:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:13"
																		},
																		"nativeSrc": "267:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:13"
																		},
																		"nativeSrc": "236:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:13",
																		"nodeType": "YulLiteral",
																		"src": "261:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:13"
																},
																"nativeSrc": "232:32:13",
																"nodeType": "YulFunctionCall",
																"src": "232:32:13"
															},
															"nativeSrc": "229:52:13",
															"nodeType": "YulIf",
															"src": "229:52:13"
														},
														{
															"nativeSrc": "290:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:13"
																},
																"nativeSrc": "303:23:13",
																"nodeType": "YulFunctionCall",
																"src": "303:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:13",
																	"nodeType": "YulTypedName",
																	"src": "294:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:13"
																},
																"nativeSrc": "335:30:13",
																"nodeType": "YulFunctionCall",
																"src": "335:30:13"
															},
															"nativeSrc": "335:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:13"
														},
														{
															"nativeSrc": "374:15:13",
															"nodeType": "YulAssignment",
															"src": "374:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:13",
																"nodeType": "YulIdentifier",
																"src": "384:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:13",
														"nodeType": "YulTypedName",
														"src": "185:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:13",
														"nodeType": "YulTypedName",
														"src": "196:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:13",
														"nodeType": "YulTypedName",
														"src": "208:6:13",
														"type": ""
													}
												],
												"src": "150:245:13"
											},
											{
												"body": {
													"nativeSrc": "495:92:13",
													"nodeType": "YulBlock",
													"src": "495:92:13",
													"statements": [
														{
															"nativeSrc": "505:26:13",
															"nodeType": "YulAssignment",
															"src": "505:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:13",
																		"nodeType": "YulLiteral",
																		"src": "528:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:13"
																},
																"nativeSrc": "513:18:13",
																"nodeType": "YulFunctionCall",
																"src": "513:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:13"
																				},
																				"nativeSrc": "565:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:13"
																		},
																		"nativeSrc": "558:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:13"
																},
																"nativeSrc": "540:41:13",
																"nodeType": "YulFunctionCall",
																"src": "540:41:13"
															},
															"nativeSrc": "540:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:13",
														"nodeType": "YulTypedName",
														"src": "464:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:13",
														"nodeType": "YulTypedName",
														"src": "475:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:13",
														"nodeType": "YulTypedName",
														"src": "486:4:13",
														"type": ""
													}
												],
												"src": "400:187:13"
											},
											{
												"body": {
													"nativeSrc": "653:239:13",
													"nodeType": "YulBlock",
													"src": "653:239:13",
													"statements": [
														{
															"nativeSrc": "663:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "663:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "683:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "683:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "677:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:13"
																},
																"nativeSrc": "677:12:13",
																"nodeType": "YulFunctionCall",
																"src": "677:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "667:6:13",
																	"nodeType": "YulTypedName",
																	"src": "667:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "705:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "710:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "698:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:13"
																},
																"nativeSrc": "698:19:13",
																"nodeType": "YulFunctionCall",
																"src": "698:19:13"
															},
															"nativeSrc": "698:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "698:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "736:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "736:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:4:13",
																				"nodeType": "YulLiteral",
																				"src": "741:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:13"
																		},
																		"nativeSrc": "732:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "732:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "752:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "752:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:13",
																				"nodeType": "YulLiteral",
																				"src": "759:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:13"
																		},
																		"nativeSrc": "748:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "748:16:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "726:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:13"
																},
																"nativeSrc": "726:47:13",
																"nodeType": "YulFunctionCall",
																"src": "726:47:13"
															},
															"nativeSrc": "726:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "726:47:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "797:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "802:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "802:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "793:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "793:3:13"
																				},
																				"nativeSrc": "793:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "793:16:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:4:13",
																				"nodeType": "YulLiteral",
																				"src": "811:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:13"
																		},
																		"nativeSrc": "789:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "789:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:13",
																		"nodeType": "YulLiteral",
																		"src": "818:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:13"
																},
																"nativeSrc": "782:38:13",
																"nodeType": "YulFunctionCall",
																"src": "782:38:13"
															},
															"nativeSrc": "782:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "782:38:13"
														},
														{
															"nativeSrc": "829:57:13",
															"nodeType": "YulAssignment",
															"src": "829:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "844:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "857:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "857:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "865:2:13",
																								"nodeType": "YulLiteral",
																								"src": "865:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "853:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:13"
																						},
																						"nativeSrc": "853:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "853:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:2:13",
																								"nodeType": "YulLiteral",
																								"src": "874:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "870:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:13"
																						},
																						"nativeSrc": "870:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "870:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "849:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:13"
																				},
																				"nativeSrc": "849:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "849:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:39:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "881:4:13",
																		"nodeType": "YulLiteral",
																		"src": "881:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:50:13",
																"nodeType": "YulFunctionCall",
																"src": "836:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "829:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "592:300:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "630:5:13",
														"nodeType": "YulTypedName",
														"src": "630:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "637:3:13",
														"nodeType": "YulTypedName",
														"src": "637:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "645:3:13",
														"nodeType": "YulTypedName",
														"src": "645:3:13",
														"type": ""
													}
												],
												"src": "592:300:13"
											},
											{
												"body": {
													"nativeSrc": "1018:110:13",
													"nodeType": "YulBlock",
													"src": "1018:110:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1046:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:13"
																},
																"nativeSrc": "1028:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1028:21:13"
															},
															"nativeSrc": "1028:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "1028:21:13"
														},
														{
															"nativeSrc": "1058:64:13",
															"nodeType": "YulAssignment",
															"src": "1058:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1095:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:13"
																		},
																		"nativeSrc": "1103:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1066:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "1066:28:13"
																},
																"nativeSrc": "1066:56:13",
																"nodeType": "YulFunctionCall",
																"src": "1066:56:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1058:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "897:231:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "987:9:13",
														"nodeType": "YulTypedName",
														"src": "987:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "998:6:13",
														"nodeType": "YulTypedName",
														"src": "998:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1009:4:13",
														"nodeType": "YulTypedName",
														"src": "1009:4:13",
														"type": ""
													}
												],
												"src": "897:231:13"
											},
											{
												"body": {
													"nativeSrc": "1203:110:13",
													"nodeType": "YulBlock",
													"src": "1203:110:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1249:16:13",
																"nodeType": "YulBlock",
																"src": "1249:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1261:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1261:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1251:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:13"
																			},
																			"nativeSrc": "1251:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1251:12:13"
																		},
																		"nativeSrc": "1251:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1224:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:13"
																		},
																		"nativeSrc": "1220:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:13"
																},
																"nativeSrc": "1216:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1216:32:13"
															},
															"nativeSrc": "1213:52:13",
															"nodeType": "YulIf",
															"src": "1213:52:13"
														},
														{
															"nativeSrc": "1274:33:13",
															"nodeType": "YulAssignment",
															"src": "1274:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1284:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1284:12:13"
																},
																"nativeSrc": "1284:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1284:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1274:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1133:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1169:9:13",
														"nodeType": "YulTypedName",
														"src": "1169:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1180:7:13",
														"nodeType": "YulTypedName",
														"src": "1180:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1192:6:13",
														"nodeType": "YulTypedName",
														"src": "1192:6:13",
														"type": ""
													}
												],
												"src": "1133:180:13"
											},
											{
												"body": {
													"nativeSrc": "1419:102:13",
													"nodeType": "YulBlock",
													"src": "1419:102:13",
													"statements": [
														{
															"nativeSrc": "1429:26:13",
															"nodeType": "YulAssignment",
															"src": "1429:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1452:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1437:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1437:3:13"
																},
																"nativeSrc": "1437:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1437:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1429:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1429:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1471:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1486:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1502:3:13",
																								"nodeType": "YulLiteral",
																								"src": "1502:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1507:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1507:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1498:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1498:3:13"
																						},
																						"nativeSrc": "1498:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1498:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1511:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1511:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1494:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:13"
																				},
																				"nativeSrc": "1494:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1482:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:13"
																		},
																		"nativeSrc": "1482:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:13"
																},
																"nativeSrc": "1464:51:13",
																"nodeType": "YulFunctionCall",
																"src": "1464:51:13"
															},
															"nativeSrc": "1464:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "1464:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1318:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:13",
														"nodeType": "YulTypedName",
														"src": "1388:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1399:6:13",
														"nodeType": "YulTypedName",
														"src": "1399:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1410:4:13",
														"nodeType": "YulTypedName",
														"src": "1410:4:13",
														"type": ""
													}
												],
												"src": "1318:203:13"
											},
											{
												"body": {
													"nativeSrc": "1575:124:13",
													"nodeType": "YulBlock",
													"src": "1575:124:13",
													"statements": [
														{
															"nativeSrc": "1585:29:13",
															"nodeType": "YulAssignment",
															"src": "1585:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1607:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1607:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1594:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1594:12:13"
																},
																"nativeSrc": "1594:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1594:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1585:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1585:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:16:13",
																"nodeType": "YulBlock",
																"src": "1677:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1679:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:13"
																			},
																			"nativeSrc": "1679:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:13"
																		},
																		"nativeSrc": "1679:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1636:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1647:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1647:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1662:3:13",
																										"nodeType": "YulLiteral",
																										"src": "1662:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1667:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1667:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1658:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1658:3:13"
																								},
																								"nativeSrc": "1658:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1658:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1671:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1671:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1654:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1654:3:13"
																						},
																						"nativeSrc": "1654:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1654:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1643:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1643:3:13"
																				},
																				"nativeSrc": "1643:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1643:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1633:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1633:2:13"
																		},
																		"nativeSrc": "1633:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:13"
																},
																"nativeSrc": "1626:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1626:50:13"
															},
															"nativeSrc": "1623:70:13",
															"nodeType": "YulIf",
															"src": "1623:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1526:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1554:6:13",
														"nodeType": "YulTypedName",
														"src": "1554:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1565:5:13",
														"nodeType": "YulTypedName",
														"src": "1565:5:13",
														"type": ""
													}
												],
												"src": "1526:173:13"
											},
											{
												"body": {
													"nativeSrc": "1791:167:13",
													"nodeType": "YulBlock",
													"src": "1791:167:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1837:16:13",
																"nodeType": "YulBlock",
																"src": "1837:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1849:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1839:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:13"
																			},
																			"nativeSrc": "1839:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:12:13"
																		},
																		"nativeSrc": "1839:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1812:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1812:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1821:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1821:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:13"
																		},
																		"nativeSrc": "1808:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1833:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1804:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:13"
																},
																"nativeSrc": "1804:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1804:32:13"
															},
															"nativeSrc": "1801:52:13",
															"nodeType": "YulIf",
															"src": "1801:52:13"
														},
														{
															"nativeSrc": "1862:39:13",
															"nodeType": "YulAssignment",
															"src": "1862:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1872:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1872:18:13"
																},
																"nativeSrc": "1872:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1872:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1862:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:13"
																}
															]
														},
														{
															"nativeSrc": "1910:42:13",
															"nodeType": "YulAssignment",
															"src": "1910:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:13"
																		},
																		"nativeSrc": "1933:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1920:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:13"
																},
																"nativeSrc": "1920:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1920:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1910:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1704:254:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1749:9:13",
														"nodeType": "YulTypedName",
														"src": "1749:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1760:7:13",
														"nodeType": "YulTypedName",
														"src": "1760:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1772:6:13",
														"nodeType": "YulTypedName",
														"src": "1772:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1780:6:13",
														"nodeType": "YulTypedName",
														"src": "1780:6:13",
														"type": ""
													}
												],
												"src": "1704:254:13"
											},
											{
												"body": {
													"nativeSrc": "2067:224:13",
													"nodeType": "YulBlock",
													"src": "2067:224:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2113:16:13",
																"nodeType": "YulBlock",
																"src": "2113:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2122:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2125:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2125:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2115:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:13"
																			},
																			"nativeSrc": "2115:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2115:12:13"
																		},
																		"nativeSrc": "2115:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2115:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2088:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2088:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2097:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2084:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2084:3:13"
																		},
																		"nativeSrc": "2084:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2084:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2109:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2080:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:13"
																},
																"nativeSrc": "2080:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2080:32:13"
															},
															"nativeSrc": "2077:52:13",
															"nodeType": "YulIf",
															"src": "2077:52:13"
														},
														{
															"nativeSrc": "2138:39:13",
															"nodeType": "YulAssignment",
															"src": "2138:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2167:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2148:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2148:18:13"
																},
																"nativeSrc": "2148:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2148:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2138:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:13"
																}
															]
														},
														{
															"nativeSrc": "2186:48:13",
															"nodeType": "YulAssignment",
															"src": "2186:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2219:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2219:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2230:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2230:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2215:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:13"
																		},
																		"nativeSrc": "2215:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2215:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2196:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2196:18:13"
																},
																"nativeSrc": "2196:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2196:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2186:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:13"
																}
															]
														},
														{
															"nativeSrc": "2243:42:13",
															"nodeType": "YulAssignment",
															"src": "2243:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2270:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2270:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2281:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2281:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2266:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:13"
																		},
																		"nativeSrc": "2266:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2253:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2253:12:13"
																},
																"nativeSrc": "2253:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2253:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2243:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1963:328:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2017:9:13",
														"nodeType": "YulTypedName",
														"src": "2017:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2028:7:13",
														"nodeType": "YulTypedName",
														"src": "2028:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2040:6:13",
														"nodeType": "YulTypedName",
														"src": "2040:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2048:6:13",
														"nodeType": "YulTypedName",
														"src": "2048:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2056:6:13",
														"nodeType": "YulTypedName",
														"src": "2056:6:13",
														"type": ""
													}
												],
												"src": "1963:328:13"
											},
											{
												"body": {
													"nativeSrc": "2366:116:13",
													"nodeType": "YulBlock",
													"src": "2366:116:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2412:16:13",
																"nodeType": "YulBlock",
																"src": "2412:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			},
																			"nativeSrc": "2414:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2414:12:13"
																		},
																		"nativeSrc": "2414:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2414:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2387:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2387:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2396:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2396:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2383:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:13"
																		},
																		"nativeSrc": "2383:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2383:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2408:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2408:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2379:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2379:3:13"
																},
																"nativeSrc": "2379:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2379:32:13"
															},
															"nativeSrc": "2376:52:13",
															"nodeType": "YulIf",
															"src": "2376:52:13"
														},
														{
															"nativeSrc": "2437:39:13",
															"nodeType": "YulAssignment",
															"src": "2437:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2466:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2466:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2447:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2447:18:13"
																},
																"nativeSrc": "2447:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2447:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2437:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2437:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2296:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2332:9:13",
														"nodeType": "YulTypedName",
														"src": "2332:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2343:7:13",
														"nodeType": "YulTypedName",
														"src": "2343:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2355:6:13",
														"nodeType": "YulTypedName",
														"src": "2355:6:13",
														"type": ""
													}
												],
												"src": "2296:186:13"
											},
											{
												"body": {
													"nativeSrc": "2588:76:13",
													"nodeType": "YulBlock",
													"src": "2588:76:13",
													"statements": [
														{
															"nativeSrc": "2598:26:13",
															"nodeType": "YulAssignment",
															"src": "2598:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2610:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2610:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2606:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2606:3:13"
																},
																"nativeSrc": "2606:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2606:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2598:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2640:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2640:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2651:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2651:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2633:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:13"
																},
																"nativeSrc": "2633:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2633:25:13"
															},
															"nativeSrc": "2633:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "2633:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2487:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2557:9:13",
														"nodeType": "YulTypedName",
														"src": "2557:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2568:6:13",
														"nodeType": "YulTypedName",
														"src": "2568:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2579:4:13",
														"nodeType": "YulTypedName",
														"src": "2579:4:13",
														"type": ""
													}
												],
												"src": "2487:177:13"
											},
											{
												"body": {
													"nativeSrc": "2776:553:13",
													"nodeType": "YulBlock",
													"src": "2776:553:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2822:16:13",
																"nodeType": "YulBlock",
																"src": "2822:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2831:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2831:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2834:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2834:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2824:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:13"
																			},
																			"nativeSrc": "2824:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2824:12:13"
																		},
																		"nativeSrc": "2824:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2797:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2797:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2806:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2806:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2793:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:13"
																		},
																		"nativeSrc": "2793:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2818:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2818:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2789:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2789:3:13"
																},
																"nativeSrc": "2789:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2789:32:13"
															},
															"nativeSrc": "2786:52:13",
															"nodeType": "YulIf",
															"src": "2786:52:13"
														},
														{
															"nativeSrc": "2847:33:13",
															"nodeType": "YulAssignment",
															"src": "2847:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2870:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2870:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2857:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2857:12:13"
																},
																"nativeSrc": "2857:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2857:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2847:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2847:6:13"
																}
															]
														},
														{
															"nativeSrc": "2889:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2889:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2920:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2920:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2931:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2931:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2916:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2916:3:13"
																		},
																		"nativeSrc": "2916:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2916:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2903:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2903:12:13"
																},
																"nativeSrc": "2903:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2903:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2893:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2893:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2944:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2944:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2954:18:13",
																"nodeType": "YulLiteral",
																"src": "2954:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2948:2:13",
																	"nodeType": "YulTypedName",
																	"src": "2948:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2999:16:13",
																"nodeType": "YulBlock",
																"src": "2999:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3008:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3008:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3011:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3011:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3001:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3001:6:13"
																			},
																			"nativeSrc": "3001:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3001:12:13"
																		},
																		"nativeSrc": "3001:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3001:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2987:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2987:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2995:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "2995:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2984:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2984:2:13"
																},
																"nativeSrc": "2984:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2984:14:13"
															},
															"nativeSrc": "2981:34:13",
															"nodeType": "YulIf",
															"src": "2981:34:13"
														},
														{
															"nativeSrc": "3024:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3024:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3038:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3038:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3049:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3049:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3034:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:13"
																},
																"nativeSrc": "3034:22:13",
																"nodeType": "YulFunctionCall",
																"src": "3034:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3028:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3028:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3104:16:13",
																"nodeType": "YulBlock",
																"src": "3104:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3113:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3116:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3116:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3106:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:13"
																			},
																			"nativeSrc": "3106:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:12:13"
																		},
																		"nativeSrc": "3106:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3083:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3083:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3087:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3087:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3079:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3079:3:13"
																				},
																				"nativeSrc": "3079:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3079:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3094:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3094:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3075:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:13"
																		},
																		"nativeSrc": "3075:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3075:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3068:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:13"
																},
																"nativeSrc": "3068:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3068:35:13"
															},
															"nativeSrc": "3065:55:13",
															"nodeType": "YulIf",
															"src": "3065:55:13"
														},
														{
															"nativeSrc": "3129:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3129:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3156:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3156:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3143:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3143:12:13"
																},
																"nativeSrc": "3143:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3143:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3133:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3133:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3186:16:13",
																"nodeType": "YulBlock",
																"src": "3186:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3195:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3195:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3198:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3198:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3188:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3188:6:13"
																			},
																			"nativeSrc": "3188:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3188:12:13"
																		},
																		"nativeSrc": "3188:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3188:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3174:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3174:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3182:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3182:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3171:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3171:2:13"
																},
																"nativeSrc": "3171:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3171:14:13"
															},
															"nativeSrc": "3168:34:13",
															"nodeType": "YulIf",
															"src": "3168:34:13"
														},
														{
															"body": {
																"nativeSrc": "3252:16:13",
																"nodeType": "YulBlock",
																"src": "3252:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3261:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3261:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3264:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3264:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3254:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3254:6:13"
																			},
																			"nativeSrc": "3254:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3254:12:13"
																		},
																		"nativeSrc": "3254:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3254:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3225:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3225:2:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3229:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3229:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3221:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3221:3:13"
																				},
																				"nativeSrc": "3221:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3221:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3238:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3238:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3217:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3217:3:13"
																		},
																		"nativeSrc": "3217:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3217:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3243:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3243:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3214:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3214:2:13"
																},
																"nativeSrc": "3214:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3214:37:13"
															},
															"nativeSrc": "3211:57:13",
															"nodeType": "YulIf",
															"src": "3211:57:13"
														},
														{
															"nativeSrc": "3277:21:13",
															"nodeType": "YulAssignment",
															"src": "3277:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3291:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3291:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3295:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3295:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3287:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3287:3:13"
																},
																"nativeSrc": "3287:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3287:11:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3277:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:13"
																}
															]
														},
														{
															"nativeSrc": "3307:16:13",
															"nodeType": "YulAssignment",
															"src": "3307:16:13",
															"value": {
																"name": "length",
																"nativeSrc": "3317:6:13",
																"nodeType": "YulIdentifier",
																"src": "3317:6:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3307:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3307:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_calldata_ptr",
												"nativeSrc": "2669:660:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2726:9:13",
														"nodeType": "YulTypedName",
														"src": "2726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2737:7:13",
														"nodeType": "YulTypedName",
														"src": "2737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2749:6:13",
														"nodeType": "YulTypedName",
														"src": "2749:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2757:6:13",
														"nodeType": "YulTypedName",
														"src": "2757:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2765:6:13",
														"nodeType": "YulTypedName",
														"src": "2765:6:13",
														"type": ""
													}
												],
												"src": "2669:660:13"
											},
											{
												"body": {
													"nativeSrc": "3505:643:13",
													"nodeType": "YulBlock",
													"src": "3505:643:13",
													"statements": [
														{
															"nativeSrc": "3515:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3515:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3525:2:13",
																"nodeType": "YulLiteral",
																"src": "3525:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3519:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3519:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3536:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3536:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3554:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3554:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3565:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3565:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3550:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:13"
																},
																"nativeSrc": "3550:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3550:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3540:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3540:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3584:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3584:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3595:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3595:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3577:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:13"
																},
																"nativeSrc": "3577:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3577:21:13"
															},
															"nativeSrc": "3577:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "3577:21:13"
														},
														{
															"nativeSrc": "3607:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3607:17:13",
															"value": {
																"name": "tail_1",
																"nativeSrc": "3618:6:13",
																"nodeType": "YulIdentifier",
																"src": "3618:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3611:3:13",
																	"nodeType": "YulTypedName",
																	"src": "3611:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3633:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3633:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3653:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3647:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3647:5:13"
																},
																"nativeSrc": "3647:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3647:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3637:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3637:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "3676:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3676:6:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3684:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:13"
																},
																"nativeSrc": "3669:22:13",
																"nodeType": "YulFunctionCall",
																"src": "3669:22:13"
															},
															"nativeSrc": "3669:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "3669:22:13"
														},
														{
															"nativeSrc": "3700:25:13",
															"nodeType": "YulAssignment",
															"src": "3700:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3711:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3711:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3722:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3722:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:13"
																},
																"nativeSrc": "3707:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3707:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3700:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:13"
																}
															]
														},
														{
															"nativeSrc": "3734:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3734:53:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3756:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3771:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3771:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3774:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3774:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3767:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3767:3:13"
																				},
																				"nativeSrc": "3767:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3767:14:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3752:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:13"
																		},
																		"nativeSrc": "3752:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:30:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3784:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3784:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3748:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3748:3:13"
																},
																"nativeSrc": "3748:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3748:39:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "3738:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3738:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3796:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3796:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3814:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3814:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3822:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3822:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3810:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:13"
																},
																"nativeSrc": "3810:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3810:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3800:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3800:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3834:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3834:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3843:1:13",
																"nodeType": "YulLiteral",
																"src": "3843:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3838:1:13",
																	"nodeType": "YulTypedName",
																	"src": "3838:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3902:217:13",
																"nodeType": "YulBlock",
																"src": "3902:217:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3923:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3923:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nativeSrc": "3936:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "3936:6:13"
																								},
																								{
																									"name": "headStart",
																									"nativeSrc": "3944:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "3944:9:13"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3932:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "3932:3:13"
																							},
																							"nativeSrc": "3932:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3932:22:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3960:2:13",
																									"nodeType": "YulLiteral",
																									"src": "3960:2:13",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3956:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "3956:3:13"
																							},
																							"nativeSrc": "3956:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3956:7:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3928:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:3:13"
																					},
																					"nativeSrc": "3928:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3928:36:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3916:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3916:6:13"
																			},
																			"nativeSrc": "3916:49:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3916:49:13"
																		},
																		"nativeSrc": "3916:49:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3916:49:13"
																	},
																	{
																		"nativeSrc": "3978:61:13",
																		"nodeType": "YulAssignment",
																		"src": "3978:61:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "4023:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4023:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4017:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4017:5:13"
																					},
																					"nativeSrc": "4017:13:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4017:13:13"
																				},
																				{
																					"name": "tail_2",
																					"nativeSrc": "4032:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4032:6:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_string_memory_ptr",
																				"nativeSrc": "3988:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "3988:28:13"
																			},
																			"nativeSrc": "3988:51:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3988:51:13"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "3978:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3978:6:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4052:25:13",
																		"nodeType": "YulAssignment",
																		"src": "4052:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4066:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4066:6:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "4074:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4074:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4062:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4062:3:13"
																			},
																			"nativeSrc": "4062:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4062:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4052:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4052:6:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4090:19:13",
																		"nodeType": "YulAssignment",
																		"src": "4090:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4101:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4101:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "4106:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4106:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4097:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4097:3:13"
																			},
																			"nativeSrc": "4097:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4097:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4090:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4090:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3864:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3864:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3867:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3867:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3861:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3861:2:13"
																},
																"nativeSrc": "3861:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3861:13:13"
															},
															"nativeSrc": "3853:266:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3875:18:13",
																"nodeType": "YulBlock",
																"src": "3875:18:13",
																"statements": [
																	{
																		"nativeSrc": "3877:14:13",
																		"nodeType": "YulAssignment",
																		"src": "3877:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3886:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "3886:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3889:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3889:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3882:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3882:3:13"
																			},
																			"nativeSrc": "3882:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3882:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3877:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3877:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3857:3:13",
																"nodeType": "YulBlock",
																"src": "3857:3:13",
																"statements": []
															},
															"src": "3853:266:13"
														},
														{
															"nativeSrc": "4128:14:13",
															"nodeType": "YulAssignment",
															"src": "4128:14:13",
															"value": {
																"name": "tail_2",
																"nativeSrc": "4136:6:13",
																"nodeType": "YulIdentifier",
																"src": "4136:6:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4128:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4128:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3334:814:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3474:9:13",
														"nodeType": "YulTypedName",
														"src": "3474:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3485:6:13",
														"nodeType": "YulTypedName",
														"src": "3485:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3496:4:13",
														"nodeType": "YulTypedName",
														"src": "3496:4:13",
														"type": ""
													}
												],
												"src": "3334:814:13"
											},
											{
												"body": {
													"nativeSrc": "4185:95:13",
													"nodeType": "YulBlock",
													"src": "4185:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4209:3:13",
																				"nodeType": "YulLiteral",
																				"src": "4209:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4214:10:13",
																				"nodeType": "YulLiteral",
																				"src": "4214:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4205:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4205:3:13"
																		},
																		"nativeSrc": "4205:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4205:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:13"
																},
																"nativeSrc": "4195:31:13",
																"nodeType": "YulFunctionCall",
																"src": "4195:31:13"
															},
															"nativeSrc": "4195:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "4195:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4242:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4242:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4245:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4245:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4235:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4235:6:13"
																},
																"nativeSrc": "4235:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4235:15:13"
															},
															"nativeSrc": "4235:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4235:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4266:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4269:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4269:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4259:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:13"
																},
																"nativeSrc": "4259:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4259:15:13"
															},
															"nativeSrc": "4259:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4259:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4153:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4153:127:13"
											},
											{
												"body": {
													"nativeSrc": "4330:230:13",
													"nodeType": "YulBlock",
													"src": "4330:230:13",
													"statements": [
														{
															"nativeSrc": "4340:19:13",
															"nodeType": "YulAssignment",
															"src": "4340:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4356:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4356:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4350:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4350:5:13"
																},
																"nativeSrc": "4350:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4350:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4340:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:13"
																}
															]
														},
														{
															"nativeSrc": "4368:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4368:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4390:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4390:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "4406:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "4406:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4412:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4412:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4402:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4402:3:13"
																				},
																				"nativeSrc": "4402:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4402:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4421:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4421:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4417:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4417:3:13"
																				},
																				"nativeSrc": "4417:7:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4417:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4398:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:13"
																		},
																		"nativeSrc": "4398:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4398:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4386:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4386:3:13"
																},
																"nativeSrc": "4386:40:13",
																"nodeType": "YulFunctionCall",
																"src": "4386:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4372:10:13",
																	"nodeType": "YulTypedName",
																	"src": "4372:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4501:22:13",
																"nodeType": "YulBlock",
																"src": "4501:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4503:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4503:16:13"
																			},
																			"nativeSrc": "4503:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4503:18:13"
																		},
																		"nativeSrc": "4503:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4503:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4444:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "4444:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4456:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4456:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4441:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4441:2:13"
																		},
																		"nativeSrc": "4441:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4441:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4480:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "4480:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4492:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4492:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4477:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4477:2:13"
																		},
																		"nativeSrc": "4477:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4477:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4438:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4438:2:13"
																},
																"nativeSrc": "4438:62:13",
																"nodeType": "YulFunctionCall",
																"src": "4438:62:13"
															},
															"nativeSrc": "4435:88:13",
															"nodeType": "YulIf",
															"src": "4435:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4539:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4543:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "4543:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4532:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:13"
																},
																"nativeSrc": "4532:22:13",
																"nodeType": "YulFunctionCall",
																"src": "4532:22:13"
															},
															"nativeSrc": "4532:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "4532:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4285:275:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4310:4:13",
														"nodeType": "YulTypedName",
														"src": "4310:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4319:6:13",
														"nodeType": "YulTypedName",
														"src": "4319:6:13",
														"type": ""
													}
												],
												"src": "4285:275:13"
											},
											{
												"body": {
													"nativeSrc": "4633:114:13",
													"nodeType": "YulBlock",
													"src": "4633:114:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4677:22:13",
																"nodeType": "YulBlock",
																"src": "4677:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4679:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4679:16:13"
																			},
																			"nativeSrc": "4679:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4679:18:13"
																		},
																		"nativeSrc": "4679:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4679:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4649:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4649:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4657:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4657:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4646:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4646:2:13"
																},
																"nativeSrc": "4646:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4646:30:13"
															},
															"nativeSrc": "4643:56:13",
															"nodeType": "YulIf",
															"src": "4643:56:13"
														},
														{
															"nativeSrc": "4708:33:13",
															"nodeType": "YulAssignment",
															"src": "4708:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4724:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4724:1:13",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4727:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4720:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4720:3:13"
																		},
																		"nativeSrc": "4720:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4720:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4736:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4736:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4716:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4716:3:13"
																},
																"nativeSrc": "4716:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4716:25:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4708:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_string_dyn",
												"nativeSrc": "4565:182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4613:6:13",
														"nodeType": "YulTypedName",
														"src": "4613:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4624:4:13",
														"nodeType": "YulTypedName",
														"src": "4624:4:13",
														"type": ""
													}
												],
												"src": "4565:182:13"
											},
											{
												"body": {
													"nativeSrc": "4827:332:13",
													"nodeType": "YulBlock",
													"src": "4827:332:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4871:22:13",
																"nodeType": "YulBlock",
																"src": "4871:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4873:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4873:16:13"
																			},
																			"nativeSrc": "4873:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4873:18:13"
																		},
																		"nativeSrc": "4873:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4873:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4843:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4843:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4851:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4851:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4840:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4840:2:13"
																},
																"nativeSrc": "4840:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4840:30:13"
															},
															"nativeSrc": "4837:56:13",
															"nodeType": "YulIf",
															"src": "4837:56:13"
														},
														{
															"nativeSrc": "4902:66:13",
															"nodeType": "YulAssignment",
															"src": "4902:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4939:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "4939:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4947:2:13",
																								"nodeType": "YulLiteral",
																								"src": "4947:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4935:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4935:3:13"
																						},
																						"nativeSrc": "4935:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4935:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4956:2:13",
																								"nodeType": "YulLiteral",
																								"src": "4956:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4952:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4952:3:13"
																						},
																						"nativeSrc": "4952:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4952:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4931:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4931:3:13"
																				},
																				"nativeSrc": "4931:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4931:29:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4962:4:13",
																				"nodeType": "YulLiteral",
																				"src": "4962:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4927:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:13"
																		},
																		"nativeSrc": "4927:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:40:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4911:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "4911:15:13"
																},
																"nativeSrc": "4911:57:13",
																"nodeType": "YulFunctionCall",
																"src": "4911:57:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4902:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4902:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4984:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4984:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4991:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4991:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4977:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:13"
																},
																"nativeSrc": "4977:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4977:21:13"
															},
															"nativeSrc": "4977:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4977:21:13"
														},
														{
															"body": {
																"nativeSrc": "5036:16:13",
																"nodeType": "YulBlock",
																"src": "5036:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5045:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5045:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5048:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5048:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5038:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5038:6:13"
																			},
																			"nativeSrc": "5038:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:12:13"
																		},
																		"nativeSrc": "5038:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5017:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5017:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5022:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5022:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5013:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5013:3:13"
																		},
																		"nativeSrc": "5013:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5013:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5031:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5031:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5010:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5010:2:13"
																},
																"nativeSrc": "5010:25:13",
																"nodeType": "YulFunctionCall",
																"src": "5010:25:13"
															},
															"nativeSrc": "5007:45:13",
															"nodeType": "YulIf",
															"src": "5007:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "5078:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5078:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5085:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5085:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5074:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5074:3:13"
																		},
																		"nativeSrc": "5074:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5074:16:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5092:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5092:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5097:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5097:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5061:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5061:12:13"
																},
																"nativeSrc": "5061:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5061:43:13"
															},
															"nativeSrc": "5061:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "5061:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "5128:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5128:5:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5135:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5124:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5124:3:13"
																				},
																				"nativeSrc": "5124:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5124:18:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5144:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5120:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5120:3:13"
																		},
																		"nativeSrc": "5120:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5120:29:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5151:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5151:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5113:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5113:6:13"
																},
																"nativeSrc": "5113:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5113:40:13"
															},
															"nativeSrc": "5113:40:13",
															"nodeType": "YulExpressionStatement",
															"src": "5113:40:13"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "4752:407:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4796:3:13",
														"nodeType": "YulTypedName",
														"src": "4796:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4801:6:13",
														"nodeType": "YulTypedName",
														"src": "4801:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4809:3:13",
														"nodeType": "YulTypedName",
														"src": "4809:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4817:5:13",
														"nodeType": "YulTypedName",
														"src": "4817:5:13",
														"type": ""
													}
												],
												"src": "4752:407:13"
											},
											{
												"body": {
													"nativeSrc": "5228:603:13",
													"nodeType": "YulBlock",
													"src": "5228:603:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5277:16:13",
																"nodeType": "YulBlock",
																"src": "5277:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5286:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5286:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5289:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5289:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5279:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5279:6:13"
																			},
																			"nativeSrc": "5279:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5279:12:13"
																		},
																		"nativeSrc": "5279:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5279:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5256:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5256:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5264:4:13",
																						"nodeType": "YulLiteral",
																						"src": "5264:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5252:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:13"
																				},
																				"nativeSrc": "5252:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5252:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5271:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5271:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5248:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:13"
																		},
																		"nativeSrc": "5248:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5248:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5241:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:13"
																},
																"nativeSrc": "5241:35:13",
																"nodeType": "YulFunctionCall",
																"src": "5241:35:13"
															},
															"nativeSrc": "5238:55:13",
															"nodeType": "YulIf",
															"src": "5238:55:13"
														},
														{
															"nativeSrc": "5302:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5302:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5325:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5325:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5312:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5312:12:13"
																},
																"nativeSrc": "5312:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5312:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5306:2:13",
																	"nodeType": "YulTypedName",
																	"src": "5306:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5341:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5341:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5351:4:13",
																"nodeType": "YulLiteral",
																"src": "5351:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "5345:2:13",
																	"nodeType": "YulTypedName",
																	"src": "5345:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5364:70:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5364:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5430:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "5430:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_string_dyn",
																			"nativeSrc": "5391:38:13",
																			"nodeType": "YulIdentifier",
																			"src": "5391:38:13"
																		},
																		"nativeSrc": "5391:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:42:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5375:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "5375:15:13"
																},
																"nativeSrc": "5375:59:13",
																"nodeType": "YulFunctionCall",
																"src": "5375:59:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5368:3:13",
																	"nodeType": "YulTypedName",
																	"src": "5368:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5443:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5443:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "5456:3:13",
																"nodeType": "YulIdentifier",
																"src": "5456:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "5447:5:13",
																	"nodeType": "YulTypedName",
																	"src": "5447:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5475:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5475:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5480:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "5480:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5468:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:13"
																},
																"nativeSrc": "5468:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5468:15:13"
															},
															"nativeSrc": "5468:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5468:15:13"
														},
														{
															"nativeSrc": "5492:21:13",
															"nodeType": "YulAssignment",
															"src": "5492:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5503:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5503:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5508:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5508:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5499:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:13"
																},
																"nativeSrc": "5499:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5499:14:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5492:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5492:3:13"
																}
															]
														},
														{
															"nativeSrc": "5522:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5522:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5544:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5544:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5556:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5556:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "5559:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5559:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5552:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5552:3:13"
																				},
																				"nativeSrc": "5552:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5552:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5540:3:13"
																		},
																		"nativeSrc": "5540:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5540:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5565:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5565:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5536:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5536:3:13"
																},
																"nativeSrc": "5536:34:13",
																"nodeType": "YulFunctionCall",
																"src": "5536:34:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5526:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5526:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5598:16:13",
																"nodeType": "YulBlock",
																"src": "5598:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5607:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5607:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5610:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5610:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5600:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5600:6:13"
																			},
																			"nativeSrc": "5600:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5600:12:13"
																		},
																		"nativeSrc": "5600:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5600:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5585:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5585:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5593:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5593:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5582:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5582:2:13"
																},
																"nativeSrc": "5582:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5582:15:13"
															},
															"nativeSrc": "5579:35:13",
															"nodeType": "YulIf",
															"src": "5579:35:13"
														},
														{
															"nativeSrc": "5623:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5623:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5638:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5638:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5646:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5646:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5634:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5634:3:13"
																},
																"nativeSrc": "5634:17:13",
																"nodeType": "YulFunctionCall",
																"src": "5634:17:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "5627:3:13",
																	"nodeType": "YulTypedName",
																	"src": "5627:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5716:86:13",
																"nodeType": "YulBlock",
																"src": "5716:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5737:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5737:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "5755:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5755:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "5742:12:13",
																						"nodeType": "YulIdentifier",
																						"src": "5742:12:13"
																					},
																					"nativeSrc": "5742:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5742:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5730:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5730:6:13"
																			},
																			"nativeSrc": "5730:30:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5730:30:13"
																		},
																		"nativeSrc": "5730:30:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5730:30:13"
																	},
																	{
																		"nativeSrc": "5773:19:13",
																		"nodeType": "YulAssignment",
																		"src": "5773:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5784:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5784:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "5789:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5789:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5780:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:13"
																			},
																			"nativeSrc": "5780:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5780:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "5773:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5773:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5671:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5671:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5676:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5676:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5668:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5668:2:13"
																},
																"nativeSrc": "5668:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5668:15:13"
															},
															"nativeSrc": "5660:142:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5684:23:13",
																"nodeType": "YulBlock",
																"src": "5684:23:13",
																"statements": [
																	{
																		"nativeSrc": "5686:19:13",
																		"nodeType": "YulAssignment",
																		"src": "5686:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5697:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5697:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "5702:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5702:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5693:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5693:3:13"
																			},
																			"nativeSrc": "5693:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5693:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5686:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5686:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5664:3:13",
																"nodeType": "YulBlock",
																"src": "5664:3:13",
																"statements": []
															},
															"src": "5660:142:13"
														},
														{
															"nativeSrc": "5811:14:13",
															"nodeType": "YulAssignment",
															"src": "5811:14:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "5820:5:13",
																"nodeType": "YulIdentifier",
																"src": "5820:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5811:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5811:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nativeSrc": "5164:667:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5202:6:13",
														"nodeType": "YulTypedName",
														"src": "5202:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5210:3:13",
														"nodeType": "YulTypedName",
														"src": "5210:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5218:5:13",
														"nodeType": "YulTypedName",
														"src": "5218:5:13",
														"type": ""
													}
												],
												"src": "5164:667:13"
											},
											{
												"body": {
													"nativeSrc": "6000:1333:13",
													"nodeType": "YulBlock",
													"src": "6000:1333:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6046:16:13",
																"nodeType": "YulBlock",
																"src": "6046:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6055:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6055:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6058:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6058:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6048:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6048:6:13"
																			},
																			"nativeSrc": "6048:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6048:12:13"
																		},
																		"nativeSrc": "6048:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6048:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6021:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6021:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6030:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6030:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6017:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6017:3:13"
																		},
																		"nativeSrc": "6017:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6017:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6042:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6042:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6013:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6013:3:13"
																},
																"nativeSrc": "6013:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6013:32:13"
															},
															"nativeSrc": "6010:52:13",
															"nodeType": "YulIf",
															"src": "6010:52:13"
														},
														{
															"nativeSrc": "6071:39:13",
															"nodeType": "YulAssignment",
															"src": "6071:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6100:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6100:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6081:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6081:18:13"
																},
																"nativeSrc": "6081:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6081:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6071:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6071:6:13"
																}
															]
														},
														{
															"nativeSrc": "6119:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6119:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6129:2:13",
																"nodeType": "YulLiteral",
																"src": "6129:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6123:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6123:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6140:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6140:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6171:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6171:9:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6182:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6182:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6167:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6167:3:13"
																		},
																		"nativeSrc": "6167:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6167:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6154:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6154:12:13"
																},
																"nativeSrc": "6154:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6154:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6144:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6144:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6195:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6195:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6205:18:13",
																"nodeType": "YulLiteral",
																"src": "6205:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6199:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6199:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6250:16:13",
																"nodeType": "YulBlock",
																"src": "6250:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6259:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6259:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6262:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6262:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6252:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6252:6:13"
																			},
																			"nativeSrc": "6252:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6252:12:13"
																		},
																		"nativeSrc": "6252:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6252:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6238:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6238:6:13"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "6246:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6246:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6235:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6235:2:13"
																},
																"nativeSrc": "6235:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6235:14:13"
															},
															"nativeSrc": "6232:34:13",
															"nodeType": "YulIf",
															"src": "6232:34:13"
														},
														{
															"nativeSrc": "6275:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6275:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6289:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6289:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6300:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6300:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6285:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:13"
																},
																"nativeSrc": "6285:22:13",
																"nodeType": "YulFunctionCall",
																"src": "6285:22:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "6279:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6279:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6355:16:13",
																"nodeType": "YulBlock",
																"src": "6355:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6364:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6367:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6367:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6357:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6357:6:13"
																			},
																			"nativeSrc": "6357:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6357:12:13"
																		},
																		"nativeSrc": "6357:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6357:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "6334:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6334:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6338:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6338:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6330:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6330:3:13"
																				},
																				"nativeSrc": "6330:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6330:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6345:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6345:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6326:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:13"
																		},
																		"nativeSrc": "6326:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6326:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6319:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6319:6:13"
																},
																"nativeSrc": "6319:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6319:35:13"
															},
															"nativeSrc": "6316:55:13",
															"nodeType": "YulIf",
															"src": "6316:55:13"
														},
														{
															"nativeSrc": "6380:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6380:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "6403:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6403:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6390:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6390:12:13"
																},
																"nativeSrc": "6390:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6390:16:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "6384:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6384:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6415:70:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6415:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "6481:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6481:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_string_dyn",
																			"nativeSrc": "6442:38:13",
																			"nodeType": "YulIdentifier",
																			"src": "6442:38:13"
																		},
																		"nativeSrc": "6442:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6442:42:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6426:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6426:15:13"
																},
																"nativeSrc": "6426:59:13",
																"nodeType": "YulFunctionCall",
																"src": "6426:59:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6419:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6419:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6494:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6494:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "6507:3:13",
																"nodeType": "YulIdentifier",
																"src": "6507:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "6498:5:13",
																	"nodeType": "YulTypedName",
																	"src": "6498:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6526:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6526:3:13"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6531:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6531:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6519:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:13"
																},
																"nativeSrc": "6519:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6519:15:13"
															},
															"nativeSrc": "6519:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6519:15:13"
														},
														{
															"nativeSrc": "6543:19:13",
															"nodeType": "YulAssignment",
															"src": "6543:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6554:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6554:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6559:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6559:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6550:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6550:3:13"
																},
																"nativeSrc": "6550:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6550:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6543:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6543:3:13"
																}
															]
														},
														{
															"nativeSrc": "6571:42:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6571:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "6593:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6593:2:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6601:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6601:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "6604:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6604:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6597:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6597:3:13"
																				},
																				"nativeSrc": "6597:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6597:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6589:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:13"
																		},
																		"nativeSrc": "6589:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6589:19:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6610:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6610:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6585:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:13"
																},
																"nativeSrc": "6585:28:13",
																"nodeType": "YulFunctionCall",
																"src": "6585:28:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6575:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6575:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6645:16:13",
																"nodeType": "YulBlock",
																"src": "6645:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6654:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6654:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6657:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6657:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6647:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6647:6:13"
																			},
																			"nativeSrc": "6647:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6647:12:13"
																		},
																		"nativeSrc": "6647:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6647:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6628:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6628:6:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6636:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6636:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6625:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6625:2:13"
																},
																"nativeSrc": "6625:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6625:19:13"
															},
															"nativeSrc": "6622:39:13",
															"nodeType": "YulIf",
															"src": "6622:39:13"
														},
														{
															"nativeSrc": "6670:22:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6670:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "6685:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6685:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6689:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6689:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:13"
																},
																"nativeSrc": "6681:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6681:11:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "6674:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6674:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6757:362:13",
																"nodeType": "YulBlock",
																"src": "6757:362:13",
																"statements": [
																	{
																		"nativeSrc": "6771:36:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6771:36:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6803:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6803:3:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "6790:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "6790:12:13"
																			},
																			"nativeSrc": "6790:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6790:17:13"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "6775:11:13",
																				"nodeType": "YulTypedName",
																				"src": "6775:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6843:16:13",
																			"nodeType": "YulBlock",
																			"src": "6843:16:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6852:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6852:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6855:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6855:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "6845:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "6845:6:13"
																						},
																						"nativeSrc": "6845:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6845:12:13"
																					},
																					"nativeSrc": "6845:12:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "6845:12:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "6826:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "6826:11:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "6839:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6839:2:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6823:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6823:2:13"
																			},
																			"nativeSrc": "6823:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6823:19:13"
																		},
																		"nativeSrc": "6820:39:13",
																		"nodeType": "YulIf",
																		"src": "6820:39:13"
																	},
																	{
																		"nativeSrc": "6872:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6872:30:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "_3",
																					"nativeSrc": "6886:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6886:2:13"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "6890:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "6890:11:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6882:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6882:3:13"
																			},
																			"nativeSrc": "6882:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:20:13"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nativeSrc": "6876:2:13",
																				"nodeType": "YulTypedName",
																				"src": "6876:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6952:16:13",
																			"nodeType": "YulBlock",
																			"src": "6952:16:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6961:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6961:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6964:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6964:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "6954:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "6954:6:13"
																						},
																						"nativeSrc": "6954:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6954:12:13"
																					},
																					"nativeSrc": "6954:12:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "6954:12:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_5",
																									"nativeSrc": "6933:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "6933:2:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6937:2:13",
																									"nodeType": "YulLiteral",
																									"src": "6937:2:13",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6929:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6929:3:13"
																							},
																							"nativeSrc": "6929:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6929:11:13"
																						},
																						{
																							"name": "dataEnd",
																							"nativeSrc": "6942:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "6942:7:13"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nativeSrc": "6925:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6925:3:13"
																					},
																					"nativeSrc": "6925:25:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6925:25:13"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "6918:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6918:6:13"
																			},
																			"nativeSrc": "6918:33:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6918:33:13"
																		},
																		"nativeSrc": "6915:53:13",
																		"nodeType": "YulIf",
																		"src": "6915:53:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6988:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6988:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_5",
																									"nativeSrc": "7032:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "7032:2:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7036:2:13",
																									"nodeType": "YulLiteral",
																									"src": "7036:2:13",
																									"type": "",
																									"value": "64"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7028:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7028:3:13"
																							},
																							"nativeSrc": "7028:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7028:11:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_5",
																											"nativeSrc": "7058:2:13",
																											"nodeType": "YulIdentifier",
																											"src": "7058:2:13"
																										},
																										{
																											"name": "_1",
																											"nativeSrc": "7062:2:13",
																											"nodeType": "YulIdentifier",
																											"src": "7062:2:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "7054:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "7054:3:13"
																									},
																									"nativeSrc": "7054:11:13",
																									"nodeType": "YulFunctionCall",
																									"src": "7054:11:13"
																								}
																							],
																							"functionName": {
																								"name": "calldataload",
																								"nativeSrc": "7041:12:13",
																								"nodeType": "YulIdentifier",
																								"src": "7041:12:13"
																							},
																							"nativeSrc": "7041:25:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7041:25:13"
																						},
																						{
																							"name": "dataEnd",
																							"nativeSrc": "7068:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7068:7:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_available_length_string",
																						"nativeSrc": "6993:34:13",
																						"nodeType": "YulIdentifier",
																						"src": "6993:34:13"
																					},
																					"nativeSrc": "6993:83:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6993:83:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6981:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6981:6:13"
																			},
																			"nativeSrc": "6981:96:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6981:96:13"
																		},
																		"nativeSrc": "6981:96:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6981:96:13"
																	},
																	{
																		"nativeSrc": "7090:19:13",
																		"nodeType": "YulAssignment",
																		"src": "7090:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7101:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7101:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "7106:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "7106:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7097:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7097:3:13"
																			},
																			"nativeSrc": "7097:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7097:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7090:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7090:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6712:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6712:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6717:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6717:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6709:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6709:2:13"
																},
																"nativeSrc": "6709:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6709:15:13"
															},
															"nativeSrc": "6701:418:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6725:23:13",
																"nodeType": "YulBlock",
																"src": "6725:23:13",
																"statements": [
																	{
																		"nativeSrc": "6727:19:13",
																		"nodeType": "YulAssignment",
																		"src": "6727:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6738:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6738:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6743:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6743:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6734:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:13"
																			},
																			"nativeSrc": "6734:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6734:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6727:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6727:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6705:3:13",
																"nodeType": "YulBlock",
																"src": "6705:3:13",
																"statements": []
															},
															"src": "6701:418:13"
														},
														{
															"nativeSrc": "7128:15:13",
															"nodeType": "YulAssignment",
															"src": "7128:15:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "7138:5:13",
																"nodeType": "YulIdentifier",
																"src": "7138:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7128:6:13"
																}
															]
														},
														{
															"nativeSrc": "7152:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7152:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7185:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7185:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7196:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7196:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7181:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7181:3:13"
																		},
																		"nativeSrc": "7181:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7181:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7168:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7168:12:13"
																},
																"nativeSrc": "7168:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7168:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "7156:8:13",
																	"nodeType": "YulTypedName",
																	"src": "7156:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7229:16:13",
																"nodeType": "YulBlock",
																"src": "7229:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7238:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7238:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7241:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7241:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7231:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7231:6:13"
																			},
																			"nativeSrc": "7231:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7231:12:13"
																		},
																		"nativeSrc": "7231:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7231:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "7215:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7215:8:13"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "7225:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7225:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7212:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7212:2:13"
																},
																"nativeSrc": "7212:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7212:16:13"
															},
															"nativeSrc": "7209:36:13",
															"nodeType": "YulIf",
															"src": "7209:36:13"
														},
														{
															"nativeSrc": "7254:73:13",
															"nodeType": "YulAssignment",
															"src": "7254:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7297:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "7308:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "7308:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7293:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7293:3:13"
																		},
																		"nativeSrc": "7293:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7293:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7319:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "7319:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "7264:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "7264:28:13"
																},
																"nativeSrc": "7264:63:13",
																"nodeType": "YulFunctionCall",
																"src": "7264:63:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7254:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7254:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5836:1497:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5950:9:13",
														"nodeType": "YulTypedName",
														"src": "5950:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5961:7:13",
														"nodeType": "YulTypedName",
														"src": "5961:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5973:6:13",
														"nodeType": "YulTypedName",
														"src": "5973:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5981:6:13",
														"nodeType": "YulTypedName",
														"src": "5981:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5989:6:13",
														"nodeType": "YulTypedName",
														"src": "5989:6:13",
														"type": ""
													}
												],
												"src": "5836:1497:13"
											},
											{
												"body": {
													"nativeSrc": "7422:263:13",
													"nodeType": "YulBlock",
													"src": "7422:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7468:16:13",
																"nodeType": "YulBlock",
																"src": "7468:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7477:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7477:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7480:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7480:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7470:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7470:6:13"
																			},
																			"nativeSrc": "7470:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:12:13"
																		},
																		"nativeSrc": "7470:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7443:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7452:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7439:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:13"
																		},
																		"nativeSrc": "7439:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7439:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7464:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7435:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:13"
																},
																"nativeSrc": "7435:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7435:32:13"
															},
															"nativeSrc": "7432:52:13",
															"nodeType": "YulIf",
															"src": "7432:52:13"
														},
														{
															"nativeSrc": "7493:39:13",
															"nodeType": "YulAssignment",
															"src": "7493:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7522:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7522:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7503:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7503:18:13"
																},
																"nativeSrc": "7503:29:13",
																"nodeType": "YulFunctionCall",
																"src": "7503:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7493:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:13"
																}
															]
														},
														{
															"nativeSrc": "7541:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7541:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7571:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7571:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7582:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7582:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7567:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7567:3:13"
																		},
																		"nativeSrc": "7567:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7554:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7554:12:13"
																},
																"nativeSrc": "7554:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7554:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7545:5:13",
																	"nodeType": "YulTypedName",
																	"src": "7545:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7639:16:13",
																"nodeType": "YulBlock",
																"src": "7639:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7648:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7651:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7641:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:13"
																			},
																			"nativeSrc": "7641:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:13"
																		},
																		"nativeSrc": "7641:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7608:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7608:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7629:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "7629:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7622:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7622:6:13"
																						},
																						"nativeSrc": "7622:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7622:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7615:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7615:6:13"
																				},
																				"nativeSrc": "7615:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7615:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7605:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7605:2:13"
																		},
																		"nativeSrc": "7605:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7605:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7598:6:13"
																},
																"nativeSrc": "7598:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7598:40:13"
															},
															"nativeSrc": "7595:60:13",
															"nodeType": "YulIf",
															"src": "7595:60:13"
														},
														{
															"nativeSrc": "7664:15:13",
															"nodeType": "YulAssignment",
															"src": "7664:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "7674:5:13",
																"nodeType": "YulIdentifier",
																"src": "7674:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7664:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7338:347:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7380:9:13",
														"nodeType": "YulTypedName",
														"src": "7380:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7391:7:13",
														"nodeType": "YulTypedName",
														"src": "7391:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7403:6:13",
														"nodeType": "YulTypedName",
														"src": "7403:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7411:6:13",
														"nodeType": "YulTypedName",
														"src": "7411:6:13",
														"type": ""
													}
												],
												"src": "7338:347:13"
											},
											{
												"body": {
													"nativeSrc": "7782:283:13",
													"nodeType": "YulBlock",
													"src": "7782:283:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7831:16:13",
																"nodeType": "YulBlock",
																"src": "7831:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7840:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7840:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7843:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7843:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7833:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7833:6:13"
																			},
																			"nativeSrc": "7833:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7833:12:13"
																		},
																		"nativeSrc": "7833:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7833:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7810:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7810:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7818:4:13",
																						"nodeType": "YulLiteral",
																						"src": "7818:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7806:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7806:3:13"
																				},
																				"nativeSrc": "7806:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7806:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7825:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7825:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7802:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7802:3:13"
																		},
																		"nativeSrc": "7802:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7802:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:13"
																},
																"nativeSrc": "7795:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7795:35:13"
															},
															"nativeSrc": "7792:55:13",
															"nodeType": "YulIf",
															"src": "7792:55:13"
														},
														{
															"nativeSrc": "7856:30:13",
															"nodeType": "YulAssignment",
															"src": "7856:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7879:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7879:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7866:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7866:12:13"
																},
																"nativeSrc": "7866:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7866:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7856:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7856:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7929:16:13",
																"nodeType": "YulBlock",
																"src": "7929:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7938:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7938:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7941:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7941:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7931:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7931:6:13"
																			},
																			"nativeSrc": "7931:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7931:12:13"
																		},
																		"nativeSrc": "7931:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7931:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7901:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7901:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7909:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7909:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7898:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7898:2:13"
																},
																"nativeSrc": "7898:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7898:30:13"
															},
															"nativeSrc": "7895:50:13",
															"nodeType": "YulIf",
															"src": "7895:50:13"
														},
														{
															"nativeSrc": "7954:29:13",
															"nodeType": "YulAssignment",
															"src": "7954:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7970:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7970:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7978:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7978:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7966:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7966:3:13"
																},
																"nativeSrc": "7966:17:13",
																"nodeType": "YulFunctionCall",
																"src": "7966:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7954:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7954:8:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8043:16:13",
																"nodeType": "YulBlock",
																"src": "8043:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8052:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8052:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8055:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8055:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8045:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8045:6:13"
																			},
																			"nativeSrc": "8045:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8045:12:13"
																		},
																		"nativeSrc": "8045:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8045:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8006:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8006:6:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8018:1:13",
																								"nodeType": "YulLiteral",
																								"src": "8018:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "8021:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "8021:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8014:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8014:3:13"
																						},
																						"nativeSrc": "8014:14:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8014:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8002:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8002:3:13"
																				},
																				"nativeSrc": "8002:27:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8002:27:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8031:4:13",
																				"nodeType": "YulLiteral",
																				"src": "8031:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7998:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7998:3:13"
																		},
																		"nativeSrc": "7998:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7998:38:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8038:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8038:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7995:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7995:2:13"
																},
																"nativeSrc": "7995:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7995:47:13"
															},
															"nativeSrc": "7992:67:13",
															"nodeType": "YulIf",
															"src": "7992:67:13"
														}
													]
												},
												"name": "abi_decode_array_string_calldata_dyn_calldata",
												"nativeSrc": "7690:375:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7745:6:13",
														"nodeType": "YulTypedName",
														"src": "7745:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7753:3:13",
														"nodeType": "YulTypedName",
														"src": "7753:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "7761:8:13",
														"nodeType": "YulTypedName",
														"src": "7761:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7771:6:13",
														"nodeType": "YulTypedName",
														"src": "7771:6:13",
														"type": ""
													}
												],
												"src": "7690:375:13"
											},
											{
												"body": {
													"nativeSrc": "8256:683:13",
													"nodeType": "YulBlock",
													"src": "8256:683:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8302:16:13",
																"nodeType": "YulBlock",
																"src": "8302:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8311:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8311:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8314:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8314:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8304:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8304:6:13"
																			},
																			"nativeSrc": "8304:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8304:12:13"
																		},
																		"nativeSrc": "8304:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8304:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8277:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8277:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8286:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8286:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8273:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8273:3:13"
																		},
																		"nativeSrc": "8273:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8273:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8298:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8298:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8269:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8269:3:13"
																},
																"nativeSrc": "8269:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8269:32:13"
															},
															"nativeSrc": "8266:52:13",
															"nodeType": "YulIf",
															"src": "8266:52:13"
														},
														{
															"nativeSrc": "8327:33:13",
															"nodeType": "YulAssignment",
															"src": "8327:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8350:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8350:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8337:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8337:12:13"
																},
																"nativeSrc": "8337:23:13",
																"nodeType": "YulFunctionCall",
																"src": "8337:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:13"
																}
															]
														},
														{
															"nativeSrc": "8369:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8369:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8400:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8411:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8411:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8396:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8396:3:13"
																		},
																		"nativeSrc": "8396:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8383:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8383:12:13"
																},
																"nativeSrc": "8383:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8383:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8373:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8373:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8424:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8424:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8434:18:13",
																"nodeType": "YulLiteral",
																"src": "8434:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8428:2:13",
																	"nodeType": "YulTypedName",
																	"src": "8428:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8479:16:13",
																"nodeType": "YulBlock",
																"src": "8479:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8488:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8488:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8491:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8491:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8481:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8481:6:13"
																			},
																			"nativeSrc": "8481:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8481:12:13"
																		},
																		"nativeSrc": "8481:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8481:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8467:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8467:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "8475:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "8475:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8464:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8464:2:13"
																},
																"nativeSrc": "8464:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8464:14:13"
															},
															"nativeSrc": "8461:34:13",
															"nodeType": "YulIf",
															"src": "8461:34:13"
														},
														{
															"nativeSrc": "8504:104:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8504:104:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8580:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8580:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8591:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8591:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8576:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8576:3:13"
																		},
																		"nativeSrc": "8576:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8576:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8600:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "8600:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_calldata_dyn_calldata",
																	"nativeSrc": "8530:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "8530:45:13"
																},
																"nativeSrc": "8530:78:13",
																"nodeType": "YulFunctionCall",
																"src": "8530:78:13"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nativeSrc": "8508:8:13",
																	"nodeType": "YulTypedName",
																	"src": "8508:8:13",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nativeSrc": "8518:8:13",
																	"nodeType": "YulTypedName",
																	"src": "8518:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8617:18:13",
															"nodeType": "YulAssignment",
															"src": "8617:18:13",
															"value": {
																"name": "value1_1",
																"nativeSrc": "8627:8:13",
																"nodeType": "YulIdentifier",
																"src": "8627:8:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8617:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:13"
																}
															]
														},
														{
															"nativeSrc": "8644:18:13",
															"nodeType": "YulAssignment",
															"src": "8644:18:13",
															"value": {
																"name": "value2_1",
																"nativeSrc": "8654:8:13",
																"nodeType": "YulIdentifier",
																"src": "8654:8:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8644:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8644:6:13"
																}
															]
														},
														{
															"nativeSrc": "8671:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8671:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8704:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8704:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8715:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8715:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8700:3:13"
																		},
																		"nativeSrc": "8700:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8700:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8687:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8687:12:13"
																},
																"nativeSrc": "8687:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8687:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "8675:8:13",
																	"nodeType": "YulTypedName",
																	"src": "8675:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8748:16:13",
																"nodeType": "YulBlock",
																"src": "8748:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8757:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8757:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8760:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8760:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8750:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8750:6:13"
																			},
																			"nativeSrc": "8750:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8750:12:13"
																		},
																		"nativeSrc": "8750:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8750:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "8734:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "8734:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "8744:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "8744:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8731:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8731:2:13"
																},
																"nativeSrc": "8731:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8731:16:13"
															},
															"nativeSrc": "8728:36:13",
															"nodeType": "YulIf",
															"src": "8728:36:13"
														},
														{
															"nativeSrc": "8773:106:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8773:106:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8849:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8849:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "8860:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "8860:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8845:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8845:3:13"
																		},
																		"nativeSrc": "8845:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8845:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8871:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "8871:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_calldata_dyn_calldata",
																	"nativeSrc": "8799:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "8799:45:13"
																},
																"nativeSrc": "8799:80:13",
																"nodeType": "YulFunctionCall",
																"src": "8799:80:13"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nativeSrc": "8777:8:13",
																	"nodeType": "YulTypedName",
																	"src": "8777:8:13",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nativeSrc": "8787:8:13",
																	"nodeType": "YulTypedName",
																	"src": "8787:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8888:18:13",
															"nodeType": "YulAssignment",
															"src": "8888:18:13",
															"value": {
																"name": "value3_1",
																"nativeSrc": "8898:8:13",
																"nodeType": "YulIdentifier",
																"src": "8898:8:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "8888:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8888:6:13"
																}
															]
														},
														{
															"nativeSrc": "8915:18:13",
															"nodeType": "YulAssignment",
															"src": "8915:18:13",
															"value": {
																"name": "value4_1",
																"nativeSrc": "8925:8:13",
																"nodeType": "YulIdentifier",
																"src": "8925:8:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "8915:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8915:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_string_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "8070:869:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8190:9:13",
														"nodeType": "YulTypedName",
														"src": "8190:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8201:7:13",
														"nodeType": "YulTypedName",
														"src": "8201:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8213:6:13",
														"nodeType": "YulTypedName",
														"src": "8213:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8221:6:13",
														"nodeType": "YulTypedName",
														"src": "8221:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8229:6:13",
														"nodeType": "YulTypedName",
														"src": "8229:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8237:6:13",
														"nodeType": "YulTypedName",
														"src": "8237:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8245:6:13",
														"nodeType": "YulTypedName",
														"src": "8245:6:13",
														"type": ""
													}
												],
												"src": "8070:869:13"
											},
											{
												"body": {
													"nativeSrc": "9074:537:13",
													"nodeType": "YulBlock",
													"src": "9074:537:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9121:16:13",
																"nodeType": "YulBlock",
																"src": "9121:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9130:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9130:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9133:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9133:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9123:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9123:6:13"
																			},
																			"nativeSrc": "9123:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9123:12:13"
																		},
																		"nativeSrc": "9123:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9123:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9095:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9095:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9104:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9104:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9091:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:13"
																		},
																		"nativeSrc": "9091:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9091:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9116:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9116:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9087:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9087:3:13"
																},
																"nativeSrc": "9087:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9087:33:13"
															},
															"nativeSrc": "9084:53:13",
															"nodeType": "YulIf",
															"src": "9084:53:13"
														},
														{
															"nativeSrc": "9146:39:13",
															"nodeType": "YulAssignment",
															"src": "9146:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9175:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9175:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9156:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9156:18:13"
																},
																"nativeSrc": "9156:29:13",
																"nodeType": "YulFunctionCall",
																"src": "9156:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9146:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9146:6:13"
																}
															]
														},
														{
															"nativeSrc": "9194:48:13",
															"nodeType": "YulAssignment",
															"src": "9194:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9227:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9227:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9238:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9238:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9223:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9223:3:13"
																		},
																		"nativeSrc": "9223:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9223:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9204:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9204:18:13"
																},
																"nativeSrc": "9204:38:13",
																"nodeType": "YulFunctionCall",
																"src": "9204:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9194:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9194:6:13"
																}
															]
														},
														{
															"nativeSrc": "9251:42:13",
															"nodeType": "YulAssignment",
															"src": "9251:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9278:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9278:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9289:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9289:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9274:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:13"
																		},
																		"nativeSrc": "9274:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9274:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9261:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9261:12:13"
																},
																"nativeSrc": "9261:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9261:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9251:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9251:6:13"
																}
															]
														},
														{
															"nativeSrc": "9302:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9302:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9333:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9333:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9344:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9344:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9329:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9329:3:13"
																		},
																		"nativeSrc": "9329:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9329:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9316:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9316:12:13"
																},
																"nativeSrc": "9316:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9316:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "9306:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9306:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9391:16:13",
																"nodeType": "YulBlock",
																"src": "9391:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9400:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9400:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9403:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9403:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9393:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9393:6:13"
																			},
																			"nativeSrc": "9393:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9393:12:13"
																		},
																		"nativeSrc": "9393:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9393:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9363:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9363:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9371:18:13",
																		"nodeType": "YulLiteral",
																		"src": "9371:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9360:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9360:2:13"
																},
																"nativeSrc": "9360:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9360:30:13"
															},
															"nativeSrc": "9357:50:13",
															"nodeType": "YulIf",
															"src": "9357:50:13"
														},
														{
															"nativeSrc": "9416:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9416:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9430:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9430:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "9441:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9441:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9426:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9426:3:13"
																},
																"nativeSrc": "9426:22:13",
																"nodeType": "YulFunctionCall",
																"src": "9426:22:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9420:2:13",
																	"nodeType": "YulTypedName",
																	"src": "9420:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9496:16:13",
																"nodeType": "YulBlock",
																"src": "9496:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9505:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9505:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9508:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9508:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9498:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9498:6:13"
																			},
																			"nativeSrc": "9498:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9498:12:13"
																		},
																		"nativeSrc": "9498:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9498:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "9475:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9475:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9479:4:13",
																						"nodeType": "YulLiteral",
																						"src": "9479:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9471:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9471:3:13"
																				},
																				"nativeSrc": "9471:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9471:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9486:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9486:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9467:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9467:3:13"
																		},
																		"nativeSrc": "9467:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9467:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9460:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9460:6:13"
																},
																"nativeSrc": "9460:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9460:35:13"
															},
															"nativeSrc": "9457:55:13",
															"nodeType": "YulIf",
															"src": "9457:55:13"
														},
														{
															"nativeSrc": "9521:84:13",
															"nodeType": "YulAssignment",
															"src": "9521:84:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "9570:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "9570:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9574:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9574:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9566:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:13"
																		},
																		"nativeSrc": "9566:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9566:11:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "9592:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "9592:2:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9579:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9579:12:13"
																		},
																		"nativeSrc": "9579:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:16:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "9597:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "9597:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "9531:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "9531:34:13"
																},
																"nativeSrc": "9531:74:13",
																"nodeType": "YulFunctionCall",
																"src": "9531:74:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "9521:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9521:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8944:667:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9016:9:13",
														"nodeType": "YulTypedName",
														"src": "9016:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9027:7:13",
														"nodeType": "YulTypedName",
														"src": "9027:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9039:6:13",
														"nodeType": "YulTypedName",
														"src": "9039:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9047:6:13",
														"nodeType": "YulTypedName",
														"src": "9047:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9055:6:13",
														"nodeType": "YulTypedName",
														"src": "9055:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9063:6:13",
														"nodeType": "YulTypedName",
														"src": "9063:6:13",
														"type": ""
													}
												],
												"src": "8944:667:13"
											},
											{
												"body": {
													"nativeSrc": "9703:173:13",
													"nodeType": "YulBlock",
													"src": "9703:173:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9749:16:13",
																"nodeType": "YulBlock",
																"src": "9749:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9758:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9758:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9761:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9761:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9751:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9751:6:13"
																			},
																			"nativeSrc": "9751:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9751:12:13"
																		},
																		"nativeSrc": "9751:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9751:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9724:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9724:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9733:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9733:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9720:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9720:3:13"
																		},
																		"nativeSrc": "9720:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9745:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9745:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9716:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:13"
																},
																"nativeSrc": "9716:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9716:32:13"
															},
															"nativeSrc": "9713:52:13",
															"nodeType": "YulIf",
															"src": "9713:52:13"
														},
														{
															"nativeSrc": "9774:39:13",
															"nodeType": "YulAssignment",
															"src": "9774:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9803:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9803:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9784:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9784:18:13"
																},
																"nativeSrc": "9784:29:13",
																"nodeType": "YulFunctionCall",
																"src": "9784:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9774:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9774:6:13"
																}
															]
														},
														{
															"nativeSrc": "9822:48:13",
															"nodeType": "YulAssignment",
															"src": "9822:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9855:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9855:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9866:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9866:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9851:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:13"
																		},
																		"nativeSrc": "9851:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9851:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9832:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9832:18:13"
																},
																"nativeSrc": "9832:38:13",
																"nodeType": "YulFunctionCall",
																"src": "9832:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9822:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9822:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9616:260:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9661:9:13",
														"nodeType": "YulTypedName",
														"src": "9661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9672:7:13",
														"nodeType": "YulTypedName",
														"src": "9672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9684:6:13",
														"nodeType": "YulTypedName",
														"src": "9684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9692:6:13",
														"nodeType": "YulTypedName",
														"src": "9692:6:13",
														"type": ""
													}
												],
												"src": "9616:260:13"
											},
											{
												"body": {
													"nativeSrc": "9936:325:13",
													"nodeType": "YulBlock",
													"src": "9936:325:13",
													"statements": [
														{
															"nativeSrc": "9946:22:13",
															"nodeType": "YulAssignment",
															"src": "9946:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9960:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9960:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "9963:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9963:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9956:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9956:3:13"
																},
																"nativeSrc": "9956:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9956:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9946:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9946:6:13"
																}
															]
														},
														{
															"nativeSrc": "9977:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9977:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10007:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10007:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10013:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10013:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10003:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:13"
																},
																"nativeSrc": "10003:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10003:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9981:18:13",
																	"nodeType": "YulTypedName",
																	"src": "9981:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10054:31:13",
																"nodeType": "YulBlock",
																"src": "10054:31:13",
																"statements": [
																	{
																		"nativeSrc": "10056:27:13",
																		"nodeType": "YulAssignment",
																		"src": "10056:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10070:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "10070:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10078:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10078:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10066:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10066:3:13"
																			},
																			"nativeSrc": "10066:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10066:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10056:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10056:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10034:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "10034:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10027:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10027:6:13"
																},
																"nativeSrc": "10027:26:13",
																"nodeType": "YulFunctionCall",
																"src": "10027:26:13"
															},
															"nativeSrc": "10024:61:13",
															"nodeType": "YulIf",
															"src": "10024:61:13"
														},
														{
															"body": {
																"nativeSrc": "10144:111:13",
																"nodeType": "YulBlock",
																"src": "10144:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10165:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10165:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10172:3:13",
																							"nodeType": "YulLiteral",
																							"src": "10172:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10177:10:13",
																							"nodeType": "YulLiteral",
																							"src": "10177:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10168:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "10168:3:13"
																					},
																					"nativeSrc": "10168:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10168:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10158:6:13"
																			},
																			"nativeSrc": "10158:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10158:31:13"
																		},
																		"nativeSrc": "10158:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10158:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10209:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10209:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10212:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10212:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10202:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10202:6:13"
																			},
																			"nativeSrc": "10202:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10202:15:13"
																		},
																		"nativeSrc": "10202:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10202:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10237:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10237:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10240:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10240:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10230:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10230:6:13"
																			},
																			"nativeSrc": "10230:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10230:15:13"
																		},
																		"nativeSrc": "10230:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10230:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10100:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "10100:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10123:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10123:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10131:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10131:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10120:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10120:2:13"
																		},
																		"nativeSrc": "10120:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10120:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10097:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10097:2:13"
																},
																"nativeSrc": "10097:38:13",
																"nodeType": "YulFunctionCall",
																"src": "10097:38:13"
															},
															"nativeSrc": "10094:161:13",
															"nodeType": "YulIf",
															"src": "10094:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9881:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9916:4:13",
														"nodeType": "YulTypedName",
														"src": "9916:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9925:6:13",
														"nodeType": "YulTypedName",
														"src": "9925:6:13",
														"type": ""
													}
												],
												"src": "9881:380:13"
											},
											{
												"body": {
													"nativeSrc": "10423:218:13",
													"nodeType": "YulBlock",
													"src": "10423:218:13",
													"statements": [
														{
															"nativeSrc": "10433:26:13",
															"nodeType": "YulAssignment",
															"src": "10433:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10445:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10445:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10456:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10456:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10441:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10441:3:13"
																},
																"nativeSrc": "10441:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10441:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10433:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10433:4:13"
																}
															]
														},
														{
															"nativeSrc": "10468:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10468:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10486:3:13",
																				"nodeType": "YulLiteral",
																				"src": "10486:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10491:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10491:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10482:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10482:3:13"
																		},
																		"nativeSrc": "10482:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10482:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10495:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10495:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10478:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10478:3:13"
																},
																"nativeSrc": "10478:19:13",
																"nodeType": "YulFunctionCall",
																"src": "10478:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10472:2:13",
																	"nodeType": "YulTypedName",
																	"src": "10472:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10513:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10513:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10528:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10528:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10536:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "10536:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10524:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10524:3:13"
																		},
																		"nativeSrc": "10524:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10524:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10506:6:13"
																},
																"nativeSrc": "10506:34:13",
																"nodeType": "YulFunctionCall",
																"src": "10506:34:13"
															},
															"nativeSrc": "10506:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "10506:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10560:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10560:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10571:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10571:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10556:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10556:3:13"
																		},
																		"nativeSrc": "10556:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10556:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10576:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10576:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10549:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10549:6:13"
																},
																"nativeSrc": "10549:34:13",
																"nodeType": "YulFunctionCall",
																"src": "10549:34:13"
															},
															"nativeSrc": "10549:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "10549:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10603:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10603:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10614:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10614:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10599:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10599:3:13"
																		},
																		"nativeSrc": "10599:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10599:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "10623:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10623:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10631:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "10631:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10619:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:13"
																		},
																		"nativeSrc": "10619:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10619:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10592:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10592:6:13"
																},
																"nativeSrc": "10592:43:13",
																"nodeType": "YulFunctionCall",
																"src": "10592:43:13"
															},
															"nativeSrc": "10592:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "10592:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10266:375:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10376:9:13",
														"nodeType": "YulTypedName",
														"src": "10376:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10387:6:13",
														"nodeType": "YulTypedName",
														"src": "10387:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10395:6:13",
														"nodeType": "YulTypedName",
														"src": "10395:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10403:6:13",
														"nodeType": "YulTypedName",
														"src": "10403:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10414:4:13",
														"nodeType": "YulTypedName",
														"src": "10414:4:13",
														"type": ""
													}
												],
												"src": "10266:375:13"
											},
											{
												"body": {
													"nativeSrc": "10795:124:13",
													"nodeType": "YulBlock",
													"src": "10795:124:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10818:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10818:3:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10823:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10823:6:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10831:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10831:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10805:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10805:12:13"
																},
																"nativeSrc": "10805:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10805:33:13"
															},
															"nativeSrc": "10805:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "10805:33:13"
														},
														{
															"nativeSrc": "10847:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10847:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10861:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10861:3:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10866:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10866:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10857:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10857:3:13"
																},
																"nativeSrc": "10857:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10857:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10851:2:13",
																	"nodeType": "YulTypedName",
																	"src": "10851:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10889:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "10889:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10893:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10893:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10882:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:13"
																},
																"nativeSrc": "10882:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10882:13:13"
															},
															"nativeSrc": "10882:13:13",
															"nodeType": "YulExpressionStatement",
															"src": "10882:13:13"
														},
														{
															"nativeSrc": "10904:9:13",
															"nodeType": "YulAssignment",
															"src": "10904:9:13",
															"value": {
																"name": "_1",
																"nativeSrc": "10911:2:13",
																"nodeType": "YulIdentifier",
																"src": "10911:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10904:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10904:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10646:273:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10763:3:13",
														"nodeType": "YulTypedName",
														"src": "10763:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10768:6:13",
														"nodeType": "YulTypedName",
														"src": "10768:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10776:6:13",
														"nodeType": "YulTypedName",
														"src": "10776:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10787:3:13",
														"nodeType": "YulTypedName",
														"src": "10787:3:13",
														"type": ""
													}
												],
												"src": "10646:273:13"
											},
											{
												"body": {
													"nativeSrc": "11098:236:13",
													"nodeType": "YulBlock",
													"src": "11098:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11115:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11115:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11108:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11108:6:13"
																},
																"nativeSrc": "11108:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11108:21:13"
															},
															"nativeSrc": "11108:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11108:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11149:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11149:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11160:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11160:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11145:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:13"
																		},
																		"nativeSrc": "11145:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11145:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11165:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11165:2:13",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11138:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:13"
																},
																"nativeSrc": "11138:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11138:30:13"
															},
															"nativeSrc": "11138:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "11138:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11188:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11188:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11199:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11199:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11184:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11184:3:13"
																		},
																		"nativeSrc": "11184:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11184:18:13"
																	},
																	{
																		"hexValue": "43726564697420747970657320616e6420737570706c79206c696d697473206c",
																		"kind": "string",
																		"nativeSrc": "11204:34:13",
																		"nodeType": "YulLiteral",
																		"src": "11204:34:13",
																		"type": "",
																		"value": "Credit types and supply limits l"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11177:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11177:6:13"
																},
																"nativeSrc": "11177:62:13",
																"nodeType": "YulFunctionCall",
																"src": "11177:62:13"
															},
															"nativeSrc": "11177:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "11177:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11259:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11259:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11270:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11270:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11255:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11255:3:13"
																		},
																		"nativeSrc": "11255:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11255:18:13"
																	},
																	{
																		"hexValue": "656e677468206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "11275:16:13",
																		"nodeType": "YulLiteral",
																		"src": "11275:16:13",
																		"type": "",
																		"value": "ength mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11248:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11248:6:13"
																},
																"nativeSrc": "11248:44:13",
																"nodeType": "YulFunctionCall",
																"src": "11248:44:13"
															},
															"nativeSrc": "11248:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "11248:44:13"
														},
														{
															"nativeSrc": "11301:27:13",
															"nodeType": "YulAssignment",
															"src": "11301:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11313:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11313:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11324:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11324:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11309:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11309:3:13"
																},
																"nativeSrc": "11309:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11309:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11301:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11301:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2cb6a5a9896aee21175869d21ed4d91ef4be1b4b6e0dabc3887c3e2a19cd06d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10924:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11075:9:13",
														"nodeType": "YulTypedName",
														"src": "11075:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11089:4:13",
														"nodeType": "YulTypedName",
														"src": "11089:4:13",
														"type": ""
													}
												],
												"src": "10924:410:13"
											},
											{
												"body": {
													"nativeSrc": "11387:174:13",
													"nodeType": "YulBlock",
													"src": "11387:174:13",
													"statements": [
														{
															"nativeSrc": "11397:16:13",
															"nodeType": "YulAssignment",
															"src": "11397:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11408:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11408:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11411:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11411:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11404:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11404:3:13"
																},
																"nativeSrc": "11404:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11404:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11397:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11397:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11444:111:13",
																"nodeType": "YulBlock",
																"src": "11444:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11465:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11465:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11472:3:13",
																							"nodeType": "YulLiteral",
																							"src": "11472:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11477:10:13",
																							"nodeType": "YulLiteral",
																							"src": "11477:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "11468:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "11468:3:13"
																					},
																					"nativeSrc": "11468:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11468:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11458:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11458:6:13"
																			},
																			"nativeSrc": "11458:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11458:31:13"
																		},
																		"nativeSrc": "11458:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11458:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11509:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11509:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11512:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11512:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11502:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11502:6:13"
																			},
																			"nativeSrc": "11502:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11502:15:13"
																		},
																		"nativeSrc": "11502:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11502:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11537:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11537:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11540:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11540:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11530:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11530:6:13"
																			},
																			"nativeSrc": "11530:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11530:15:13"
																		},
																		"nativeSrc": "11530:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11530:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11428:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11428:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11431:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11431:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11425:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11425:2:13"
																},
																"nativeSrc": "11425:10:13",
																"nodeType": "YulFunctionCall",
																"src": "11425:10:13"
															},
															"nativeSrc": "11422:133:13",
															"nodeType": "YulIf",
															"src": "11422:133:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11339:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11370:1:13",
														"nodeType": "YulTypedName",
														"src": "11370:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11373:1:13",
														"nodeType": "YulTypedName",
														"src": "11373:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11379:3:13",
														"nodeType": "YulTypedName",
														"src": "11379:3:13",
														"type": ""
													}
												],
												"src": "11339:222:13"
											},
											{
												"body": {
													"nativeSrc": "11598:95:13",
													"nodeType": "YulBlock",
													"src": "11598:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11615:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11615:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11622:3:13",
																				"nodeType": "YulLiteral",
																				"src": "11622:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11627:10:13",
																				"nodeType": "YulLiteral",
																				"src": "11627:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11618:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11618:3:13"
																		},
																		"nativeSrc": "11618:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11618:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11608:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11608:6:13"
																},
																"nativeSrc": "11608:31:13",
																"nodeType": "YulFunctionCall",
																"src": "11608:31:13"
															},
															"nativeSrc": "11608:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "11608:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11655:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11655:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11658:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11658:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11648:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11648:6:13"
																},
																"nativeSrc": "11648:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11648:15:13"
															},
															"nativeSrc": "11648:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11648:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11679:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11679:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11682:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11682:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11672:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11672:6:13"
																},
																"nativeSrc": "11672:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11672:15:13"
															},
															"nativeSrc": "11672:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11672:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11566:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "11566:127:13"
											},
											{
												"body": {
													"nativeSrc": "11754:65:13",
													"nodeType": "YulBlock",
													"src": "11754:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11771:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11771:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11774:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11774:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11764:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11764:6:13"
																},
																"nativeSrc": "11764:14:13",
																"nodeType": "YulFunctionCall",
																"src": "11764:14:13"
															},
															"nativeSrc": "11764:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "11764:14:13"
														},
														{
															"nativeSrc": "11787:26:13",
															"nodeType": "YulAssignment",
															"src": "11787:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11805:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11805:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11808:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11808:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11795:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "11795:9:13"
																},
																"nativeSrc": "11795:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11795:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11787:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11787:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "11698:121:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11737:3:13",
														"nodeType": "YulTypedName",
														"src": "11737:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11745:4:13",
														"nodeType": "YulTypedName",
														"src": "11745:4:13",
														"type": ""
													}
												],
												"src": "11698:121:13"
											},
											{
												"body": {
													"nativeSrc": "11905:437:13",
													"nodeType": "YulBlock",
													"src": "11905:437:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11938:398:13",
																"nodeType": "YulBlock",
																"src": "11938:398:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11959:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11959:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "11962:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "11962:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11952:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11952:6:13"
																			},
																			"nativeSrc": "11952:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11952:16:13"
																		},
																		"nativeSrc": "11952:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11952:16:13"
																	},
																	{
																		"nativeSrc": "11981:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11981:30:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12003:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12003:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12006:4:13",
																					"nodeType": "YulLiteral",
																					"src": "12006:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "11993:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11993:9:13"
																			},
																			"nativeSrc": "11993:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11993:18:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "11985:4:13",
																				"nodeType": "YulTypedName",
																				"src": "11985:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12024:57:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12024:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12047:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "12047:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12057:1:13",
																							"nodeType": "YulLiteral",
																							"src": "12057:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "12064:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "12064:10:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12076:2:13",
																									"nodeType": "YulLiteral",
																									"src": "12076:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12060:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "12060:3:13"
																							},
																							"nativeSrc": "12060:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "12060:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12053:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "12053:3:13"
																					},
																					"nativeSrc": "12053:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12053:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12043:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12043:3:13"
																			},
																			"nativeSrc": "12043:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12043:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12028:11:13",
																				"nodeType": "YulTypedName",
																				"src": "12028:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12118:23:13",
																			"nodeType": "YulBlock",
																			"src": "12118:23:13",
																			"statements": [
																				{
																					"nativeSrc": "12120:19:13",
																					"nodeType": "YulAssignment",
																					"src": "12120:19:13",
																					"value": {
																						"name": "data",
																						"nativeSrc": "12135:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "12135:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "12120:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "12120:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "12100:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "12100:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12112:4:13",
																					"nodeType": "YulLiteral",
																					"src": "12112:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12097:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "12097:2:13"
																			},
																			"nativeSrc": "12097:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12097:20:13"
																		},
																		"nativeSrc": "12094:47:13",
																		"nodeType": "YulIf",
																		"src": "12094:47:13"
																	},
																	{
																		"nativeSrc": "12154:41:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12154:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12168:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "12168:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12178:1:13",
																							"nodeType": "YulLiteral",
																							"src": "12178:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "12185:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "12185:3:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12190:2:13",
																									"nodeType": "YulLiteral",
																									"src": "12190:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12181:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "12181:3:13"
																							},
																							"nativeSrc": "12181:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "12181:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12174:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "12174:3:13"
																					},
																					"nativeSrc": "12174:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12174:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12164:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12164:3:13"
																			},
																			"nativeSrc": "12164:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12164:31:13"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "12158:2:13",
																				"nodeType": "YulTypedName",
																				"src": "12158:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12208:24:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12208:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "12221:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "12221:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "12212:5:13",
																				"nodeType": "YulTypedName",
																				"src": "12212:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12306:20:13",
																			"nodeType": "YulBlock",
																			"src": "12306:20:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12315:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "12315:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12322:1:13",
																								"nodeType": "YulLiteral",
																								"src": "12322:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "12308:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "12308:6:13"
																						},
																						"nativeSrc": "12308:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "12308:16:13"
																					},
																					"nativeSrc": "12308:16:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "12308:16:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12256:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "12256:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "12263:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "12263:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12253:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "12253:2:13"
																			},
																			"nativeSrc": "12253:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12253:13:13"
																		},
																		"nativeSrc": "12245:81:13",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "12267:26:13",
																			"nodeType": "YulBlock",
																			"src": "12267:26:13",
																			"statements": [
																				{
																					"nativeSrc": "12269:22:13",
																					"nodeType": "YulAssignment",
																					"src": "12269:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12282:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "12282:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12289:1:13",
																								"nodeType": "YulLiteral",
																								"src": "12289:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12278:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "12278:3:13"
																						},
																						"nativeSrc": "12278:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "12278:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "12269:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "12269:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "12249:3:13",
																			"nodeType": "YulBlock",
																			"src": "12249:3:13",
																			"statements": []
																		},
																		"src": "12245:81:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11921:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11921:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11926:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11926:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11918:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11918:2:13"
																},
																"nativeSrc": "11918:11:13",
																"nodeType": "YulFunctionCall",
																"src": "11918:11:13"
															},
															"nativeSrc": "11915:421:13",
															"nodeType": "YulIf",
															"src": "11915:421:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "11824:518:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11877:5:13",
														"nodeType": "YulTypedName",
														"src": "11877:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11884:3:13",
														"nodeType": "YulTypedName",
														"src": "11884:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11889:10:13",
														"nodeType": "YulTypedName",
														"src": "11889:10:13",
														"type": ""
													}
												],
												"src": "11824:518:13"
											},
											{
												"body": {
													"nativeSrc": "12432:81:13",
													"nodeType": "YulBlock",
													"src": "12432:81:13",
													"statements": [
														{
															"nativeSrc": "12442:65:13",
															"nodeType": "YulAssignment",
															"src": "12442:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "12457:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12457:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12475:1:13",
																										"nodeType": "YulLiteral",
																										"src": "12475:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "12478:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "12478:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "12471:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "12471:3:13"
																								},
																								"nativeSrc": "12471:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12471:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12488:1:13",
																										"nodeType": "YulLiteral",
																										"src": "12488:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "12484:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "12484:3:13"
																								},
																								"nativeSrc": "12484:6:13",
																								"nodeType": "YulFunctionCall",
																								"src": "12484:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "12467:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "12467:3:13"
																						},
																						"nativeSrc": "12467:24:13",
																						"nodeType": "YulFunctionCall",
																						"src": "12467:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12463:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12463:3:13"
																				},
																				"nativeSrc": "12463:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12463:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12453:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12453:3:13"
																		},
																		"nativeSrc": "12453:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12453:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12499:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12499:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12502:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12502:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12495:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12495:3:13"
																		},
																		"nativeSrc": "12495:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12495:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12450:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12450:2:13"
																},
																"nativeSrc": "12450:57:13",
																"nodeType": "YulFunctionCall",
																"src": "12450:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12442:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12442:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12347:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12409:4:13",
														"nodeType": "YulTypedName",
														"src": "12409:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12415:3:13",
														"nodeType": "YulTypedName",
														"src": "12415:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12423:4:13",
														"nodeType": "YulTypedName",
														"src": "12423:4:13",
														"type": ""
													}
												],
												"src": "12347:166:13"
											},
											{
												"body": {
													"nativeSrc": "12614:1249:13",
													"nodeType": "YulBlock",
													"src": "12614:1249:13",
													"statements": [
														{
															"nativeSrc": "12624:24:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12624:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12644:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12644:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12638:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12638:5:13"
																},
																"nativeSrc": "12638:10:13",
																"nodeType": "YulFunctionCall",
																"src": "12638:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12628:6:13",
																	"nodeType": "YulTypedName",
																	"src": "12628:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12691:22:13",
																"nodeType": "YulBlock",
																"src": "12691:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12693:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12693:16:13"
																			},
																			"nativeSrc": "12693:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12693:18:13"
																		},
																		"nativeSrc": "12693:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12693:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12663:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12663:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12671:18:13",
																		"nodeType": "YulLiteral",
																		"src": "12671:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12660:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12660:2:13"
																},
																"nativeSrc": "12660:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12660:30:13"
															},
															"nativeSrc": "12657:56:13",
															"nodeType": "YulIf",
															"src": "12657:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12766:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12766:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12804:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "12804:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12798:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "12798:5:13"
																				},
																				"nativeSrc": "12798:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12798:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "12772:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "12772:25:13"
																		},
																		"nativeSrc": "12772:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12772:38:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12812:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12812:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "12722:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12722:43:13"
																},
																"nativeSrc": "12722:97:13",
																"nodeType": "YulFunctionCall",
																"src": "12722:97:13"
															},
															"nativeSrc": "12722:97:13",
															"nodeType": "YulExpressionStatement",
															"src": "12722:97:13"
														},
														{
															"nativeSrc": "12828:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12828:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12845:1:13",
																"nodeType": "YulLiteral",
																"src": "12845:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12832:9:13",
																	"nodeType": "YulTypedName",
																	"src": "12832:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12855:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12855:23:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12874:4:13",
																"nodeType": "YulLiteral",
																"src": "12874:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "12859:11:13",
																	"nodeType": "YulTypedName",
																	"src": "12859:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12887:17:13",
															"nodeType": "YulAssignment",
															"src": "12887:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12900:4:13",
																"nodeType": "YulLiteral",
																"src": "12900:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12887:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "12887:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12950:656:13",
																		"nodeType": "YulBlock",
																		"src": "12950:656:13",
																		"statements": [
																			{
																				"nativeSrc": "12964:35:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12964:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12983:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "12983:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12995:2:13",
																									"nodeType": "YulLiteral",
																									"src": "12995:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12991:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "12991:3:13"
																							},
																							"nativeSrc": "12991:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "12991:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12979:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "12979:3:13"
																					},
																					"nativeSrc": "12979:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12979:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12968:7:13",
																						"nodeType": "YulTypedName",
																						"src": "12968:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13012:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13012:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13056:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "13056:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "13026:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "13026:29:13"
																					},
																					"nativeSrc": "13026:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13026:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13016:6:13",
																						"nodeType": "YulTypedName",
																						"src": "13016:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13074:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13074:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13083:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13083:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13078:1:13",
																						"nodeType": "YulTypedName",
																						"src": "13078:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13161:172:13",
																					"nodeType": "YulBlock",
																					"src": "13161:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13186:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "13186:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13204:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "13204:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13209:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "13209:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13200:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "13200:3:13"
																												},
																												"nativeSrc": "13200:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "13200:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13194:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "13194:5:13"
																										},
																										"nativeSrc": "13194:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "13194:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13179:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "13179:6:13"
																								},
																								"nativeSrc": "13179:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13179:42:13"
																							},
																							"nativeSrc": "13179:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "13179:42:13"
																						},
																						{
																							"nativeSrc": "13238:24:13",
																							"nodeType": "YulAssignment",
																							"src": "13238:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13252:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "13252:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13260:1:13",
																										"nodeType": "YulLiteral",
																										"src": "13260:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13248:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "13248:3:13"
																								},
																								"nativeSrc": "13248:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13248:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13238:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "13238:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13279:40:13",
																							"nodeType": "YulAssignment",
																							"src": "13279:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13296:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "13296:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "13307:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "13307:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13292:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "13292:3:13"
																								},
																								"nativeSrc": "13292:27:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13292:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13279:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "13279:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13108:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "13108:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13111:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "13111:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13105:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "13105:2:13"
																					},
																					"nativeSrc": "13105:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13105:14:13"
																				},
																				"nativeSrc": "13097:236:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13120:28:13",
																					"nodeType": "YulBlock",
																					"src": "13120:28:13",
																					"statements": [
																						{
																							"nativeSrc": "13122:24:13",
																							"nodeType": "YulAssignment",
																							"src": "13122:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13131:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "13131:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "13134:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "13134:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13127:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "13127:3:13"
																								},
																								"nativeSrc": "13127:19:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13127:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13122:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "13122:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13101:3:13",
																					"nodeType": "YulBlock",
																					"src": "13101:3:13",
																					"statements": []
																				},
																				"src": "13097:236:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "13381:166:13",
																					"nodeType": "YulBlock",
																					"src": "13381:166:13",
																					"statements": [
																						{
																							"nativeSrc": "13399:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13399:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13426:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "13426:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13431:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "13431:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13422:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "13422:3:13"
																										},
																										"nativeSrc": "13422:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "13422:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13416:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "13416:5:13"
																								},
																								"nativeSrc": "13416:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13416:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13403:9:13",
																									"nodeType": "YulTypedName",
																									"src": "13403:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13466:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "13466:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13478:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "13478:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "13505:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "13505:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "13508:6:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "13508:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "13501:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "13501:3:13"
																																		},
																																		"nativeSrc": "13501:14:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "13501:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13517:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "13517:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "13497:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "13497:3:13"
																																},
																																"nativeSrc": "13497:24:13",
																																"nodeType": "YulFunctionCall",
																																"src": "13497:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13527:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "13527:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "13523:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "13523:3:13"
																																},
																																"nativeSrc": "13523:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "13523:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "13493:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "13493:3:13"
																														},
																														"nativeSrc": "13493:37:13",
																														"nodeType": "YulFunctionCall",
																														"src": "13493:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "13489:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "13489:3:13"
																												},
																												"nativeSrc": "13489:42:13",
																												"nodeType": "YulFunctionCall",
																												"src": "13489:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "13474:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "13474:3:13"
																										},
																										"nativeSrc": "13474:58:13",
																										"nodeType": "YulFunctionCall",
																										"src": "13474:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13459:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "13459:6:13"
																								},
																								"nativeSrc": "13459:74:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13459:74:13"
																							},
																							"nativeSrc": "13459:74:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "13459:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13352:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "13352:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13361:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "13361:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13349:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "13349:2:13"
																					},
																					"nativeSrc": "13349:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13349:19:13"
																				},
																				"nativeSrc": "13346:201:13",
																				"nodeType": "YulIf",
																				"src": "13346:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13567:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "13567:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13581:1:13",
																											"nodeType": "YulLiteral",
																											"src": "13581:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "13584:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "13584:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "13577:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "13577:3:13"
																									},
																									"nativeSrc": "13577:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "13577:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13593:1:13",
																									"nodeType": "YulLiteral",
																									"src": "13593:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13573:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "13573:3:13"
																							},
																							"nativeSrc": "13573:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "13573:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13560:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13560:6:13"
																					},
																					"nativeSrc": "13560:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13560:36:13"
																				},
																				"nativeSrc": "13560:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "13560:36:13"
																			}
																		]
																	},
																	"nativeSrc": "12943:663:13",
																	"nodeType": "YulCase",
																	"src": "12943:663:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12948:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12948:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13623:234:13",
																		"nodeType": "YulBlock",
																		"src": "13623:234:13",
																		"statements": [
																			{
																				"nativeSrc": "13637:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13637:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13650:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13650:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13641:5:13",
																						"nodeType": "YulTypedName",
																						"src": "13641:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13686:67:13",
																					"nodeType": "YulBlock",
																					"src": "13686:67:13",
																					"statements": [
																						{
																							"nativeSrc": "13704:35:13",
																							"nodeType": "YulAssignment",
																							"src": "13704:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13723:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "13723:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13728:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "13728:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13719:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "13719:3:13"
																										},
																										"nativeSrc": "13719:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "13719:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13713:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "13713:5:13"
																								},
																								"nativeSrc": "13713:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "13713:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13704:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "13704:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13667:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13667:6:13"
																				},
																				"nativeSrc": "13664:89:13",
																				"nodeType": "YulIf",
																				"src": "13664:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13773:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "13773:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13832:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "13832:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13839:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "13839:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13779:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "13779:52:13"
																							},
																							"nativeSrc": "13779:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "13779:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13766:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13766:6:13"
																					},
																					"nativeSrc": "13766:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13766:81:13"
																				},
																				"nativeSrc": "13766:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "13766:81:13"
																			}
																		]
																	},
																	"nativeSrc": "13615:242:13",
																	"nodeType": "YulCase",
																	"src": "13615:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12923:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12923:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12931:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12931:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12920:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12920:2:13"
																},
																"nativeSrc": "12920:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12920:14:13"
															},
															"nativeSrc": "12913:944:13",
															"nodeType": "YulSwitch",
															"src": "12913:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12518:1345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12599:4:13",
														"nodeType": "YulTypedName",
														"src": "12599:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12605:3:13",
														"nodeType": "YulTypedName",
														"src": "12605:3:13",
														"type": ""
													}
												],
												"src": "12518:1345:13"
											},
											{
												"body": {
													"nativeSrc": "13918:162:13",
													"nodeType": "YulBlock",
													"src": "13918:162:13",
													"statements": [
														{
															"nativeSrc": "13928:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13928:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13948:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13948:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13942:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13942:5:13"
																},
																"nativeSrc": "13942:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13942:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13932:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13932:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13969:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13969:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13978:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13978:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13985:4:13",
																				"nodeType": "YulLiteral",
																				"src": "13985:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13974:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13974:3:13"
																		},
																		"nativeSrc": "13974:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13974:16:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13992:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13992:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13963:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13963:5:13"
																},
																"nativeSrc": "13963:36:13",
																"nodeType": "YulFunctionCall",
																"src": "13963:36:13"
															},
															"nativeSrc": "13963:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "13963:36:13"
														},
														{
															"nativeSrc": "14008:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14008:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14022:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14022:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14027:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14027:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14018:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14018:3:13"
																},
																"nativeSrc": "14018:16:13",
																"nodeType": "YulFunctionCall",
																"src": "14018:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "14012:2:13",
																	"nodeType": "YulTypedName",
																	"src": "14012:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "14050:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "14050:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14054:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14054:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14043:6:13"
																},
																"nativeSrc": "14043:13:13",
																"nodeType": "YulFunctionCall",
																"src": "14043:13:13"
															},
															"nativeSrc": "14043:13:13",
															"nodeType": "YulExpressionStatement",
															"src": "14043:13:13"
														},
														{
															"nativeSrc": "14065:9:13",
															"nodeType": "YulAssignment",
															"src": "14065:9:13",
															"value": {
																"name": "_1",
																"nativeSrc": "14072:2:13",
																"nodeType": "YulIdentifier",
																"src": "14072:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14065:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14065:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "13868:212:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13895:5:13",
														"nodeType": "YulTypedName",
														"src": "13895:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13902:3:13",
														"nodeType": "YulTypedName",
														"src": "13902:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13910:3:13",
														"nodeType": "YulTypedName",
														"src": "13910:3:13",
														"type": ""
													}
												],
												"src": "13868:212:13"
											},
											{
												"body": {
													"nativeSrc": "14224:53:13",
													"nodeType": "YulBlock",
													"src": "14224:53:13",
													"statements": [
														{
															"nativeSrc": "14234:37:13",
															"nodeType": "YulAssignment",
															"src": "14234:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14259:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14259:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14267:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14267:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "14241:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14241:17:13"
																},
																"nativeSrc": "14241:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14241:30:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14234:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14234:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14085:192:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14200:3:13",
														"nodeType": "YulTypedName",
														"src": "14200:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14205:6:13",
														"nodeType": "YulTypedName",
														"src": "14205:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14216:3:13",
														"nodeType": "YulTypedName",
														"src": "14216:3:13",
														"type": ""
													}
												],
												"src": "14085:192:13"
											},
											{
												"body": {
													"nativeSrc": "14431:153:13",
													"nodeType": "YulBlock",
													"src": "14431:153:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14448:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14448:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14459:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14459:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14441:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14441:6:13"
																},
																"nativeSrc": "14441:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14441:21:13"
															},
															"nativeSrc": "14441:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "14441:21:13"
														},
														{
															"nativeSrc": "14471:64:13",
															"nodeType": "YulAssignment",
															"src": "14471:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14508:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14508:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14520:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14520:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14531:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14531:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14516:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14516:3:13"
																		},
																		"nativeSrc": "14516:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14516:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "14479:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "14479:28:13"
																},
																"nativeSrc": "14479:56:13",
																"nodeType": "YulFunctionCall",
																"src": "14479:56:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14471:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14471:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14555:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14555:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14566:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14566:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14551:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14551:3:13"
																		},
																		"nativeSrc": "14551:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14551:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14571:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14571:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14544:6:13"
																},
																"nativeSrc": "14544:34:13",
																"nodeType": "YulFunctionCall",
																"src": "14544:34:13"
															},
															"nativeSrc": "14544:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "14544:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "14282:302:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14392:9:13",
														"nodeType": "YulTypedName",
														"src": "14392:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14403:6:13",
														"nodeType": "YulTypedName",
														"src": "14403:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14411:6:13",
														"nodeType": "YulTypedName",
														"src": "14411:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14422:4:13",
														"nodeType": "YulTypedName",
														"src": "14422:4:13",
														"type": ""
													}
												],
												"src": "14282:302:13"
											},
											{
												"body": {
													"nativeSrc": "14684:427:13",
													"nodeType": "YulBlock",
													"src": "14684:427:13",
													"statements": [
														{
															"nativeSrc": "14694:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14694:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nativeSrc": "14733:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "14733:11:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14720:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "14720:12:13"
																},
																"nativeSrc": "14720:25:13",
																"nodeType": "YulFunctionCall",
																"src": "14720:25:13"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nativeSrc": "14698:18:13",
																	"nodeType": "YulTypedName",
																	"src": "14698:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14834:16:13",
																"nodeType": "YulBlock",
																"src": "14834:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14843:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14843:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14846:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14846:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14836:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14836:6:13"
																			},
																			"nativeSrc": "14836:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14836:12:13"
																		},
																		"nativeSrc": "14836:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14836:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nativeSrc": "14768:18:13",
																				"nodeType": "YulIdentifier",
																				"src": "14768:18:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nativeSrc": "14796:12:13",
																									"nodeType": "YulIdentifier",
																									"src": "14796:12:13"
																								},
																								"nativeSrc": "14796:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "14796:14:13"
																							},
																							{
																								"name": "base_ref",
																								"nativeSrc": "14812:8:13",
																								"nodeType": "YulIdentifier",
																								"src": "14812:8:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "14792:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "14792:3:13"
																						},
																						"nativeSrc": "14792:29:13",
																						"nodeType": "YulFunctionCall",
																						"src": "14792:29:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14827:2:13",
																								"nodeType": "YulLiteral",
																								"src": "14827:2:13",
																								"type": "",
																								"value": "30"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "14823:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "14823:3:13"
																						},
																						"nativeSrc": "14823:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "14823:7:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14788:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14788:3:13"
																				},
																				"nativeSrc": "14788:43:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14788:43:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "14764:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14764:3:13"
																		},
																		"nativeSrc": "14764:68:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14764:68:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14757:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14757:6:13"
																},
																"nativeSrc": "14757:76:13",
																"nodeType": "YulFunctionCall",
																"src": "14757:76:13"
															},
															"nativeSrc": "14754:96:13",
															"nodeType": "YulIf",
															"src": "14754:96:13"
														},
														{
															"nativeSrc": "14859:47:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14859:47:13",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nativeSrc": "14877:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "14877:8:13"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nativeSrc": "14887:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "14887:18:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14873:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14873:3:13"
																},
																"nativeSrc": "14873:33:13",
																"nodeType": "YulFunctionCall",
																"src": "14873:33:13"
															},
															"variables": [
																{
																	"name": "addr_1",
																	"nativeSrc": "14863:6:13",
																	"nodeType": "YulTypedName",
																	"src": "14863:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14915:30:13",
															"nodeType": "YulAssignment",
															"src": "14915:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nativeSrc": "14938:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14938:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14925:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "14925:12:13"
																},
																"nativeSrc": "14925:20:13",
																"nodeType": "YulFunctionCall",
																"src": "14925:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14915:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14915:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14988:16:13",
																"nodeType": "YulBlock",
																"src": "14988:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14997:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14997:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15000:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15000:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14990:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14990:6:13"
																			},
																			"nativeSrc": "14990:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14990:12:13"
																		},
																		"nativeSrc": "14990:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14990:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14960:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14960:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14968:18:13",
																		"nodeType": "YulLiteral",
																		"src": "14968:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14957:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14957:2:13"
																},
																"nativeSrc": "14957:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14957:30:13"
															},
															"nativeSrc": "14954:50:13",
															"nodeType": "YulIf",
															"src": "14954:50:13"
														},
														{
															"nativeSrc": "15013:25:13",
															"nodeType": "YulAssignment",
															"src": "15013:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nativeSrc": "15025:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15025:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15033:4:13",
																		"nodeType": "YulLiteral",
																		"src": "15033:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15021:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15021:3:13"
																},
																"nativeSrc": "15021:17:13",
																"nodeType": "YulFunctionCall",
																"src": "15021:17:13"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "15013:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15013:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15089:16:13",
																"nodeType": "YulBlock",
																"src": "15089:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15098:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15098:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15101:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15101:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15091:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15091:6:13"
																			},
																			"nativeSrc": "15091:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15091:12:13"
																		},
																		"nativeSrc": "15091:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15091:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "15054:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15054:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nativeSrc": "15064:12:13",
																					"nodeType": "YulIdentifier",
																					"src": "15064:12:13"
																				},
																				"nativeSrc": "15064:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15064:14:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "15080:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15080:6:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15060:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15060:3:13"
																		},
																		"nativeSrc": "15060:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15060:27:13"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nativeSrc": "15050:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15050:3:13"
																},
																"nativeSrc": "15050:38:13",
																"nodeType": "YulFunctionCall",
																"src": "15050:38:13"
															},
															"nativeSrc": "15047:58:13",
															"nodeType": "YulIf",
															"src": "15047:58:13"
														}
													]
												},
												"name": "access_calldata_tail_t_string_calldata_ptr",
												"nativeSrc": "14589:522:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nativeSrc": "14641:8:13",
														"nodeType": "YulTypedName",
														"src": "14641:8:13",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nativeSrc": "14651:11:13",
														"nodeType": "YulTypedName",
														"src": "14651:11:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nativeSrc": "14667:4:13",
														"nodeType": "YulTypedName",
														"src": "14667:4:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14673:6:13",
														"nodeType": "YulTypedName",
														"src": "14673:6:13",
														"type": ""
													}
												],
												"src": "14589:522:13"
											},
											{
												"body": {
													"nativeSrc": "15219:1095:13",
													"nodeType": "YulBlock",
													"src": "15219:1095:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15260:22:13",
																"nodeType": "YulBlock",
																"src": "15260:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "15262:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15262:16:13"
																			},
																			"nativeSrc": "15262:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15262:18:13"
																		},
																		"nativeSrc": "15262:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15262:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15235:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15235:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15240:18:13",
																		"nodeType": "YulLiteral",
																		"src": "15240:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15232:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15232:2:13"
																},
																"nativeSrc": "15232:27:13",
																"nodeType": "YulFunctionCall",
																"src": "15232:27:13"
															},
															"nativeSrc": "15229:53:13",
															"nodeType": "YulIf",
															"src": "15229:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15335:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15335:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15373:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "15373:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15367:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "15367:5:13"
																				},
																				"nativeSrc": "15367:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15367:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "15341:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "15341:25:13"
																		},
																		"nativeSrc": "15341:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15341:38:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "15381:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15381:3:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "15291:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15291:43:13"
																},
																"nativeSrc": "15291:94:13",
																"nodeType": "YulFunctionCall",
																"src": "15291:94:13"
															},
															"nativeSrc": "15291:94:13",
															"nodeType": "YulExpressionStatement",
															"src": "15291:94:13"
														},
														{
															"nativeSrc": "15394:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15394:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "15411:1:13",
																"nodeType": "YulLiteral",
																"src": "15411:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15398:9:13",
																	"nodeType": "YulTypedName",
																	"src": "15398:9:13",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15455:601:13",
																		"nodeType": "YulBlock",
																		"src": "15455:601:13",
																		"statements": [
																			{
																				"nativeSrc": "15469:32:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15469:32:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "len",
																							"nativeSrc": "15488:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "15488:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15497:2:13",
																									"nodeType": "YulLiteral",
																									"src": "15497:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "15493:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "15493:3:13"
																							},
																							"nativeSrc": "15493:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "15493:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "15484:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "15484:3:13"
																					},
																					"nativeSrc": "15484:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15484:17:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "15473:7:13",
																						"nodeType": "YulTypedName",
																						"src": "15473:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15514:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15514:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15558:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "15558:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "15528:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "15528:29:13"
																					},
																					"nativeSrc": "15528:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15528:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "15518:6:13",
																						"nodeType": "YulTypedName",
																						"src": "15518:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15576:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15576:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15585:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15585:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "15580:1:13",
																						"nodeType": "YulTypedName",
																						"src": "15580:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15656:172:13",
																					"nodeType": "YulBlock",
																					"src": "15656:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15681:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "15681:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "15706:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "15706:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "15711:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "15711:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "15702:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "15702:3:13"
																												},
																												"nativeSrc": "15702:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "15702:19:13"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nativeSrc": "15689:12:13",
																											"nodeType": "YulIdentifier",
																											"src": "15689:12:13"
																										},
																										"nativeSrc": "15689:33:13",
																										"nodeType": "YulFunctionCall",
																										"src": "15689:33:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15674:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "15674:6:13"
																								},
																								"nativeSrc": "15674:49:13",
																								"nodeType": "YulFunctionCall",
																								"src": "15674:49:13"
																							},
																							"nativeSrc": "15674:49:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "15674:49:13"
																						},
																						{
																							"nativeSrc": "15740:24:13",
																							"nodeType": "YulAssignment",
																							"src": "15740:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15754:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "15754:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15762:1:13",
																										"nodeType": "YulLiteral",
																										"src": "15762:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15750:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "15750:3:13"
																								},
																								"nativeSrc": "15750:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "15750:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "15740:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "15740:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "15781:33:13",
																							"nodeType": "YulAssignment",
																							"src": "15781:33:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "15798:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "15798:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15809:4:13",
																										"nodeType": "YulLiteral",
																										"src": "15809:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15794:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "15794:3:13"
																								},
																								"nativeSrc": "15794:20:13",
																								"nodeType": "YulFunctionCall",
																								"src": "15794:20:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "15781:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "15781:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "15610:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "15610:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15613:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "15613:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15607:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "15607:2:13"
																					},
																					"nativeSrc": "15607:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15607:14:13"
																				},
																				"nativeSrc": "15599:229:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "15622:21:13",
																					"nodeType": "YulBlock",
																					"src": "15622:21:13",
																					"statements": [
																						{
																							"nativeSrc": "15624:17:13",
																							"nodeType": "YulAssignment",
																							"src": "15624:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "15633:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "15633:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15636:4:13",
																										"nodeType": "YulLiteral",
																										"src": "15636:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15629:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "15629:3:13"
																								},
																								"nativeSrc": "15629:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "15629:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "15624:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "15624:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "15603:3:13",
																					"nodeType": "YulBlock",
																					"src": "15603:3:13",
																					"statements": []
																				},
																				"src": "15599:229:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "15873:127:13",
																					"nodeType": "YulBlock",
																					"src": "15873:127:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15898:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "15898:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "src",
																																"nativeSrc": "15927:3:13",
																																"nodeType": "YulIdentifier",
																																"src": "15927:3:13"
																															},
																															{
																																"name": "srcOffset",
																																"nativeSrc": "15932:9:13",
																																"nodeType": "YulIdentifier",
																																"src": "15932:9:13"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nativeSrc": "15923:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "15923:3:13"
																														},
																														"nativeSrc": "15923:19:13",
																														"nodeType": "YulFunctionCall",
																														"src": "15923:19:13"
																													}
																												],
																												"functionName": {
																													"name": "calldataload",
																													"nativeSrc": "15910:12:13",
																													"nodeType": "YulIdentifier",
																													"src": "15910:12:13"
																												},
																												"nativeSrc": "15910:33:13",
																												"nodeType": "YulFunctionCall",
																												"src": "15910:33:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "15961:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "15961:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "len",
																																				"nativeSrc": "15964:3:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "15964:3:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "15957:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "15957:3:13"
																																		},
																																		"nativeSrc": "15957:11:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "15957:11:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "15970:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "15970:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "15953:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "15953:3:13"
																																},
																																"nativeSrc": "15953:21:13",
																																"nodeType": "YulFunctionCall",
																																"src": "15953:21:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "15980:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "15980:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "15976:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "15976:3:13"
																																},
																																"nativeSrc": "15976:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "15976:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "15949:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "15949:3:13"
																														},
																														"nativeSrc": "15949:34:13",
																														"nodeType": "YulFunctionCall",
																														"src": "15949:34:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "15945:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "15945:3:13"
																												},
																												"nativeSrc": "15945:39:13",
																												"nodeType": "YulFunctionCall",
																												"src": "15945:39:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "15906:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "15906:3:13"
																										},
																										"nativeSrc": "15906:79:13",
																										"nodeType": "YulFunctionCall",
																										"src": "15906:79:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15891:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "15891:6:13"
																								},
																								"nativeSrc": "15891:95:13",
																								"nodeType": "YulFunctionCall",
																								"src": "15891:95:13"
																							},
																							"nativeSrc": "15891:95:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "15891:95:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15847:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "15847:7:13"
																						},
																						{
																							"name": "len",
																							"nativeSrc": "15856:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "15856:3:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15844:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "15844:2:13"
																					},
																					"nativeSrc": "15844:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15844:16:13"
																				},
																				"nativeSrc": "15841:159:13",
																				"nodeType": "YulIf",
																				"src": "15841:159:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16020:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "16020:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "16034:1:13",
																											"nodeType": "YulLiteral",
																											"src": "16034:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "len",
																											"nativeSrc": "16037:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "16037:3:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "16030:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "16030:3:13"
																									},
																									"nativeSrc": "16030:11:13",
																									"nodeType": "YulFunctionCall",
																									"src": "16030:11:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16043:1:13",
																									"nodeType": "YulLiteral",
																									"src": "16043:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16026:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "16026:3:13"
																							},
																							"nativeSrc": "16026:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "16026:19:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16013:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16013:6:13"
																					},
																					"nativeSrc": "16013:33:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16013:33:13"
																				},
																				"nativeSrc": "16013:33:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "16013:33:13"
																			}
																		]
																	},
																	"nativeSrc": "15448:608:13",
																	"nodeType": "YulCase",
																	"src": "15448:608:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15453:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15453:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "16073:235:13",
																		"nodeType": "YulBlock",
																		"src": "16073:235:13",
																		"statements": [
																			{
																				"nativeSrc": "16087:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16087:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16100:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16100:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "16091:5:13",
																						"nodeType": "YulTypedName",
																						"src": "16091:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16133:74:13",
																					"nodeType": "YulBlock",
																					"src": "16133:74:13",
																					"statements": [
																						{
																							"nativeSrc": "16151:42:13",
																							"nodeType": "YulAssignment",
																							"src": "16151:42:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16177:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "16177:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16182:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "16182:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16173:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "16173:3:13"
																										},
																										"nativeSrc": "16173:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "16173:19:13"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "16160:12:13",
																									"nodeType": "YulIdentifier",
																									"src": "16160:12:13"
																								},
																								"nativeSrc": "16160:33:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16160:33:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "16151:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "16151:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "len",
																					"nativeSrc": "16117:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16117:3:13"
																				},
																				"nativeSrc": "16114:93:13",
																				"nodeType": "YulIf",
																				"src": "16114:93:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16227:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "16227:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "16286:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "16286:5:13"
																								},
																								{
																									"name": "len",
																									"nativeSrc": "16293:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "16293:3:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "16233:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "16233:52:13"
																							},
																							"nativeSrc": "16233:64:13",
																							"nodeType": "YulFunctionCall",
																							"src": "16233:64:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16220:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16220:6:13"
																					},
																					"nativeSrc": "16220:78:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16220:78:13"
																				},
																				"nativeSrc": "16220:78:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "16220:78:13"
																			}
																		]
																	},
																	"nativeSrc": "16065:243:13",
																	"nodeType": "YulCase",
																	"src": "16065:243:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15431:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15431:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15436:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15436:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15428:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15428:2:13"
																},
																"nativeSrc": "15428:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15428:11:13"
															},
															"nativeSrc": "15421:887:13",
															"nodeType": "YulSwitch",
															"src": "15421:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nativeSrc": "15116:1198:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15199:4:13",
														"nodeType": "YulTypedName",
														"src": "15199:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "15205:3:13",
														"nodeType": "YulTypedName",
														"src": "15205:3:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15210:3:13",
														"nodeType": "YulTypedName",
														"src": "15210:3:13",
														"type": ""
													}
												],
												"src": "15116:1198:13"
											},
											{
												"body": {
													"nativeSrc": "16386:200:13",
													"nodeType": "YulBlock",
													"src": "16386:200:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16403:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16403:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16408:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16408:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16396:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16396:6:13"
																},
																"nativeSrc": "16396:19:13",
																"nodeType": "YulFunctionCall",
																"src": "16396:19:13"
															},
															"nativeSrc": "16396:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "16396:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "16441:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "16441:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16446:4:13",
																				"nodeType": "YulLiteral",
																				"src": "16446:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16437:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16437:3:13"
																		},
																		"nativeSrc": "16437:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16437:14:13"
																	},
																	{
																		"name": "start",
																		"nativeSrc": "16453:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16453:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16460:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "16424:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "16424:12:13"
																},
																"nativeSrc": "16424:43:13",
																"nodeType": "YulFunctionCall",
																"src": "16424:43:13"
															},
															"nativeSrc": "16424:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "16424:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16491:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "16491:3:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "16496:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16496:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16487:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16487:3:13"
																				},
																				"nativeSrc": "16487:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16487:16:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16505:4:13",
																				"nodeType": "YulLiteral",
																				"src": "16505:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16483:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16483:3:13"
																		},
																		"nativeSrc": "16483:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16483:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16512:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16512:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16476:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16476:6:13"
																},
																"nativeSrc": "16476:38:13",
																"nodeType": "YulFunctionCall",
																"src": "16476:38:13"
															},
															"nativeSrc": "16476:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "16476:38:13"
														},
														{
															"nativeSrc": "16523:57:13",
															"nodeType": "YulAssignment",
															"src": "16523:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "16538:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "16538:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "16551:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "16551:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "16559:2:13",
																								"nodeType": "YulLiteral",
																								"src": "16559:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "16547:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "16547:3:13"
																						},
																						"nativeSrc": "16547:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "16547:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16568:2:13",
																								"nodeType": "YulLiteral",
																								"src": "16568:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "16564:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "16564:3:13"
																						},
																						"nativeSrc": "16564:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "16564:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "16543:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16543:3:13"
																				},
																				"nativeSrc": "16543:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16543:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16534:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16534:3:13"
																		},
																		"nativeSrc": "16534:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16534:39:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16575:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16575:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16530:3:13"
																},
																"nativeSrc": "16530:50:13",
																"nodeType": "YulFunctionCall",
																"src": "16530:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16523:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16523:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_calldata",
												"nativeSrc": "16319:267:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16355:5:13",
														"nodeType": "YulTypedName",
														"src": "16355:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16362:6:13",
														"nodeType": "YulTypedName",
														"src": "16362:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16370:3:13",
														"nodeType": "YulTypedName",
														"src": "16370:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16378:3:13",
														"nodeType": "YulTypedName",
														"src": "16378:3:13",
														"type": ""
													}
												],
												"src": "16319:267:13"
											},
											{
												"body": {
													"nativeSrc": "16774:1046:13",
													"nodeType": "YulBlock",
													"src": "16774:1046:13",
													"statements": [
														{
															"nativeSrc": "16784:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16784:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "16794:2:13",
																"nodeType": "YulLiteral",
																"src": "16794:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "16788:2:13",
																	"nodeType": "YulTypedName",
																	"src": "16788:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16805:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16805:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16823:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16823:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16834:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16834:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16819:3:13"
																},
																"nativeSrc": "16819:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16819:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "16809:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16809:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16853:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16853:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16864:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16864:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16846:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16846:6:13"
																},
																"nativeSrc": "16846:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16846:21:13"
															},
															"nativeSrc": "16846:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "16846:21:13"
														},
														{
															"nativeSrc": "16876:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16876:17:13",
															"value": {
																"name": "tail_1",
																"nativeSrc": "16887:6:13",
																"nodeType": "YulIdentifier",
																"src": "16887:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "16880:3:13",
																	"nodeType": "YulTypedName",
																	"src": "16880:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "16909:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16909:6:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "16917:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16917:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16902:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16902:6:13"
																},
																"nativeSrc": "16902:22:13",
																"nodeType": "YulFunctionCall",
																"src": "16902:22:13"
															},
															"nativeSrc": "16902:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "16902:22:13"
														},
														{
															"nativeSrc": "16933:25:13",
															"nodeType": "YulAssignment",
															"src": "16933:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16944:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16944:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16955:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16955:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16940:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16940:3:13"
																},
																"nativeSrc": "16940:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16940:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16933:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16933:3:13"
																}
															]
														},
														{
															"nativeSrc": "16967:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16967:53:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16989:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16989:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17004:1:13",
																						"nodeType": "YulLiteral",
																						"src": "17004:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "value1",
																						"nativeSrc": "17007:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17007:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "17000:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17000:3:13"
																				},
																				"nativeSrc": "17000:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17000:14:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16985:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16985:3:13"
																		},
																		"nativeSrc": "16985:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16985:30:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17017:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17017:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16981:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16981:3:13"
																},
																"nativeSrc": "16981:39:13",
																"nodeType": "YulFunctionCall",
																"src": "16981:39:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "16971:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16971:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17029:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17029:20:13",
															"value": {
																"name": "value0",
																"nativeSrc": "17043:6:13",
																"nodeType": "YulIdentifier",
																"src": "17043:6:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "17033:6:13",
																	"nodeType": "YulTypedName",
																	"src": "17033:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17058:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17058:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "17067:1:13",
																"nodeType": "YulLiteral",
																"src": "17067:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "17062:1:13",
																	"nodeType": "YulTypedName",
																	"src": "17062:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17126:665:13",
																"nodeType": "YulBlock",
																"src": "17126:665:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "17147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17147:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nativeSrc": "17160:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "17160:6:13"
																								},
																								{
																									"name": "headStart",
																									"nativeSrc": "17168:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "17168:9:13"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "17156:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "17156:3:13"
																							},
																							"nativeSrc": "17156:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17156:22:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17184:2:13",
																									"nodeType": "YulLiteral",
																									"src": "17184:2:13",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17180:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "17180:3:13"
																							},
																							"nativeSrc": "17180:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17180:7:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17152:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "17152:3:13"
																					},
																					"nativeSrc": "17152:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17152:36:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "17140:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17140:6:13"
																			},
																			"nativeSrc": "17140:49:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17140:49:13"
																		},
																		"nativeSrc": "17140:49:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17140:49:13"
																	},
																	{
																		"nativeSrc": "17202:46:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17202:46:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "17241:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17241:6:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "17228:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "17228:12:13"
																			},
																			"nativeSrc": "17228:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17228:20:13"
																		},
																		"variables": [
																			{
																				"name": "rel_offset_of_tail",
																				"nativeSrc": "17206:18:13",
																				"nodeType": "YulTypedName",
																				"src": "17206:18:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17339:16:13",
																			"nodeType": "YulBlock",
																			"src": "17339:16:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17348:1:13",
																								"nodeType": "YulLiteral",
																								"src": "17348:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17351:1:13",
																								"nodeType": "YulLiteral",
																								"src": "17351:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "17341:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17341:6:13"
																						},
																						"nativeSrc": "17341:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "17341:12:13"
																					},
																					"nativeSrc": "17341:12:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "17341:12:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rel_offset_of_tail",
																							"nativeSrc": "17275:18:13",
																							"nodeType": "YulIdentifier",
																							"src": "17275:18:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "calldatasize",
																												"nativeSrc": "17303:12:13",
																												"nodeType": "YulIdentifier",
																												"src": "17303:12:13"
																											},
																											"nativeSrc": "17303:14:13",
																											"nodeType": "YulFunctionCall",
																											"src": "17303:14:13"
																										},
																										{
																											"name": "value0",
																											"nativeSrc": "17319:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "17319:6:13"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "17299:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "17299:3:13"
																									},
																									"nativeSrc": "17299:27:13",
																									"nodeType": "YulFunctionCall",
																									"src": "17299:27:13"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "17332:2:13",
																											"nodeType": "YulLiteral",
																											"src": "17332:2:13",
																											"type": "",
																											"value": "30"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "17328:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "17328:3:13"
																									},
																									"nativeSrc": "17328:7:13",
																									"nodeType": "YulFunctionCall",
																									"src": "17328:7:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17295:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "17295:3:13"
																							},
																							"nativeSrc": "17295:41:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17295:41:13"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nativeSrc": "17271:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "17271:3:13"
																					},
																					"nativeSrc": "17271:66:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17271:66:13"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "17264:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17264:6:13"
																			},
																			"nativeSrc": "17264:74:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17264:74:13"
																		},
																		"nativeSrc": "17261:94:13",
																		"nodeType": "YulIf",
																		"src": "17261:94:13"
																	},
																	{
																		"nativeSrc": "17368:44:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17368:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "rel_offset_of_tail",
																					"nativeSrc": "17385:18:13",
																					"nodeType": "YulIdentifier",
																					"src": "17385:18:13"
																				},
																				{
																					"name": "value0",
																					"nativeSrc": "17405:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17405:6:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17381:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17381:3:13"
																			},
																			"nativeSrc": "17381:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17381:31:13"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "17372:5:13",
																				"nodeType": "YulTypedName",
																				"src": "17372:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17425:33:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17425:33:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "17452:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17452:5:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "17439:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "17439:12:13"
																			},
																			"nativeSrc": "17439:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17439:19:13"
																		},
																		"variables": [
																			{
																				"name": "length",
																				"nativeSrc": "17429:6:13",
																				"nodeType": "YulTypedName",
																				"src": "17429:6:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17471:29:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17471:29:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "17490:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17490:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "17497:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "17497:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17486:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17486:3:13"
																			},
																			"nativeSrc": "17486:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17486:14:13"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nativeSrc": "17475:7:13",
																				"nodeType": "YulTypedName",
																				"src": "17475:7:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17547:16:13",
																			"nodeType": "YulBlock",
																			"src": "17547:16:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17556:1:13",
																								"nodeType": "YulLiteral",
																								"src": "17556:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17559:1:13",
																								"nodeType": "YulLiteral",
																								"src": "17559:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "17549:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17549:6:13"
																						},
																						"nativeSrc": "17549:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "17549:12:13"
																					},
																					"nativeSrc": "17549:12:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "17549:12:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "17519:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17519:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17527:18:13",
																					"nodeType": "YulLiteral",
																					"src": "17527:18:13",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "17516:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "17516:2:13"
																			},
																			"nativeSrc": "17516:30:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17516:30:13"
																		},
																		"nativeSrc": "17513:50:13",
																		"nodeType": "YulIf",
																		"src": "17513:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "17621:16:13",
																			"nodeType": "YulBlock",
																			"src": "17621:16:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17630:1:13",
																								"nodeType": "YulLiteral",
																								"src": "17630:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17633:1:13",
																								"nodeType": "YulLiteral",
																								"src": "17633:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "17623:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17623:6:13"
																						},
																						"nativeSrc": "17623:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "17623:12:13"
																					},
																					"nativeSrc": "17623:12:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "17623:12:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "value_1",
																					"nativeSrc": "17583:7:13",
																					"nodeType": "YulIdentifier",
																					"src": "17583:7:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "calldatasize",
																								"nativeSrc": "17596:12:13",
																								"nodeType": "YulIdentifier",
																								"src": "17596:12:13"
																							},
																							"nativeSrc": "17596:14:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17596:14:13"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "17612:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17612:6:13"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "17592:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "17592:3:13"
																					},
																					"nativeSrc": "17592:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17592:27:13"
																				}
																			],
																			"functionName": {
																				"name": "sgt",
																				"nativeSrc": "17579:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17579:3:13"
																			},
																			"nativeSrc": "17579:41:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17579:41:13"
																		},
																		"nativeSrc": "17576:61:13",
																		"nodeType": "YulIf",
																		"src": "17576:61:13"
																	},
																	{
																		"nativeSrc": "17650:61:13",
																		"nodeType": "YulAssignment",
																		"src": "17650:61:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_1",
																					"nativeSrc": "17687:7:13",
																					"nodeType": "YulIdentifier",
																					"src": "17687:7:13"
																				},
																				{
																					"name": "length",
																					"nativeSrc": "17696:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17696:6:13"
																				},
																				{
																					"name": "tail_2",
																					"nativeSrc": "17704:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17704:6:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_string_calldata",
																				"nativeSrc": "17660:26:13",
																				"nodeType": "YulIdentifier",
																				"src": "17660:26:13"
																			},
																			"nativeSrc": "17660:51:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17660:51:13"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "17650:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17650:6:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17724:25:13",
																		"nodeType": "YulAssignment",
																		"src": "17724:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "17738:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17738:6:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "17746:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "17746:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17734:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17734:3:13"
																			},
																			"nativeSrc": "17734:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17734:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "17724:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17724:6:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "17762:19:13",
																		"nodeType": "YulAssignment",
																		"src": "17762:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "17773:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17773:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "17778:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "17778:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17769:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17769:3:13"
																			},
																			"nativeSrc": "17769:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17769:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "17762:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17762:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "17088:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17088:1:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17091:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17091:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17085:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17085:2:13"
																},
																"nativeSrc": "17085:13:13",
																"nodeType": "YulFunctionCall",
																"src": "17085:13:13"
															},
															"nativeSrc": "17077:714:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17099:18:13",
																"nodeType": "YulBlock",
																"src": "17099:18:13",
																"statements": [
																	{
																		"nativeSrc": "17101:14:13",
																		"nodeType": "YulAssignment",
																		"src": "17101:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "17110:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "17110:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17113:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17113:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17106:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17106:3:13"
																			},
																			"nativeSrc": "17106:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17106:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "17101:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "17101:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17081:3:13",
																"nodeType": "YulBlock",
																"src": "17081:3:13",
																"statements": []
															},
															"src": "17077:714:13"
														},
														{
															"nativeSrc": "17800:14:13",
															"nodeType": "YulAssignment",
															"src": "17800:14:13",
															"value": {
																"name": "tail_2",
																"nativeSrc": "17808:6:13",
																"nodeType": "YulIdentifier",
																"src": "17808:6:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17800:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17800:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "16591:1229:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16735:9:13",
														"nodeType": "YulTypedName",
														"src": "16735:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16746:6:13",
														"nodeType": "YulTypedName",
														"src": "16746:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16754:6:13",
														"nodeType": "YulTypedName",
														"src": "16754:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16765:4:13",
														"nodeType": "YulTypedName",
														"src": "16765:4:13",
														"type": ""
													}
												],
												"src": "16591:1229:13"
											},
											{
												"body": {
													"nativeSrc": "17984:159:13",
													"nodeType": "YulBlock",
													"src": "17984:159:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18001:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18001:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18012:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18012:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17994:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17994:6:13"
																},
																"nativeSrc": "17994:21:13",
																"nodeType": "YulFunctionCall",
																"src": "17994:21:13"
															},
															"nativeSrc": "17994:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "17994:21:13"
														},
														{
															"nativeSrc": "18024:70:13",
															"nodeType": "YulAssignment",
															"src": "18024:70:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18059:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18059:6:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "18067:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18067:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18079:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18079:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18090:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18090:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18075:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18075:3:13"
																		},
																		"nativeSrc": "18075:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18075:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_calldata",
																	"nativeSrc": "18032:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "18032:26:13"
																},
																"nativeSrc": "18032:62:13",
																"nodeType": "YulFunctionCall",
																"src": "18032:62:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18024:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18024:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18114:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18114:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18125:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18125:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18110:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18110:3:13"
																		},
																		"nativeSrc": "18110:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18110:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "18130:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18130:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18103:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18103:6:13"
																},
																"nativeSrc": "18103:34:13",
																"nodeType": "YulFunctionCall",
																"src": "18103:34:13"
															},
															"nativeSrc": "18103:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "18103:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "17825:318:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17937:9:13",
														"nodeType": "YulTypedName",
														"src": "17937:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17948:6:13",
														"nodeType": "YulTypedName",
														"src": "17948:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17956:6:13",
														"nodeType": "YulTypedName",
														"src": "17956:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17964:6:13",
														"nodeType": "YulTypedName",
														"src": "17964:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17975:4:13",
														"nodeType": "YulTypedName",
														"src": "17975:4:13",
														"type": ""
													}
												],
												"src": "17825:318:13"
											},
											{
												"body": {
													"nativeSrc": "18335:80:13",
													"nodeType": "YulBlock",
													"src": "18335:80:13",
													"statements": [
														{
															"nativeSrc": "18345:64:13",
															"nodeType": "YulAssignment",
															"src": "18345:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18370:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18370:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "18396:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18396:6:13"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "18404:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18404:3:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "18378:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "18378:17:13"
																		},
																		"nativeSrc": "18378:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18378:30:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "18352:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18352:17:13"
																},
																"nativeSrc": "18352:57:13",
																"nodeType": "YulFunctionCall",
																"src": "18352:57:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18345:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18345:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18148:267:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18303:3:13",
														"nodeType": "YulTypedName",
														"src": "18303:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18308:6:13",
														"nodeType": "YulTypedName",
														"src": "18308:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18316:6:13",
														"nodeType": "YulTypedName",
														"src": "18316:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18327:3:13",
														"nodeType": "YulTypedName",
														"src": "18327:3:13",
														"type": ""
													}
												],
												"src": "18148:267:13"
											},
											{
												"body": {
													"nativeSrc": "18623:297:13",
													"nodeType": "YulBlock",
													"src": "18623:297:13",
													"statements": [
														{
															"nativeSrc": "18633:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18633:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18651:3:13",
																				"nodeType": "YulLiteral",
																				"src": "18651:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18656:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18656:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "18647:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18647:3:13"
																		},
																		"nativeSrc": "18647:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18647:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18660:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18660:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18643:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18643:3:13"
																},
																"nativeSrc": "18643:19:13",
																"nodeType": "YulFunctionCall",
																"src": "18643:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "18637:2:13",
																	"nodeType": "YulTypedName",
																	"src": "18637:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18678:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18678:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "18693:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18693:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "18701:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18701:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18689:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18689:3:13"
																		},
																		"nativeSrc": "18689:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18689:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18671:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18671:6:13"
																},
																"nativeSrc": "18671:34:13",
																"nodeType": "YulFunctionCall",
																"src": "18671:34:13"
															},
															"nativeSrc": "18671:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "18671:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18725:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18725:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18736:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18736:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18721:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18721:3:13"
																		},
																		"nativeSrc": "18721:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18721:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "18745:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18745:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "18753:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18753:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18741:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18741:3:13"
																		},
																		"nativeSrc": "18741:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18741:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18714:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18714:6:13"
																},
																"nativeSrc": "18714:43:13",
																"nodeType": "YulFunctionCall",
																"src": "18714:43:13"
															},
															"nativeSrc": "18714:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "18714:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18777:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18777:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18788:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18788:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18773:3:13"
																		},
																		"nativeSrc": "18773:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18773:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "18793:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18793:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18766:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18766:6:13"
																},
																"nativeSrc": "18766:34:13",
																"nodeType": "YulFunctionCall",
																"src": "18766:34:13"
															},
															"nativeSrc": "18766:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "18766:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18820:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18820:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18831:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18831:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18816:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18816:3:13"
																		},
																		"nativeSrc": "18816:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18816:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18836:3:13",
																		"nodeType": "YulLiteral",
																		"src": "18836:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18809:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18809:6:13"
																},
																"nativeSrc": "18809:31:13",
																"nodeType": "YulFunctionCall",
																"src": "18809:31:13"
															},
															"nativeSrc": "18809:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "18809:31:13"
														},
														{
															"nativeSrc": "18849:65:13",
															"nodeType": "YulAssignment",
															"src": "18849:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18886:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18886:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18898:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18898:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18909:3:13",
																				"nodeType": "YulLiteral",
																				"src": "18909:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18894:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18894:3:13"
																		},
																		"nativeSrc": "18894:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18894:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "18857:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "18857:28:13"
																},
																"nativeSrc": "18857:57:13",
																"nodeType": "YulFunctionCall",
																"src": "18857:57:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18849:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18849:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "18420:500:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18568:9:13",
														"nodeType": "YulTypedName",
														"src": "18568:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18579:6:13",
														"nodeType": "YulTypedName",
														"src": "18579:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18587:6:13",
														"nodeType": "YulTypedName",
														"src": "18587:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18595:6:13",
														"nodeType": "YulTypedName",
														"src": "18595:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18603:6:13",
														"nodeType": "YulTypedName",
														"src": "18603:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18614:4:13",
														"nodeType": "YulTypedName",
														"src": "18614:4:13",
														"type": ""
													}
												],
												"src": "18420:500:13"
											},
											{
												"body": {
													"nativeSrc": "19005:169:13",
													"nodeType": "YulBlock",
													"src": "19005:169:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "19051:16:13",
																"nodeType": "YulBlock",
																"src": "19051:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19060:1:13",
																					"nodeType": "YulLiteral",
																					"src": "19060:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19063:1:13",
																					"nodeType": "YulLiteral",
																					"src": "19063:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19053:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19053:6:13"
																			},
																			"nativeSrc": "19053:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19053:12:13"
																		},
																		"nativeSrc": "19053:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19053:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19026:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "19026:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19035:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19035:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19022:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19022:3:13"
																		},
																		"nativeSrc": "19022:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19022:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19047:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19047:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19018:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19018:3:13"
																},
																"nativeSrc": "19018:32:13",
																"nodeType": "YulFunctionCall",
																"src": "19018:32:13"
															},
															"nativeSrc": "19015:52:13",
															"nodeType": "YulIf",
															"src": "19015:52:13"
														},
														{
															"nativeSrc": "19076:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19076:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19095:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19095:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19089:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19089:5:13"
																},
																"nativeSrc": "19089:16:13",
																"nodeType": "YulFunctionCall",
																"src": "19089:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "19080:5:13",
																	"nodeType": "YulTypedName",
																	"src": "19080:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19138:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19138:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "19114:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "19114:23:13"
																},
																"nativeSrc": "19114:30:13",
																"nodeType": "YulFunctionCall",
																"src": "19114:30:13"
															},
															"nativeSrc": "19114:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "19114:30:13"
														},
														{
															"nativeSrc": "19153:15:13",
															"nodeType": "YulAssignment",
															"src": "19153:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "19163:5:13",
																"nodeType": "YulIdentifier",
																"src": "19163:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "19153:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19153:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "18925:249:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18971:9:13",
														"nodeType": "YulTypedName",
														"src": "18971:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18982:7:13",
														"nodeType": "YulTypedName",
														"src": "18982:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18994:6:13",
														"nodeType": "YulTypedName",
														"src": "18994:6:13",
														"type": ""
													}
												],
												"src": "18925:249:13"
											},
											{
												"body": {
													"nativeSrc": "19211:95:13",
													"nodeType": "YulBlock",
													"src": "19211:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19228:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19228:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19235:3:13",
																				"nodeType": "YulLiteral",
																				"src": "19235:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19240:10:13",
																				"nodeType": "YulLiteral",
																				"src": "19240:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "19231:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19231:3:13"
																		},
																		"nativeSrc": "19231:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19231:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19221:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19221:6:13"
																},
																"nativeSrc": "19221:31:13",
																"nodeType": "YulFunctionCall",
																"src": "19221:31:13"
															},
															"nativeSrc": "19221:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "19221:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19268:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19268:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19271:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19271:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19261:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19261:6:13"
																},
																"nativeSrc": "19261:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19261:15:13"
															},
															"nativeSrc": "19261:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19261:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19292:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19292:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19295:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19295:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19285:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19285:6:13"
																},
																"nativeSrc": "19285:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19285:15:13"
															},
															"nativeSrc": "19285:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19285:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "19179:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19179:127:13"
											},
											{
												"body": {
													"nativeSrc": "19440:145:13",
													"nodeType": "YulBlock",
													"src": "19440:145:13",
													"statements": [
														{
															"nativeSrc": "19450:26:13",
															"nodeType": "YulAssignment",
															"src": "19450:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19462:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19462:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19473:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19473:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19458:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19458:3:13"
																},
																"nativeSrc": "19458:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19458:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19450:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19450:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19492:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19492:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "19507:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19507:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "19523:3:13",
																								"nodeType": "YulLiteral",
																								"src": "19523:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "19528:1:13",
																								"nodeType": "YulLiteral",
																								"src": "19528:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "19519:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "19519:3:13"
																						},
																						"nativeSrc": "19519:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "19519:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19532:1:13",
																						"nodeType": "YulLiteral",
																						"src": "19532:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "19515:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "19515:3:13"
																				},
																				"nativeSrc": "19515:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "19515:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19503:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19503:3:13"
																		},
																		"nativeSrc": "19503:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19503:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19485:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19485:6:13"
																},
																"nativeSrc": "19485:51:13",
																"nodeType": "YulFunctionCall",
																"src": "19485:51:13"
															},
															"nativeSrc": "19485:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "19485:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19556:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19556:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19567:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19567:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19552:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19552:3:13"
																		},
																		"nativeSrc": "19552:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19552:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "19572:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19572:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19545:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19545:6:13"
																},
																"nativeSrc": "19545:34:13",
																"nodeType": "YulFunctionCall",
																"src": "19545:34:13"
															},
															"nativeSrc": "19545:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "19545:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19311:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19401:9:13",
														"nodeType": "YulTypedName",
														"src": "19401:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19412:6:13",
														"nodeType": "YulTypedName",
														"src": "19412:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19420:6:13",
														"nodeType": "YulTypedName",
														"src": "19420:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19431:4:13",
														"nodeType": "YulTypedName",
														"src": "19431:4:13",
														"type": ""
													}
												],
												"src": "19311:274:13"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_string_memory_ptr(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_string_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_string_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_string_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _2) { revert(0, 0) }\n            let _5 := add(_3, innerOffset)\n            if iszero(slt(add(_5, 63), dataEnd)) { revert(0, 0) }\n            mstore(dst, abi_decode_available_length_string(add(_5, 64), calldataload(add(_5, _1)), dataEnd))\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_array_string_calldata_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_string_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_string_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_string_calldata_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_2cb6a5a9896aee21175869d21ed4d91ef4be1b4b6e0dabc3887c3e2a19cd06d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Credit types and supply limits l\")\n        mstore(add(headStart, 96), \"ength mismatch\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_string(value0, pos)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function access_calldata_tail_t_string_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, value1)), 64)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let rel_offset_of_tail := calldataload(srcPtr)\n            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), value0), not(30)))) { revert(0, 0) }\n            let value := add(rel_offset_of_tail, value0)\n            let length := calldataload(value)\n            let value_1 := add(value, _1)\n            if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n            if sgt(value_1, sub(calldatasize(), length)) { revert(0, 0) }\n            tail_2 := abi_encode_string_calldata(value_1, length, tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610127575f3560e01c80637f177d31116100a9578063af77af041161006e578063af77af041461027c578063b88d4fde1461028f578063c87b56dd146102a2578063e985e9c5146102b5578063f2fde38b146102c8575f80fd5b80637f177d311461021d5780638a6054361461023d5780638da5cb5b1461025057806395d89b4114610261578063a22cb46514610269575f80fd5b806342842e0e116100ef57806342842e0e146101bb5780636352211e146101ce57806370a08231146101e1578063715018a614610202578063736dea811461020a575f80fd5b806301ffc9a71461012b57806306fdde0314610153578063081812fc14610168578063095ea7b31461019357806323b872dd146101a8575b5f80fd5b61013e61013936600461125c565b6102db565b60405190151581526020015b60405180910390f35b61015b61032c565b60405161014a91906112a5565b61017b6101763660046112b7565b6103bb565b6040516001600160a01b03909116815260200161014a565b6101a66101a13660046112e9565b6103e2565b005b6101a66101b6366004611311565b6103f1565b6101a66101c9366004611311565b61047f565b61017b6101dc3660046112b7565b61049e565b6101f46101ef36600461134a565b6104a8565b60405190815260200161014a565b6101a66104ed565b6101f4610218366004611363565b610500565b61023061022b3660046112b7565b610535565b60405161014a91906113d7565b6101a661024b36600461155f565b61061a565b6006546001600160a01b031661017b565b61015b6107e2565b6101a661027736600461164e565b6107f1565b6101a661028a3660046116ce565b6107fc565b6101a661029d366004611741565b6109d3565b61015b6102b03660046112b7565b6109ea565b61013e6102c33660046117b7565b610a5b565b6101a66102d636600461134a565b610a88565b5f6001600160e01b031982166380ac58cd60e01b148061030b57506001600160e01b03198216635b5e139f60e01b145b8061032657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461033a906117e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906117e8565b80156103b15780601f10610388576101008083540402835291602001916103b1565b820191905f5260205f20905b81548152906001019060200180831161039457829003601f168201915b5050505050905090565b5f6103c582610ac5565b505f828152600460205260409020546001600160a01b0316610326565b6103ed828233610afd565b5050565b6001600160a01b03821661041f57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61042b838333610b0a565b9050836001600160a01b0316816001600160a01b031614610479576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610416565b50505050565b61049983838360405180602001604052805f8152506109d3565b505050565b5f61032682610ac5565b5f6001600160a01b0382166104d2576040516322718ad960e21b81525f6004820152602401610416565b506001600160a01b03165f9081526003602052604090205490565b6104f5610bfc565b6104fe5f610c29565b565b5f83815260086020526040808220905161051d9085908590611820565b90815260200160405180910390205490509392505050565b606060075f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561060f578382905f5260205f20018054610584906117e8565b80601f01602080910402602001604051908101604052809291908181526020018280546105b0906117e8565b80156105fb5780601f106105d2576101008083540402835291602001916105fb565b820191905f5260205f20905b8154815290600101906020018083116105de57829003601f168201915b505050505081526020019060010190610567565b505050509050919050565b610622610bfc565b80518251146106435760405162461bcd60e51b81526004016104169061182f565b5f6009546001610653919061187d565b600981905590506106648482610c7a565b5f5b8351811015610723575f82815260076020526040902084518590839081106106905761069061189c565b60209081029190910181015182546001810184555f9384529190922001906106b890826118f4565b508281815181106106cb576106cb61189c565b602002602001015160085f8481526020019081526020015f208583815181106106f6576106f661189c565b602002602001015160405161070b91906119c6565b90815260405190819003602001902055600101610666565b50807faaa3ef9b79affd1b4052e81dd38126a7a1dd22345b41b8866fbe06d6c5cb02fe8460405161075491906113d7565b60405180910390a25f5b83518110156107db57817ff09c4f8065057564478e900e30beeaa7be6409e52ad156a4067fdcab3e9ad5d085838151811061079b5761079b61189c565b60200260200101518584815181106107b5576107b561189c565b60200260200101516040516107cb9291906119d1565b60405180910390a260010161075e565b5050505050565b60606001805461033a906117e8565b6103ed338383610cdb565b610804610bfc565b8281146108235760405162461bcd60e51b81526004016104169061182f565b5f858152600760205260408120610839916111ca565b5f5b83811015610908575f8681526007602052604090208585838181106108625761086261189c565b905060200281019061087491906119f2565b82546001810184555f9384526020909320909201916108939183611a34565b508282828181106108a6576108a661189c565b9050602002013560085f8881526020019081526020015f208686848181106108d0576108d061189c565b90506020028101906108e291906119f2565b6040516108f0929190611820565b9081526040519081900360200190205560010161083b565b50847faaa3ef9b79affd1b4052e81dd38126a7a1dd22345b41b8866fbe06d6c5cb02fe858560405161093b929190611b15565b60405180910390a25f5b838110156109cb57857ff09c4f8065057564478e900e30beeaa7be6409e52ad156a4067fdcab3e9ad5d08686848181106109815761098161189c565b905060200281019061099391906119f2565b8686868181106109a5576109a561189c565b905060200201356040516109bb93929190611bac565b60405180910390a2600101610945565b505050505050565b6109de8484846103f1565b61047984848484610d79565b60606109f582610ac5565b505f610a0b60408051602081019091525f815290565b90505f815111610a295760405180602001604052805f815250610a54565b80610a3384610e98565b604051602001610a44929190611bcf565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610a90610bfc565b6001600160a01b038116610ab957604051631e4fbdf760e01b81525f6004820152602401610416565b610ac281610c29565b50565b5f818152600260205260408120546001600160a01b03168061032657604051637e27328960e01b815260048101849052602401610416565b6104998383836001610f27565b5f828152600260205260408120546001600160a01b0390811690831615610b3657610b3681848661102b565b6001600160a01b03811615610b7057610b515f855f80610f27565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610b9e576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146104fe5760405163118cdaa760e01b8152336004820152602401610416565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610ca357604051633250574960e11b81525f6004820152602401610416565b5f610caf83835f610b0a565b90506001600160a01b03811615610499576040516339e3563760e11b81525f6004820152602401610416565b6001600160a01b038216610d0d57604051630b61174360e31b81526001600160a01b0383166004820152602401610416565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561047957604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610dbb903390889087908790600401611be3565b6020604051808303815f875af1925050508015610df5575060408051601f3d908101601f19168201909252610df291810190611c1f565b60015b610e5c573d808015610e22576040519150601f19603f3d011682016040523d82523d5f602084013e610e27565b606091505b5080515f03610e5457604051633250574960e11b81526001600160a01b0385166004820152602401610416565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146107db57604051633250574960e11b81526001600160a01b0385166004820152602401610416565b60605f610ea48361108f565b60010190505f816001600160401b03811115610ec257610ec2611439565b6040519080825280601f01601f191660200182016040528015610eec576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ef657509392505050565b8080610f3b57506001600160a01b03821615155b15610ffc575f610f4a84610ac5565b90506001600160a01b03831615801590610f765750826001600160a01b0316816001600160a01b031614155b8015610f895750610f878184610a5b565b155b15610fb25760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610416565b8115610ffa5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b611036838383611166565b610499576001600160a01b03831661106457604051637e27328960e01b815260048101829052602401610416565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610416565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110cd5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110f9576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061111757662386f26fc10000830492506010015b6305f5e100831061112f576305f5e100830492506008015b612710831061114357612710830492506004015b60648310611155576064830492506002015b600a83106103265760010192915050565b5f6001600160a01b038316158015906111c25750826001600160a01b0316846001600160a01b0316148061119f575061119f8484610a5b565b806111c257505f828152600460205260409020546001600160a01b038481169116145b949350505050565b5080545f8255905f5260205f2090810190610ac291905b808211156111fd575f6111f48282611201565b506001016111e1565b5090565b50805461120d906117e8565b5f825580601f1061121c575050565b601f0160209004905f5260205f2090810190610ac291905b808211156111fd575f8155600101611234565b6001600160e01b031981168114610ac2575f80fd5b5f6020828403121561126c575f80fd5b8135610a5481611247565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610a546020830184611277565b5f602082840312156112c7575f80fd5b5035919050565b80356001600160a01b03811681146112e4575f80fd5b919050565b5f80604083850312156112fa575f80fd5b611303836112ce565b946020939093013593505050565b5f805f60608486031215611323575f80fd5b61132c846112ce565b925061133a602085016112ce565b9150604084013590509250925092565b5f6020828403121561135a575f80fd5b610a54826112ce565b5f805f60408486031215611375575f80fd5b8335925060208401356001600160401b0380821115611392575f80fd5b818601915086601f8301126113a5575f80fd5b8135818111156113b3575f80fd5b8760208285010111156113c4575f80fd5b6020830194508093505050509250925092565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561142c57603f1988860301845261141a858351611277565b945092850192908501906001016113fe565b5092979650505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561147557611475611439565b604052919050565b5f6001600160401b0382111561149557611495611439565b5060051b60200190565b5f6001600160401b038311156114b7576114b7611439565b6114ca601f8401601f191660200161144d565b90508281528383830111156114dd575f80fd5b828260208301375f602084830101529392505050565b5f82601f830112611502575f80fd5b813560206115176115128361147d565b61144d565b8083825260208201915060208460051b870101935086841115611538575f80fd5b602086015b84811015611554578035835291830191830161153d565b509695505050505050565b5f805f60608486031215611571575f80fd5b61157a846112ce565b92506020808501356001600160401b0380821115611596575f80fd5b818701915087601f8301126115a9575f80fd5b81356115b76115128261147d565b81815260059190911b8301840190848101908a8311156115d5575f80fd5b8585015b8381101561161e578035858111156115ef575f80fd5b8601603f81018d136115ff575f80fd5b6116108d898301356040840161149f565b8452509186019186016115d9565b50965050506040870135925080831115611636575f80fd5b5050611644868287016114f3565b9150509250925092565b5f806040838503121561165f575f80fd5b611668836112ce565b91506020830135801515811461167c575f80fd5b809150509250929050565b5f8083601f840112611697575f80fd5b5081356001600160401b038111156116ad575f80fd5b6020830191508360208260051b85010111156116c7575f80fd5b9250929050565b5f805f805f606086880312156116e2575f80fd5b8535945060208601356001600160401b03808211156116ff575f80fd5b61170b89838a01611687565b90965094506040880135915080821115611723575f80fd5b5061173088828901611687565b969995985093965092949392505050565b5f805f8060808587031215611754575f80fd5b61175d856112ce565b935061176b602086016112ce565b92506040850135915060608501356001600160401b0381111561178c575f80fd5b8501601f8101871361179c575f80fd5b6117ab8782356020840161149f565b91505092959194509250565b5f80604083850312156117c8575f80fd5b6117d1836112ce565b91506117df602084016112ce565b90509250929050565b600181811c908216806117fc57607f821691505b60208210810361181a57634e487b7160e01b5f52602260045260245ffd5b50919050565b818382375f9101908152919050565b6020808252602e908201527f43726564697420747970657320616e6420737570706c79206c696d697473206c60408201526d0cadccee8d040dad2e6dac2e8c6d60931b606082015260800190565b8082018082111561032657634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b601f82111561049957805f5260205f20601f840160051c810160208510156118d55750805b601f840160051c820191505b818110156107db575f81556001016118e1565b81516001600160401b0381111561190d5761190d611439565b6119218161191b84546117e8565b846118b0565b602080601f831160018114611954575f841561193d5750858301515b5f19600386901b1c1916600185901b1785556109cb565b5f85815260208120601f198616915b8281101561198257888601518255948401946001909101908401611963565b508582101561199f57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f81518060208401855e5f93019283525090919050565b5f610a5482846119af565b604081525f6119e36040830185611277565b90508260208301529392505050565b5f808335601e19843603018112611a07575f80fd5b8301803591506001600160401b03821115611a20575f80fd5b6020019150368190038213156116c7575f80fd5b6001600160401b03831115611a4b57611a4b611439565b611a5f83611a5983546117e8565b836118b0565b5f601f841160018114611a90575f8515611a795750838201355b5f19600387901b1c1916600186901b1783556107db565b5f83815260208120601f198716915b82811015611abf5786850135825560209485019460019092019101611a9f565b5086821015611adb575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b60208082528181018390525f906040600585901b8401810190840186845b87811015611b9f57868403603f190183528135368a9003601e19018112611b58575f80fd5b890185810190356001600160401b03811115611b72575f80fd5b803603821315611b80575f80fd5b611b8b868284611aed565b955050509184019190840190600101611b33565b5091979650505050505050565b604081525f611bbf604083018587611aed565b9050826020830152949350505050565b5f6111c2611bdd83866119af565b846119af565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611c1590830184611277565b9695505050505050565b5f60208284031215611c2f575f80fd5b8151610a548161124756fea2646970667358221220e30b7d5a594251fbfba1c4a1de4c25049b8833901d14e92e289b3ee7ba5fab6764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F177D31 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xAF77AF04 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAF77AF04 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F177D31 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8A605436 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x736DEA81 EQ PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E9 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0x17B PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1363 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15B PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x134A JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x30B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x326 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x366 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x388 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x394 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C5 DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x326 JUMP JUMPDEST PUSH2 0x3ED DUP3 DUP3 CALLER PUSH2 0xAFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x42B DUP4 DUP4 CALLER PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x416 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x499 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x326 DUP3 PUSH2 0xAC5 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x4FE PUSH0 PUSH2 0xC29 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x51D SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x1820 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x60F JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x567 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x622 PUSH2 0xBFC JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE SWAP1 POP PUSH2 0x664 DUP5 DUP3 PUSH2 0xC7A JUMP JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x723 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x690 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SWAP1 PUSH2 0x6B8 SWAP1 DUP3 PUSH2 0x18F4 JUMP JUMPDEST POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6F6 JUMPI PUSH2 0x6F6 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x666 JUMP JUMPDEST POP DUP1 PUSH32 0xAAA3EF9B79AFFD1B4052E81DD38126A7A1DD22345B41B8866FBE06D6C5CB02FE DUP5 PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x7DB JUMPI DUP2 PUSH32 0xF09C4F8065057564478E900E30BEEAA7BE6409E52AD156A4067FDCAB3E9AD5D0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI PUSH2 0x79B PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7B5 JUMPI PUSH2 0x7B5 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7CB SWAP3 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x75E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x3ED CALLER DUP4 DUP4 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x804 PUSH2 0xBFC JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x839 SWAP2 PUSH2 0x11CA JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x908 JUMPI PUSH0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x862 JUMPI PUSH2 0x862 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 KECCAK256 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x893 SWAP2 DUP4 PUSH2 0x1A34 JUMP JUMPDEST POP DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x8A6 JUMPI PUSH2 0x8A6 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x8 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8D0 JUMPI PUSH2 0x8D0 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F0 SWAP3 SWAP2 SWAP1 PUSH2 0x1820 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x83B JUMP JUMPDEST POP DUP5 PUSH32 0xAAA3EF9B79AFFD1B4052E81DD38126A7A1DD22345B41B8866FBE06D6C5CB02FE DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x93B SWAP3 SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9CB JUMPI DUP6 PUSH32 0xF09C4F8065057564478E900E30BEEAA7BE6409E52AD156A4067FDCAB3E9AD5D0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x981 JUMPI PUSH2 0x981 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x9A5 JUMPI PUSH2 0x9A5 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x9BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x945 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9DE DUP5 DUP5 DUP5 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x479 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9F5 DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH0 PUSH2 0xA0B PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA54 JUMP JUMPDEST DUP1 PUSH2 0xA33 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA44 SWAP3 SWAP2 SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA90 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0xAC2 DUP2 PUSH2 0xC29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x499 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF27 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB36 DUP2 DUP5 DUP7 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xB70 JUMPI PUSH2 0xB51 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xB9E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH0 PUSH2 0xCAF DUP4 DUP4 PUSH0 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xDBB SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDF5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDF2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE5C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xEA4 DUP4 PUSH2 0x108F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xEC2 JUMPI PUSH2 0xEC2 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEF6 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF3B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFFC JUMPI PUSH0 PUSH2 0xF4A DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF76 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF89 JUMPI POP PUSH2 0xF87 DUP2 DUP5 PUSH2 0xA5B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFFA JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1036 DUP4 DUP4 DUP4 PUSH2 0x1166 JUMP JUMPDEST PUSH2 0x499 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x416 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x10CD JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x10F9 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1117 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x112F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1143 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1155 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x326 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11C2 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x119F JUMPI POP PUSH2 0x119F DUP5 DUP5 PUSH2 0xA5B JUMP JUMPDEST DUP1 PUSH2 0x11C2 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11FD JUMPI PUSH0 PUSH2 0x11F4 DUP3 DUP3 PUSH2 0x1201 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x11E1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x120D SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x121C JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11FD JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA54 DUP2 PUSH2 0x1247 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xA54 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1303 DUP4 PUSH2 0x12CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1323 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132C DUP5 PUSH2 0x12CE JUMP JUMPDEST SWAP3 POP PUSH2 0x133A PUSH1 0x20 DUP6 ADD PUSH2 0x12CE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA54 DUP3 PUSH2 0x12CE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1375 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1392 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP PUSH1 0x20 DUP8 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x142C JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x141A DUP6 DUP4 MLOAD PUSH2 0x1277 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13FE JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1475 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1495 PUSH2 0x1439 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B7 PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x14CA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x144D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x14DD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1502 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1517 PUSH2 0x1512 DUP4 PUSH2 0x147D JUMP JUMPDEST PUSH2 0x144D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1538 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1554 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x153D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1571 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157A DUP5 PUSH2 0x12CE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1596 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15B7 PUSH2 0x1512 DUP3 PUSH2 0x147D JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP11 DUP4 GT ISZERO PUSH2 0x15D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x161E JUMPI DUP1 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x15EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x3F DUP2 ADD DUP14 SGT PUSH2 0x15FF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1610 DUP14 DUP10 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP5 ADD PUSH2 0x149F JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x15D9 JUMP JUMPDEST POP SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1636 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1644 DUP7 DUP3 DUP8 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x165F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1668 DUP4 PUSH2 0x12CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x167C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1697 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x16C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x16FF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x170B DUP10 DUP4 DUP11 ADD PUSH2 0x1687 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1723 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1730 DUP9 DUP3 DUP10 ADD PUSH2 0x1687 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1754 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x175D DUP6 PUSH2 0x12CE JUMP JUMPDEST SWAP4 POP PUSH2 0x176B PUSH1 0x20 DUP7 ADD PUSH2 0x12CE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x178C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x179C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17AB DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x149F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D1 DUP4 PUSH2 0x12CE JUMP JUMPDEST SWAP2 POP PUSH2 0x17DF PUSH1 0x20 DUP5 ADD PUSH2 0x12CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x181A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x43726564697420747970657320616E6420737570706C79206C696D697473206C PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0xCADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x326 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x499 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x18D5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7DB JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18E1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x190D JUMPI PUSH2 0x190D PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1921 DUP2 PUSH2 0x191B DUP5 SLOAD PUSH2 0x17E8 JUMP JUMPDEST DUP5 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1954 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x193D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x9CB JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1982 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1963 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x199F JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA54 DUP3 DUP5 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x19E3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1277 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1A07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A20 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x16C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1A4B JUMPI PUSH2 0x1A4B PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1A5F DUP4 PUSH2 0x1A59 DUP4 SLOAD PUSH2 0x17E8 JUMP JUMPDEST DUP4 PUSH2 0x18B0 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A90 JUMPI PUSH0 DUP6 ISZERO PUSH2 0x1A79 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x7DB JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1ABF JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A9F JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x1ADB JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x40 PUSH1 0x5 DUP6 SWAP1 SHL DUP5 ADD DUP2 ADD SWAP1 DUP5 ADD DUP7 DUP5 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x1B9F JUMPI DUP7 DUP5 SUB PUSH1 0x3F NOT ADD DUP4 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP11 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x1B58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 ADD DUP6 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B72 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1B80 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B8B DUP7 DUP3 DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP6 POP POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B33 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1BBF PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1AED JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11C2 PUSH2 0x1BDD DUP4 DUP7 PUSH2 0x19AF JUMP JUMPDEST DUP5 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1C15 SWAP1 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA54 DUP2 PUSH2 0x1247 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SIGNEXTEND PUSH30 0x5A594251FBFBA1C4A1DE4C25049B8833901D14E92E289B3EE7BA5FAB6764 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "175:3739:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:2;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1561:300:2;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1482:32:13;;;1464:51;;1452:2;1437:18;3497:154:2;1318:203:13;3323:113:2;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;:::i;:::-;;:::i;4787:132::-;;;;;;:::i;:::-;;:::i;2185:118::-;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;:::-;;;2633:25:13;;;2621:2;2606:18;1920:208:2;2487:177:13;2293:101:0;;;:::i;2610:173:12:-;;;;;;:::i;:::-;;:::i;2217:128::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1115:918::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2518:93:2;;;:::i;3718:144::-;;;;;;:::i;:::-;;:::i;3070:841:12:-;;;;;;:::i;:::-;;:::i;4985:208:2:-;;;;;;:::i;:::-;;:::i;2677:255::-;;;;;;:::i;:::-;;:::i;3928:153::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1561:300:2:-;1663:4;-1:-1:-1;;;;;;1698:40:2;;-1:-1:-1;;;1698:40:2;;:104;;-1:-1:-1;;;;;;;1754:48:2;;-1:-1:-1;;;1754:48:2;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:8;;;1818:36:2;1679:175;1561:300;-1:-1:-1;;1561:300:2:o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:2;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:6;3394:8:2;:35::i;:::-;3323:113;;:::o;4143:578::-;-1:-1:-1;;;;;4237:16:2;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:2;;4306:1;4276:33;;;1464:51:13;1437:18;;4276:33:2;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:6;4562:7:2;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:2;:13;-1:-1:-1;;;;;4610:21:2;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:2;;-1:-1:-1;;;;;10524:15:13;;;4654:50:2;;;10506:34:13;10556:18;;;10549:34;;;10619:15;;10599:18;;;10592:43;10441:18;;4654:50:2;10266:375:13;4606:109:2;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:2;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:2;;2075:1;2048:30;;;1464:51:13;1437:18;;2048:30:2;1318:203:13;2002:87:2;-1:-1:-1;;;;;;2105:16:2;;;;;:9;:16;;;;;;;1920:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2610:173:12:-;2708:7;2735:28;;;:19;:28;;;;;;:40;;;;2764:10;;;;2735:40;:::i;:::-;;;;;;;;;;;;;;2728:47;;2610:173;;;;;:::o;2217:128::-;2281:15;2316:12;:21;2329:7;2316:21;;;;;;;;;;;2309:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2217:128;;;:::o;1115:918::-;1531:13:0;:11;:13::i;:::-;1299:18:12::1;:25;1277:11;:18;:47;1269:106;;;;-1:-1:-1::0;;;1269:106:12::1;;;;;;;:::i;:::-;1388:15;1406;;1424:1;1406:19;;;;:::i;:::-;1469:15;:25:::0;;;1388:37;-1:-1:-1;1534:18:12::1;1540:2:::0;1388:37;1534:5:::1;:18::i;:::-;1609:9;1604:201;1628:11;:18;1624:1;:22;1604:201;;;1668:21;::::0;;;:12:::1;:21;::::0;;;;1695:14;;:11;;1707:1;;1695:14;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;1668:42;;::::1;::::0;::::1;::::0;;-1:-1:-1;1668:42:12;;;;;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;1772:18;1791:1;1772:21;;;;;;;;:::i;:::-;;;;;;;1725:19;:28;1745:7;1725:28;;;;;;;;;;;1754:11;1766:1;1754:14;;;;;;;;:::i;:::-;;;;;;;1725:44;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:68;1648:3:::1;;1604:201;;;;1841:7;1822:40;1850:11;1822:40;;;;;;:::i;:::-;;;;;;;;1878:9;1873:153;1897:11;:18;1893:1;:22;1873:153;;;1967:7;1942:72;1976:11;1988:1;1976:14;;;;;;;;:::i;:::-;;;;;;;1992:18;2011:1;1992:21;;;;;;;;:::i;:::-;;;;;;;1942:72;;;;;;;:::i;:::-;;;;;;;;1917:3;;1873:153;;;;1258:775;1115:918:::0;;;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:6;3836:8:2;3846;3803:18;:52::i;3070:841:12:-;1531:13:0;:11;:13::i;:::-;3262:47:12;;::::1;3254:106;;;;-1:-1:-1::0;;;3254:106:12::1;;;;;;;:::i;:::-;3419:21;::::0;;;:12:::1;:21;::::0;;;;3412:28:::1;::::0;::::1;:::i;:::-;3487:9;3482:201;3502:22:::0;;::::1;3482:201;;;3546:21;::::0;;;:12:::1;:21;::::0;;;;3573:11;;3585:1;3573:14;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3546:42:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3546:42:12;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;3650:18;;3669:1;3650:21;;;;;;;:::i;:::-;;;;;;;3603:19;:28;3623:7;3603:28;;;;;;;;;;;3632:11;;3644:1;3632:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3603:44;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:68;3526:3:::1;;3482:201;;;;3719:7;3700:40;3728:11;;3700:40;;;;;;;:::i;:::-;;;;;;;;3756:9;3751:153;3771:22:::0;;::::1;3751:153;;;3845:7;3820:72;3854:11;;3866:1;3854:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3870:18;;3889:1;3870:21;;;;;;;:::i;:::-;;;;;;;3820:72;;;;;;;;:::i;:::-;;;;;;;;3795:3;;3751:153;;;;3070:841:::0;;;;;:::o;4985:208:2:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:2;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:2:o;3928:153::-;-1:-1:-1;;;;;4039:25:2;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1464:51:13::0;1437:18;;2672:31:0::1;1318:203:13::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;16138:241:2:-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:2;;;;;2633:25:13;;;2606:18;;16309:31:2;2487:177:13;14418:120:2;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:2;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:2;;;9157:256;-1:-1:-1;;;;;9427:16:2;;;9423:107;;-1:-1:-1;;;;;9487:13:2;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:2;-1:-1:-1;;;;;9540:21:2;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:2:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;1464:51:13;1437:18;;1901:40:0;1318:203:13;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9955:327:2:-;-1:-1:-1;;;;;10022:16:2;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:2;;10091:1;10061:33;;;1464:51:13;1437:18;;10061:33:2;1318:203:13;10018:87:2;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:2;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:2;;10262:1;10234:31;;;1464:51:13;1437:18;;10234:31:2;1318:203:13;15591:312:2;-1:-1:-1;;;;;15698:22:2;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:2;;-1:-1:-1;;;;;1482:32:13;;15743:31:2;;;1464:51:13;1437:18;;15743:31:2;1318:203:13;15694:91:2;-1:-1:-1;;;;;15794:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:2;;;;;;;;;;15855:41;;540::13;;;15855::2;;513:18:13;15855:41:2;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:2;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:2;;-1:-1:-1;;;;;17072:36:2;;;;;:71;;735:10:6;;17123:4:2;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:2;;;;;;;;-1:-1:-1;;17072:71:2;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:2;;-1:-1:-1;;;;;1482:32:13;;17430:25:2;;;1464:51:13;1437:18;;17430:25:2;1318:203:13;17377:293:2;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:2;;-1:-1:-1;;;17190:51:2;17186:130;;17272:25;;-1:-1:-1;;;17272:25:2;;-1:-1:-1;;;;;1482:32:13;;17272:25:2;;;1464:51:13;1437:18;;17272:25:2;1318:203:13;637:698:7;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:7;-1:-1:-1;794:41:7;-1:-1:-1;955:28:7;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:7;-1:-1:-1;;;1175:2:7;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:7;1010:282;1256:21;-1:-1:-1;1312:6:7;637:698;-1:-1:-1;;;637:698:7:o;14720:662:2:-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:2;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:2;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:2;:5;-1:-1:-1;;;;;15115:13:2;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:2;;-1:-1:-1;;;;;1482:32:13;;15189:27:2;;;1464:51:13;1437:18;;15189:27:2;1318:203:13;15089:142:2;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:2;15292:5;-1:-1:-1;;;;;15283:28:2;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:2;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:2;-1:-1:-1;;;;;15346:29:2;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:2;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:2;;;;;2633:25:13;;;2606:18;;7298:31:2;2487:177:13;7248:186:2;7375:44;;-1:-1:-1;;;7375:44:2;;-1:-1:-1;;;;;19503:32:13;;7375:44:2;;;19485:51:13;19552:18;;;19545:34;;;19458:18;;7375:44:2;19311:274:13;12214:916:10;12267:7;;-1:-1:-1;;;12342:17:10;;12338:103;;-1:-1:-1;;;12379:17:10;;;-1:-1:-1;12424:2:10;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:10;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:10;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:10;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:10;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:10;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:10:o;6376:272:2:-;6479:4;-1:-1:-1;;;;;6514:21:2;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:2;:5;-1:-1:-1;;;;;6552:16:2;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6608:32:2;;;6034:24;;6608:32;6552:88;6495:146;6376:272;-1:-1:-1;;;;6376:272:2:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:13;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:300::-;645:3;683:5;677:12;710:6;705:3;698:19;766:6;759:4;752:5;748:16;741:4;736:3;732:14;726:47;818:1;811:4;802:6;797:3;793:16;789:27;782:38;881:4;874:2;870:7;865:2;857:6;853:15;849:29;844:3;840:39;836:50;829:57;;;592:300;;;;:::o;897:231::-;1046:2;1035:9;1028:21;1009:4;1066:56;1118:2;1107:9;1103:18;1095:6;1066:56;:::i;1133:180::-;1192:6;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;-1:-1:-1;1284:23:13;;1133:180;-1:-1:-1;1133:180:13:o;1526:173::-;1594:20;;-1:-1:-1;;;;;1643:31:13;;1633:42;;1623:70;;1689:1;1686;1679:12;1623:70;1526:173;;;:::o;1704:254::-;1772:6;1780;1833:2;1821:9;1812:7;1808:23;1804:32;1801:52;;;1849:1;1846;1839:12;1801:52;1872:29;1891:9;1872:29;:::i;:::-;1862:39;1948:2;1933:18;;;;1920:32;;-1:-1:-1;;;1704:254:13:o;1963:328::-;2040:6;2048;2056;2109:2;2097:9;2088:7;2084:23;2080:32;2077:52;;;2125:1;2122;2115:12;2077:52;2148:29;2167:9;2148:29;:::i;:::-;2138:39;;2196:38;2230:2;2219:9;2215:18;2196:38;:::i;:::-;2186:48;;2281:2;2270:9;2266:18;2253:32;2243:42;;1963:328;;;;;:::o;2296:186::-;2355:6;2408:2;2396:9;2387:7;2383:23;2379:32;2376:52;;;2424:1;2421;2414:12;2376:52;2447:29;2466:9;2447:29;:::i;2669:660::-;2749:6;2757;2765;2818:2;2806:9;2797:7;2793:23;2789:32;2786:52;;;2834:1;2831;2824:12;2786:52;2870:9;2857:23;2847:33;;2931:2;2920:9;2916:18;2903:32;-1:-1:-1;;;;;2995:2:13;2987:6;2984:14;2981:34;;;3011:1;3008;3001:12;2981:34;3049:6;3038:9;3034:22;3024:32;;3094:7;3087:4;3083:2;3079:13;3075:27;3065:55;;3116:1;3113;3106:12;3065:55;3156:2;3143:16;3182:2;3174:6;3171:14;3168:34;;;3198:1;3195;3188:12;3168:34;3243:7;3238:2;3229:6;3225:2;3221:15;3217:24;3214:37;3211:57;;;3264:1;3261;3254:12;3211:57;3295:2;3291;3287:11;3277:21;;3317:6;3307:16;;;;;2669:660;;;;;:::o;3334:814::-;3496:4;3525:2;3565;3554:9;3550:18;3595:2;3584:9;3577:21;3618:6;3653;3647:13;3684:6;3676;3669:22;3722:2;3711:9;3707:18;3700:25;;3784:2;3774:6;3771:1;3767:14;3756:9;3752:30;3748:39;3734:53;;3822:2;3814:6;3810:15;3843:1;3853:266;3867:6;3864:1;3861:13;3853:266;;;3960:2;3956:7;3944:9;3936:6;3932:22;3928:36;3923:3;3916:49;3988:51;4032:6;4023;4017:13;3988:51;:::i;:::-;3978:61;-1:-1:-1;4097:12:13;;;;4062:15;;;;3889:1;3882:9;3853:266;;;-1:-1:-1;4136:6:13;;3334:814;-1:-1:-1;;;;;;;3334:814:13:o;4153:127::-;4214:10;4209:3;4205:20;4202:1;4195:31;4245:4;4242:1;4235:15;4269:4;4266:1;4259:15;4285:275;4356:2;4350:9;4421:2;4402:13;;-1:-1:-1;;4398:27:13;4386:40;;-1:-1:-1;;;;;4441:34:13;;4477:22;;;4438:62;4435:88;;;4503:18;;:::i;:::-;4539:2;4532:22;4285:275;;-1:-1:-1;4285:275:13:o;4565:182::-;4624:4;-1:-1:-1;;;;;4649:6:13;4646:30;4643:56;;;4679:18;;:::i;:::-;-1:-1:-1;4724:1:13;4720:14;4736:4;4716:25;;4565:182::o;4752:407::-;4817:5;-1:-1:-1;;;;;4843:6:13;4840:30;4837:56;;;4873:18;;:::i;:::-;4911:57;4956:2;4935:15;;-1:-1:-1;;4931:29:13;4962:4;4927:40;4911:57;:::i;:::-;4902:66;;4991:6;4984:5;4977:21;5031:3;5022:6;5017:3;5013:16;5010:25;5007:45;;;5048:1;5045;5038:12;5007:45;5097:6;5092:3;5085:4;5078:5;5074:16;5061:43;5151:1;5144:4;5135:6;5128:5;5124:18;5120:29;5113:40;4752:407;;;;;:::o;5164:667::-;5218:5;5271:3;5264:4;5256:6;5252:17;5248:27;5238:55;;5289:1;5286;5279:12;5238:55;5325:6;5312:20;5351:4;5375:59;5391:42;5430:2;5391:42;:::i;:::-;5375:59;:::i;:::-;5456:3;5480:2;5475:3;5468:15;5508:4;5503:3;5499:14;5492:21;;5565:4;5559:2;5556:1;5552:10;5544:6;5540:23;5536:34;5522:48;;5593:3;5585:6;5582:15;5579:35;;;5610:1;5607;5600:12;5579:35;5646:4;5638:6;5634:17;5660:142;5676:6;5671:3;5668:15;5660:142;;;5742:17;;5730:30;;5780:12;;;;5693;;5660:142;;;-1:-1:-1;5820:5:13;5164:667;-1:-1:-1;;;;;;5164:667:13:o;5836:1497::-;5973:6;5981;5989;6042:2;6030:9;6021:7;6017:23;6013:32;6010:52;;;6058:1;6055;6048:12;6010:52;6081:29;6100:9;6081:29;:::i;:::-;6071:39;;6129:2;6182;6171:9;6167:18;6154:32;-1:-1:-1;;;;;6246:2:13;6238:6;6235:14;6232:34;;;6262:1;6259;6252:12;6232:34;6300:6;6289:9;6285:22;6275:32;;6345:7;6338:4;6334:2;6330:13;6326:27;6316:55;;6367:1;6364;6357:12;6316:55;6403:2;6390:16;6426:59;6442:42;6481:2;6442:42;:::i;6426:59::-;6519:15;;;6601:1;6597:10;;;;6589:19;;6585:28;;;6550:12;;;;6625:19;;;6622:39;;;6657:1;6654;6647:12;6622:39;6689:2;6685;6681:11;6701:418;6717:6;6712:3;6709:15;6701:418;;;6803:3;6790:17;6839:2;6826:11;6823:19;6820:39;;;6855:1;6852;6845:12;6820:39;6882:20;;6937:2;6929:11;;6925:25;-1:-1:-1;6915:53:13;;6964:1;6961;6954:12;6915:53;6993:83;7068:7;7062:2;7058;7054:11;7041:25;7036:2;7032;7028:11;6993:83;:::i;:::-;6981:96;;-1:-1:-1;7097:12:13;;;;6734;;6701:418;;;-1:-1:-1;7138:5:13;-1:-1:-1;;;7196:2:13;7181:18;;7168:32;;-1:-1:-1;7212:16:13;;;7209:36;;;7241:1;7238;7231:12;7209:36;;;7264:63;7319:7;7308:8;7297:9;7293:24;7264:63;:::i;:::-;7254:73;;;5836:1497;;;;;:::o;7338:347::-;7403:6;7411;7464:2;7452:9;7443:7;7439:23;7435:32;7432:52;;;7480:1;7477;7470:12;7432:52;7503:29;7522:9;7503:29;:::i;:::-;7493:39;;7582:2;7571:9;7567:18;7554:32;7629:5;7622:13;7615:21;7608:5;7605:32;7595:60;;7651:1;7648;7641:12;7595:60;7674:5;7664:15;;;7338:347;;;;;:::o;7690:375::-;7761:8;7771:6;7825:3;7818:4;7810:6;7806:17;7802:27;7792:55;;7843:1;7840;7833:12;7792:55;-1:-1:-1;7866:20:13;;-1:-1:-1;;;;;7898:30:13;;7895:50;;;7941:1;7938;7931:12;7895:50;7978:4;7970:6;7966:17;7954:29;;8038:3;8031:4;8021:6;8018:1;8014:14;8006:6;8002:27;7998:38;7995:47;7992:67;;;8055:1;8052;8045:12;7992:67;7690:375;;;;;:::o;8070:869::-;8213:6;8221;8229;8237;8245;8298:2;8286:9;8277:7;8273:23;8269:32;8266:52;;;8314:1;8311;8304:12;8266:52;8350:9;8337:23;8327:33;;8411:2;8400:9;8396:18;8383:32;-1:-1:-1;;;;;8475:2:13;8467:6;8464:14;8461:34;;;8491:1;8488;8481:12;8461:34;8530:78;8600:7;8591:6;8580:9;8576:22;8530:78;:::i;:::-;8627:8;;-1:-1:-1;8504:104:13;-1:-1:-1;8715:2:13;8700:18;;8687:32;;-1:-1:-1;8731:16:13;;;8728:36;;;8760:1;8757;8750:12;8728:36;;8799:80;8871:7;8860:8;8849:9;8845:24;8799:80;:::i;:::-;8070:869;;;;-1:-1:-1;8070:869:13;;-1:-1:-1;8898:8:13;;8773:106;8070:869;-1:-1:-1;;;8070:869:13:o;8944:667::-;9039:6;9047;9055;9063;9116:3;9104:9;9095:7;9091:23;9087:33;9084:53;;;9133:1;9130;9123:12;9084:53;9156:29;9175:9;9156:29;:::i;:::-;9146:39;;9204:38;9238:2;9227:9;9223:18;9204:38;:::i;:::-;9194:48;;9289:2;9278:9;9274:18;9261:32;9251:42;;9344:2;9333:9;9329:18;9316:32;-1:-1:-1;;;;;9363:6:13;9360:30;9357:50;;;9403:1;9400;9393:12;9357:50;9426:22;;9479:4;9471:13;;9467:27;-1:-1:-1;9457:55:13;;9508:1;9505;9498:12;9457:55;9531:74;9597:7;9592:2;9579:16;9574:2;9570;9566:11;9531:74;:::i;:::-;9521:84;;;8944:667;;;;;;;:::o;9616:260::-;9684:6;9692;9745:2;9733:9;9724:7;9720:23;9716:32;9713:52;;;9761:1;9758;9751:12;9713:52;9784:29;9803:9;9784:29;:::i;:::-;9774:39;;9832:38;9866:2;9855:9;9851:18;9832:38;:::i;:::-;9822:48;;9616:260;;;;;:::o;9881:380::-;9960:1;9956:12;;;;10003;;;10024:61;;10078:4;10070:6;10066:17;10056:27;;10024:61;10131:2;10123:6;10120:14;10100:18;10097:38;10094:161;;10177:10;10172:3;10168:20;10165:1;10158:31;10212:4;10209:1;10202:15;10240:4;10237:1;10230:15;10094:161;;9881:380;;;:::o;10646:273::-;10831:6;10823;10818:3;10805:33;10787:3;10857:16;;10882:13;;;10857:16;10646:273;-1:-1:-1;10646:273:13:o;10924:410::-;11126:2;11108:21;;;11165:2;11145:18;;;11138:30;11204:34;11199:2;11184:18;;11177:62;-1:-1:-1;;;11270:2:13;11255:18;;11248:44;11324:3;11309:19;;10924:410::o;11339:222::-;11404:9;;;11425:10;;;11422:133;;;11477:10;11472:3;11468:20;11465:1;11458:31;11512:4;11509:1;11502:15;11540:4;11537:1;11530:15;11566:127;11627:10;11622:3;11618:20;11615:1;11608:31;11658:4;11655:1;11648:15;11682:4;11679:1;11672:15;11824:518;11926:2;11921:3;11918:11;11915:421;;;11962:5;11959:1;11952:16;12006:4;12003:1;11993:18;12076:2;12064:10;12060:19;12057:1;12053:27;12047:4;12043:38;12112:4;12100:10;12097:20;12094:47;;;-1:-1:-1;12135:4:13;12094:47;12190:2;12185:3;12181:12;12178:1;12174:20;12168:4;12164:31;12154:41;;12245:81;12263:2;12256:5;12253:13;12245:81;;;12322:1;12308:16;;12289:1;12278:13;12245:81;;12518:1345;12644:3;12638:10;-1:-1:-1;;;;;12663:6:13;12660:30;12657:56;;;12693:18;;:::i;:::-;12722:97;12812:6;12772:38;12804:4;12798:11;12772:38;:::i;:::-;12766:4;12722:97;:::i;:::-;12874:4;;12931:2;12920:14;;12948:1;12943:663;;;;13650:1;13667:6;13664:89;;;-1:-1:-1;13719:19:13;;;13713:26;13664:89;-1:-1:-1;;12475:1:13;12471:11;;;12467:24;12463:29;12453:40;12499:1;12495:11;;;12450:57;13766:81;;12913:944;;12943:663;11771:1;11764:14;;;11808:4;11795:18;;-1:-1:-1;;12979:20:13;;;13097:236;13111:7;13108:1;13105:14;13097:236;;;13200:19;;;13194:26;13179:42;;13292:27;;;;13260:1;13248:14;;;;13127:19;;13097:236;;;13101:3;13361:6;13352:7;13349:19;13346:201;;;13422:19;;;13416:26;-1:-1:-1;;13505:1:13;13501:14;;;13517:3;13497:24;13493:37;13489:42;13474:58;13459:74;;13346:201;-1:-1:-1;;;;;13593:1:13;13577:14;;;13573:22;13560:36;;-1:-1:-1;12518:1345:13:o;13868:212::-;13910:3;13948:5;13942:12;13992:6;13985:4;13978:5;13974:16;13969:3;13963:36;14054:1;14018:16;;14043:13;;;-1:-1:-1;14018:16:13;;13868:212;-1:-1:-1;13868:212:13:o;14085:192::-;14216:3;14241:30;14267:3;14259:6;14241:30;:::i;14282:302::-;14459:2;14448:9;14441:21;14422:4;14479:56;14531:2;14520:9;14516:18;14508:6;14479:56;:::i;:::-;14471:64;;14571:6;14566:2;14555:9;14551:18;14544:34;14282:302;;;;;:::o;14589:522::-;14667:4;14673:6;14733:11;14720:25;14827:2;14823:7;14812:8;14796:14;14792:29;14788:43;14768:18;14764:68;14754:96;;14846:1;14843;14836:12;14754:96;14873:33;;14925:20;;;-1:-1:-1;;;;;;14957:30:13;;14954:50;;;15000:1;14997;14990:12;14954:50;15033:4;15021:17;;-1:-1:-1;15064:14:13;15060:27;;;15050:38;;15047:58;;;15101:1;15098;15091:12;15116:1198;-1:-1:-1;;;;;15235:3:13;15232:27;15229:53;;;15262:18;;:::i;:::-;15291:94;15381:3;15341:38;15373:4;15367:11;15341:38;:::i;:::-;15335:4;15291:94;:::i;:::-;15411:1;15436:2;15431:3;15428:11;15453:1;15448:608;;;;16100:1;16117:3;16114:93;;;-1:-1:-1;16173:19:13;;;16160:33;16114:93;-1:-1:-1;;12475:1:13;12471:11;;;12467:24;12463:29;12453:40;12499:1;12495:11;;;12450:57;16220:78;;15421:887;;15448:608;11771:1;11764:14;;;11808:4;11795:18;;-1:-1:-1;;15484:17:13;;;15599:229;15613:7;15610:1;15607:14;15599:229;;;15702:19;;;15689:33;15674:49;;15809:4;15794:20;;;;15762:1;15750:14;;;;15629:12;15599:229;;;15603:3;15856;15847:7;15844:16;15841:159;;;15980:1;15976:6;15970:3;15964;15961:1;15957:11;15953:21;15949:34;15945:39;15932:9;15927:3;15923:19;15910:33;15906:79;15898:6;15891:95;15841:159;;;16043:1;16037:3;16034:1;16030:11;16026:19;16020:4;16013:33;15421:887;;15116:1198;;;:::o;16319:267::-;16408:6;16403:3;16396:19;16460:6;16453:5;16446:4;16441:3;16437:14;16424:43;-1:-1:-1;16512:1:13;16487:16;;;16505:4;16483:27;;;16476:38;;;;16568:2;16547:15;;;-1:-1:-1;;16543:29:13;16534:39;;;16530:50;;16319:267::o;16591:1229::-;16794:2;16846:21;;;16819:18;;;16902:22;;;-1:-1:-1;;16955:2:13;17004:1;17000:14;;;16985:30;;16981:39;;;16940:18;;17043:6;-1:-1:-1;17077:714:13;17091:6;17088:1;17085:13;17077:714;;;17156:22;;;-1:-1:-1;;17152:36:13;17140:49;;17228:20;;17303:14;17299:27;;;-1:-1:-1;;17295:41:13;17271:66;;17261:94;;17351:1;17348;17341:12;17261:94;17381:31;;17486:14;;;;17439:19;-1:-1:-1;;;;;17516:30:13;;17513:50;;;17559:1;17556;17549:12;17513:50;17612:6;17596:14;17592:27;17583:7;17579:41;17576:61;;;17633:1;17630;17623:12;17576:61;17660:51;17704:6;17696;17687:7;17660:51;:::i;:::-;17650:61;-1:-1:-1;;;17769:12:13;;;;17734:15;;;;17113:1;17106:9;17077:714;;;-1:-1:-1;17808:6:13;;16591:1229;-1:-1:-1;;;;;;;16591:1229:13:o;17825:318::-;18012:2;18001:9;17994:21;17975:4;18032:62;18090:2;18079:9;18075:18;18067:6;18059;18032:62;:::i;:::-;18024:70;;18130:6;18125:2;18114:9;18110:18;18103:34;17825:318;;;;;;:::o;18148:267::-;18327:3;18352:57;18378:30;18404:3;18396:6;18378:30;:::i;:::-;18370:6;18352:57;:::i;18420:500::-;-1:-1:-1;;;;;18689:15:13;;;18671:34;;18741:15;;18736:2;18721:18;;18714:43;18788:2;18773:18;;18766:34;;;18836:3;18831:2;18816:18;;18809:31;;;18614:4;;18857:57;;18894:19;;18886:6;18857:57;:::i;:::-;18849:65;18420:500;-1:-1:-1;;;;;;18420:500:13:o;18925:249::-;18994:6;19047:2;19035:9;19026:7;19022:23;19018:32;19015:52;;;19063:1;19060;19053:12;19015:52;19095:9;19089:16;19114:30;19138:5;19114:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1456000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31531",
								"balanceOf(address)": "2652",
								"getApproved(uint256)": "infinite",
								"getCreditSupplyLimit(uint256,string)": "infinite",
								"getCreditTypes(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,string[],uint256[])": "infinite",
								"name()": "infinite",
								"owner()": "2397",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26767",
								"setCreditTypesAndLimits(uint256,string[],uint256[])": "infinite",
								"supportsInterface(bytes4)": "531",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3914,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 697,
									"end": 827,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 697,
									"end": 827,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 697,
									"end": 827,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 697,
									"end": 827,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 743,
									"end": 753,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "139410D39195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E5043"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2847,
									"end": 2898,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 784,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 766,
									"end": 781,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 766,
									"end": 785,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 13,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2701,
									"end": 2904,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2701,
									"end": 2904,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3914,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e30b7d5a594251fbfba1c4a1de4c25049b8833901d14e92e289b3ee7ba5fab6764736f6c63430008190033",
									".code": [
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "7F177D31"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "AF77AF04"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "AF77AF04"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "7F177D31"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "8A605436"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "736DEA81"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 3914,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2487,
											"end": 2664,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 2610,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2610,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2217,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2217,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2217,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1115,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1115,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3070,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3070,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10524,
											"end": 10539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10539,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10506,
											"end": 10540,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10583,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10583,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10619,
											"end": 10634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10619,
											"end": 10634,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10592,
											"end": 10635,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10266,
											"end": 10641,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2715,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2763,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2735,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2775,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2610,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2296,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2337,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2309,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2309,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2217,
											"end": 2345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1324,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1288,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1295,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1324,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1269,
											"end": 1375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1269,
											"end": 1375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1406,
											"end": 1421,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1406,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1406,
											"end": 1425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1406,
											"end": 1425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1406,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1406,
											"end": 1425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1406,
											"end": 1425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1406,
											"end": 1425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1469,
											"end": 1494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1494,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1534,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1534,
											"end": 1552,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1534,
											"end": 1552,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1534,
											"end": 1552,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1609,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1639,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1646,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1668,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1706,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1695,
											"end": 1709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1668,
											"end": 1710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1790,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1772,
											"end": 1793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1752,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1753,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1765,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1766,
											"end": 1767,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1754,
											"end": 1768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 1725,
											"end": 1769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1769,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1793,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1648,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1648,
											"end": 1651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1805,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "AAA3EF9B79AFFD1B4052E81DD38126A7A1DD22345B41B8866FBE06D6C5CB02FE"
										},
										{
											"begin": 1850,
											"end": 1861,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1822,
											"end": 1862,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1862,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 1878,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1915,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1893,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1893,
											"end": 1915,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 1974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F09C4F8065057564478E900E30BEEAA7BE6409E52AD156A4067FDCAB3E9AD5D0"
										},
										{
											"begin": 1976,
											"end": 1987,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1976,
											"end": 1990,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1990,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2010,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1992,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1942,
											"end": 2014,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 2014,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1917,
											"end": 1920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 2026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 2033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 2033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3262,
											"end": 3309,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3262,
											"end": 3309,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 3254,
											"end": 3360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 3254,
											"end": 3360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3419,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 3412,
											"end": 3440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 3412,
											"end": 3440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3412,
											"end": 3440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 3412,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3524,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3524,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3524,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3567,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3567,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3546,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3567,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3567,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3584,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3584,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 3573,
											"end": 3587,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3573,
											"end": 3587,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3573,
											"end": 3587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3546,
											"end": 3588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3668,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3668,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3670,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 3650,
											"end": 3671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3650,
											"end": 3671,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3631,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3643,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3643,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3644,
											"end": 3645,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 3632,
											"end": 3646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3632,
											"end": 3646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3632,
											"end": 3646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3603,
											"end": 3647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3647,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3671,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3526,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3526,
											"end": 3529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3683,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3726,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "AAA3EF9B79AFFD1B4052E81DD38126A7A1DD22345B41B8866FBE06D6C5CB02FE"
										},
										{
											"begin": 3728,
											"end": 3739,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3728,
											"end": 3739,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 3700,
											"end": 3740,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3740,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 3756,
											"end": 3765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3845,
											"end": 3852,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F09C4F8065057564478E900E30BEEAA7BE6409E52AD156A4067FDCAB3E9AD5D0"
										},
										{
											"begin": 3854,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 3867,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 3854,
											"end": 3868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3854,
											"end": 3868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3854,
											"end": 3868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3888,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3888,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 3870,
											"end": 3891,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3891,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 3820,
											"end": 3892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3892,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3795,
											"end": 3798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2487,
											"end": 2664,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2487,
											"end": 2664,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19503,
											"end": 19535,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19503,
											"end": 19535,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19485,
											"end": 19536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19552,
											"end": 19570,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19552,
											"end": 19570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19552,
											"end": 19570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19458,
											"end": 19476,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 19458,
											"end": 19476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 19311,
											"end": 19585,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "266"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "387"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "388"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "389"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "388"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "385"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "387"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "390"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "116"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "390"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "392"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "392"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "266"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "387"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 592,
											"end": 892,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 592,
											"end": 892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 645,
											"end": 648,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 677,
											"end": 689,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 698,
											"end": 717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 748,
											"end": 764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 732,
											"end": 746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 726,
											"end": 773,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 793,
											"end": 809,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 789,
											"end": 816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 782,
											"end": 820,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 849,
											"end": 878,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 840,
											"end": 879,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 836,
											"end": 886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 592,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1009,
											"end": 1013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 1066,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1526,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1831,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 1872,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1901,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2054,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2095,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2107,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2112,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2148,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2230,
											"end": 2232,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2196,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2482,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2296,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2414,
											"end": 2426,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2447,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 3329,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2669,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2749,
											"end": 2755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2820,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2797,
											"end": 2804,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2816,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2789,
											"end": 2821,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2838,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2786,
											"end": 2838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2838,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2786,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2847,
											"end": 2880,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2847,
											"end": 2880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2933,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2935,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 2997,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 2998,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3013,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3049,
											"end": 3055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3056,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3087,
											"end": 3091,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 3065,
											"end": 3120,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3120,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 3065,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3159,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3200,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3250,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3238,
											"end": 3240,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3221,
											"end": 3236,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3214,
											"end": 3251,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3211,
											"end": 3268,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3211,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3211,
											"end": 3268,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3264,
											"end": 3265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3254,
											"end": 3266,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3211,
											"end": 3268,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3211,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3297,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3287,
											"end": 3298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3298,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 3329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 3329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 3329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 3329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 3329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 3329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3334,
											"end": 4148,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3334,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3496,
											"end": 3500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3527,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3597,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3593,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3624,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3660,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3676,
											"end": 3682,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3669,
											"end": 3691,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3774,
											"end": 3780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3772,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3767,
											"end": 3781,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3748,
											"end": 3787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3734,
											"end": 3787,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3734,
											"end": 3787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3822,
											"end": 3824,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3810,
											"end": 3825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3874,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3956,
											"end": 3963,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3944,
											"end": 3953,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3923,
											"end": 3926,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 4032,
											"end": 4038,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4030,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3988,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4039,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3988,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4039,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4077,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4077,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4077,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3890,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3882,
											"end": 3891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3853,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 3334,
											"end": 4148,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 4148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 4153,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4205,
											"end": 4225,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4226,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4249,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4242,
											"end": 4243,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4235,
											"end": 4250,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4274,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4285,
											"end": 4560,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 4285,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4358,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4402,
											"end": 4415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4425,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4441,
											"end": 4475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4441,
											"end": 4475,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4500,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4523,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4435,
											"end": 4523,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 4503,
											"end": 4521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4285,
											"end": 4560,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4285,
											"end": 4560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4565,
											"end": 4747,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 4565,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4624,
											"end": 4628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4649,
											"end": 4655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4646,
											"end": 4676,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4699,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 4643,
											"end": 4699,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 4679,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 4725,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4720,
											"end": 4734,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 4740,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4716,
											"end": 4741,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4716,
											"end": 4741,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4565,
											"end": 4747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 5159,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4752,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4870,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4893,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 4837,
											"end": 4893,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 4873,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4935,
											"end": 4950,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 4950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 4966,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4927,
											"end": 4967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 4911,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4902,
											"end": 4968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4902,
											"end": 4968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4984,
											"end": 4989,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4977,
											"end": 4998,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5031,
											"end": 5034,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5010,
											"end": 5035,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5007,
											"end": 5052,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5007,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 5007,
											"end": 5052,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5048,
											"end": 5049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5050,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5007,
											"end": 5052,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 5007,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5092,
											"end": 5095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5074,
											"end": 5090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5061,
											"end": 5104,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5148,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5133,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5113,
											"end": 5153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 5159,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 5159,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 5159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 5159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 5159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 5159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5164,
											"end": 5831,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 5164,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5218,
											"end": 5223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5264,
											"end": 5268,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5252,
											"end": 5269,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5275,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 5238,
											"end": 5293,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5279,
											"end": 5291,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5293,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 5238,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5332,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5355,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 5391,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 5391,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5433,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5391,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 5375,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5434,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 5375,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5456,
											"end": 5459,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5478,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5468,
											"end": 5483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5508,
											"end": 5512,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5503,
											"end": 5506,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5513,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5513,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5569,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5561,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5557,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5550,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5522,
											"end": 5570,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5522,
											"end": 5570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5596,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5585,
											"end": 5591,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5597,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5610,
											"end": 5611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5608,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5600,
											"end": 5612,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5638,
											"end": 5644,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5671,
											"end": 5674,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5730,
											"end": 5760,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5730,
											"end": 5760,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 5660,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 5825,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5164,
											"end": 5831,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5164,
											"end": 5831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 7333,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 5836,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 5979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6030,
											"end": 6039,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6028,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6040,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6060,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6100,
											"end": 6109,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 6081,
											"end": 6110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6110,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6129,
											"end": 6131,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6182,
											"end": 6184,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6180,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6154,
											"end": 6186,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6244,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6235,
											"end": 6249,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6252,
											"end": 6264,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6300,
											"end": 6306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6298,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6285,
											"end": 6307,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6345,
											"end": 6352,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6338,
											"end": 6342,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6343,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6353,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6365,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6369,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6406,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6442,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 6481,
											"end": 6483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6442,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 6442,
											"end": 6484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6485,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6426,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6534,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6534,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6534,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6601,
											"end": 6602,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6597,
											"end": 6607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6597,
											"end": 6607,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6597,
											"end": 6607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6597,
											"end": 6607,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6613,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6613,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6550,
											"end": 6562,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6550,
											"end": 6562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6550,
											"end": 6562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6550,
											"end": 6562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6644,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6644,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6644,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6657,
											"end": 6658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6647,
											"end": 6659,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6691,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6685,
											"end": 6687,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6692,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6712,
											"end": 6715,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6709,
											"end": 6724,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 6806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6826,
											"end": 6837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6859,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 6820,
											"end": 6859,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6857,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6859,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 6820,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6937,
											"end": 6939,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 6929,
											"end": 6940,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 6940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 6915,
											"end": 6968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6954,
											"end": 6966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6968,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 6915,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 7068,
											"end": 7075,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7064,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7058,
											"end": 7060,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7054,
											"end": 7065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7041,
											"end": 7066,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7036,
											"end": 7038,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7032,
											"end": 7034,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7028,
											"end": 7039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 6993,
											"end": 7076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7076,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 6993,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7077,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7077,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7097,
											"end": 7109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7109,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 6701,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7143,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7196,
											"end": 7198,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7200,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7200,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7212,
											"end": 7228,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7212,
											"end": 7228,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7212,
											"end": 7228,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7245,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 7209,
											"end": 7245,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7239,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7243,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7245,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 7209,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7308,
											"end": 7316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7293,
											"end": 7317,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 7264,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7327,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 7264,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7327,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 7333,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 7333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 7333,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 7333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 7333,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 7333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7685,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 7338,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7403,
											"end": 7409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7432,
											"end": 7484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7432,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7432,
											"end": 7484,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7478,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7432,
											"end": 7484,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7432,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 7522,
											"end": 7531,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 7503,
											"end": 7532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7532,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 7503,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7532,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7586,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7629,
											"end": 7634,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7622,
											"end": 7635,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7636,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7608,
											"end": 7613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7605,
											"end": 7637,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7595,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 7595,
											"end": 7655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7595,
											"end": 7655,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 7595,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7674,
											"end": 7679,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7664,
											"end": 7679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7664,
											"end": 7679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7664,
											"end": 7679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7685,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7685,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7685,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 8065,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 7690,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7761,
											"end": 7769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7828,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7822,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7810,
											"end": 7816,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7806,
											"end": 7823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 7792,
											"end": 7847,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7844,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7845,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7847,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 7792,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7866,
											"end": 7886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7866,
											"end": 7886,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7898,
											"end": 7928,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7898,
											"end": 7928,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7945,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 7895,
											"end": 7945,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7943,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7945,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 7895,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7978,
											"end": 7982,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7970,
											"end": 7976,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 7983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7954,
											"end": 7983,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7954,
											"end": 7983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8038,
											"end": 8041,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8035,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8018,
											"end": 8019,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 8014,
											"end": 8028,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8006,
											"end": 8012,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7995,
											"end": 8042,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8059,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 7992,
											"end": 8059,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8045,
											"end": 8057,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8059,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 7992,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 8065,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 8065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 8065,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 8065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 8065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8213,
											"end": 8219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8227,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8243,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8298,
											"end": 8300,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8286,
											"end": 8295,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8277,
											"end": 8284,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8296,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8301,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8318,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 8266,
											"end": 8318,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8314,
											"end": 8315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8312,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8304,
											"end": 8316,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8318,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 8266,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8350,
											"end": 8359,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8337,
											"end": 8360,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8360,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8411,
											"end": 8413,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8400,
											"end": 8409,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8383,
											"end": 8415,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8475,
											"end": 8477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8467,
											"end": 8473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8464,
											"end": 8478,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8461,
											"end": 8495,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8461,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 8461,
											"end": 8495,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8492,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8489,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8481,
											"end": 8493,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8461,
											"end": 8495,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 8461,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 8600,
											"end": 8607,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8591,
											"end": 8597,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8589,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 8576,
											"end": 8598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 8530,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8608,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 8530,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8627,
											"end": 8635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8627,
											"end": 8635,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8504,
											"end": 8608,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8700,
											"end": 8718,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8687,
											"end": 8719,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8687,
											"end": 8719,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8764,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8728,
											"end": 8764,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8760,
											"end": 8761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8757,
											"end": 8758,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8750,
											"end": 8762,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8764,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8728,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8799,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 8871,
											"end": 8878,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8860,
											"end": 8868,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8849,
											"end": 8858,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8799,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 8799,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8799,
											"end": 8879,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 8799,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8898,
											"end": 8906,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8906,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8879,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8939,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8070,
											"end": 8939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9039,
											"end": 9045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9055,
											"end": 9061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9069,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9119,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9104,
											"end": 9113,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9095,
											"end": 9102,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9091,
											"end": 9114,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9087,
											"end": 9120,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9133,
											"end": 9134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9130,
											"end": 9131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9123,
											"end": 9135,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 9084,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9156,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 9175,
											"end": 9184,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9156,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 9156,
											"end": 9185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9156,
											"end": 9185,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 9156,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9146,
											"end": 9185,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9146,
											"end": 9185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 9238,
											"end": 9240,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9227,
											"end": 9236,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9223,
											"end": 9241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 9204,
											"end": 9242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 9204,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9242,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9291,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9278,
											"end": 9287,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9261,
											"end": 9293,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9293,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9344,
											"end": 9346,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9333,
											"end": 9342,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9329,
											"end": 9347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9316,
											"end": 9348,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9363,
											"end": 9369,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9360,
											"end": 9390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9357,
											"end": 9407,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9357,
											"end": 9407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 9357,
											"end": 9407,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9393,
											"end": 9405,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9357,
											"end": 9407,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 9357,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9471,
											"end": 9484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9471,
											"end": 9484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9467,
											"end": 9494,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 9457,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 9457,
											"end": 9512,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9508,
											"end": 9509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9506,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9498,
											"end": 9510,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9457,
											"end": 9512,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 9457,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9531,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 9597,
											"end": 9604,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9579,
											"end": 9595,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9574,
											"end": 9576,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9566,
											"end": 9577,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9531,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 9531,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9531,
											"end": 9605,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 9531,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9521,
											"end": 9605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9521,
											"end": 9605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9521,
											"end": 9605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9876,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 9616,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9684,
											"end": 9690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9745,
											"end": 9747,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9733,
											"end": 9742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9724,
											"end": 9731,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9743,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9716,
											"end": 9748,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9713,
											"end": 9765,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9713,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 9713,
											"end": 9765,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9761,
											"end": 9762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9758,
											"end": 9759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9751,
											"end": 9763,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9713,
											"end": 9765,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 9713,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 9803,
											"end": 9812,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 9784,
											"end": 9813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9813,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9832,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 9866,
											"end": 9868,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9855,
											"end": 9864,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9832,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 9832,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9832,
											"end": 9870,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 9832,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9822,
											"end": 9870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9822,
											"end": 9870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9876,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9876,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 10261,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 9881,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9960,
											"end": 9961,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9956,
											"end": 9968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 9968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 9968,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 9968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10003,
											"end": 10015,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10003,
											"end": 10015,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10003,
											"end": 10015,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10024,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 10024,
											"end": 10085,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10078,
											"end": 10082,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 10070,
											"end": 10076,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10066,
											"end": 10083,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10083,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10024,
											"end": 10085,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 10024,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10131,
											"end": 10133,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10123,
											"end": 10129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10134,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10100,
											"end": 10118,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10097,
											"end": 10135,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10094,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 10094,
											"end": 10255,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10177,
											"end": 10187,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10172,
											"end": 10175,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10168,
											"end": 10188,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10165,
											"end": 10166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10189,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10216,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10202,
											"end": 10217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10244,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10237,
											"end": 10238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10094,
											"end": 10255,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 10094,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10094,
											"end": 10255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 10261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 10261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 10261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 10261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10646,
											"end": 10919,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 10646,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10831,
											"end": 10837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10823,
											"end": 10829,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10818,
											"end": 10821,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10805,
											"end": 10838,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 10787,
											"end": 10790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10873,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10857,
											"end": 10873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 10895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 10895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 10895,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10857,
											"end": 10873,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10646,
											"end": 10919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10646,
											"end": 10919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11108,
											"end": 11129,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11108,
											"end": 11129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11108,
											"end": 11129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11165,
											"end": 11167,
											"name": "PUSH",
											"source": 13,
											"value": "2E"
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11168,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11204,
											"end": 11238,
											"name": "PUSH",
											"source": 13,
											"value": "43726564697420747970657320616E6420737570706C79206C696D697473206C"
										},
										{
											"begin": 11199,
											"end": 11201,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11184,
											"end": 11202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11184,
											"end": 11202,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11239,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CADCCEE8D040DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11270,
											"end": 11272,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11248,
											"end": 11292,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11327,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11309,
											"end": 11328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 11334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11404,
											"end": 11413,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11404,
											"end": 11413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11404,
											"end": 11413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11435,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11435,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11422,
											"end": 11555,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11422,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 11422,
											"end": 11555,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11477,
											"end": 11487,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 11472,
											"end": 11475,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 11465,
											"end": 11466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11489,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11516,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11509,
											"end": 11510,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11502,
											"end": 11517,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11544,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11537,
											"end": 11538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11530,
											"end": 11545,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11566,
											"end": 11693,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 11566,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11627,
											"end": 11637,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 11622,
											"end": 11625,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 11618,
											"end": 11638,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11608,
											"end": 11639,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11658,
											"end": 11662,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 11655,
											"end": 11656,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11648,
											"end": 11663,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11679,
											"end": 11680,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11672,
											"end": 11687,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11824,
											"end": 12342,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 11824,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11926,
											"end": 11928,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11921,
											"end": 11924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11918,
											"end": 11929,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11915,
											"end": 12336,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11915,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 11915,
											"end": 12336,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11962,
											"end": 11967,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11959,
											"end": 11960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11952,
											"end": 11968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12003,
											"end": 12004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12076,
											"end": 12078,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12064,
											"end": 12074,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12060,
											"end": 12079,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12057,
											"end": 12058,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12053,
											"end": 12080,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 12047,
											"end": 12051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12043,
											"end": 12081,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12116,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12100,
											"end": 12110,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12097,
											"end": 12117,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12141,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 12094,
											"end": 12141,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12135,
											"end": 12139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12141,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 12094,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12190,
											"end": 12192,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12185,
											"end": 12188,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12181,
											"end": 12193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12178,
											"end": 12179,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12174,
											"end": 12194,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 12168,
											"end": 12172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12164,
											"end": 12195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12154,
											"end": 12195,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12154,
											"end": 12195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12245,
											"end": 12326,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 12245,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12263,
											"end": 12265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12256,
											"end": 12261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12253,
											"end": 12266,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12245,
											"end": 12326,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12245,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 12245,
											"end": 12326,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12322,
											"end": 12323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12308,
											"end": 12324,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12308,
											"end": 12324,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12278,
											"end": 12291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12245,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 12245,
											"end": 12326,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12518,
											"end": 13863,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 12518,
											"end": 13863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12644,
											"end": 12647,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12638,
											"end": 12648,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12663,
											"end": 12669,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12660,
											"end": 12690,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12713,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 12657,
											"end": 12713,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 12693,
											"end": 12711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12722,
											"end": 12819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 12812,
											"end": 12818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12772,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 12804,
											"end": 12808,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12798,
											"end": 12809,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12772,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 12772,
											"end": 12810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12772,
											"end": 12810,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 12772,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12766,
											"end": 12770,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12722,
											"end": 12819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 12722,
											"end": 12819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12722,
											"end": 12819,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 12722,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12874,
											"end": 12878,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12874,
											"end": 12878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12931,
											"end": 12933,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12920,
											"end": 12934,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12920,
											"end": 12934,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12948,
											"end": 12949,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12943,
											"end": 13606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 13606,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 12943,
											"end": 13606,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13650,
											"end": 13651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13673,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13753,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 13664,
											"end": 13753,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13719,
											"end": 13738,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13719,
											"end": 13738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13719,
											"end": 13738,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13713,
											"end": 13739,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13753,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 13664,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12475,
											"end": 12476,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12471,
											"end": 12482,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12471,
											"end": 12482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12471,
											"end": 12482,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12467,
											"end": 12491,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 12463,
											"end": 12492,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12453,
											"end": 12493,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12499,
											"end": 12500,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12506,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12506,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12506,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12450,
											"end": 12507,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 13766,
											"end": 13847,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13766,
											"end": 13847,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12913,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 12913,
											"end": 13857,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 13606,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 12943,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12979,
											"end": 12999,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12999,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12999,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13105,
											"end": 13119,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13219,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13219,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13194,
											"end": 13220,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13221,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13319,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13319,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13319,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13261,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13248,
											"end": 13262,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13248,
											"end": 13262,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13248,
											"end": 13262,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13248,
											"end": 13262,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 13097,
											"end": 13333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13101,
											"end": 13104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13361,
											"end": 13367,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13352,
											"end": 13359,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13349,
											"end": 13368,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13346,
											"end": 13547,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13346,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 13346,
											"end": 13547,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13422,
											"end": 13441,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13422,
											"end": 13441,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13422,
											"end": 13441,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13416,
											"end": 13442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13505,
											"end": 13506,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 13501,
											"end": 13515,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13515,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 13497,
											"end": 13521,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13530,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 13489,
											"end": 13531,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13474,
											"end": 13532,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13459,
											"end": 13533,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13459,
											"end": 13533,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13346,
											"end": 13547,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 13346,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13593,
											"end": 13594,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13577,
											"end": 13591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13591,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13573,
											"end": 13595,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13596,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12518,
											"end": 13863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13868,
											"end": 14080,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 13868,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13910,
											"end": 13913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13948,
											"end": 13953,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13942,
											"end": 13954,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13992,
											"end": 13998,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13985,
											"end": 13989,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13978,
											"end": 13983,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13974,
											"end": 13990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13969,
											"end": 13972,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13999,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 14054,
											"end": 14055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14018,
											"end": 14034,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14018,
											"end": 14034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14043,
											"end": 14056,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14043,
											"end": 14056,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14043,
											"end": 14056,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14018,
											"end": 14034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14018,
											"end": 14034,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13868,
											"end": 14080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13868,
											"end": 14080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14085,
											"end": 14277,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 14085,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14216,
											"end": 14219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14241,
											"end": 14271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 14267,
											"end": 14270,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14259,
											"end": 14265,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14241,
											"end": 14271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 14241,
											"end": 14271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14584,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 14282,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14459,
											"end": 14461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14448,
											"end": 14457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14441,
											"end": 14462,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14422,
											"end": 14426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 14531,
											"end": 14533,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14520,
											"end": 14529,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 14514,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 14479,
											"end": 14535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14535,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 14479,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14535,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14571,
											"end": 14577,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14566,
											"end": 14568,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14555,
											"end": 14564,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14551,
											"end": 14569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14544,
											"end": 14578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14584,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14584,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14589,
											"end": 15111,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 14589,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14667,
											"end": 14671,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 14744,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14720,
											"end": 14745,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 14827,
											"end": 14829,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 14823,
											"end": 14830,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 14812,
											"end": 14820,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14796,
											"end": 14810,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14788,
											"end": 14831,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14768,
											"end": 14786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14764,
											"end": 14832,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14754,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 14754,
											"end": 14850,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14846,
											"end": 14847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14844,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14848,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14754,
											"end": 14850,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 14754,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 14906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 14906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 14945,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 14945,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 14945,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14957,
											"end": 14987,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14957,
											"end": 14987,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14954,
											"end": 15004,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14954,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 14954,
											"end": 15004,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15000,
											"end": 15001,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14997,
											"end": 14998,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14990,
											"end": 15002,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14954,
											"end": 15004,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 14954,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15037,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15021,
											"end": 15038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15021,
											"end": 15038,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15064,
											"end": 15078,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 15060,
											"end": 15087,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15060,
											"end": 15087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15060,
											"end": 15087,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15050,
											"end": 15088,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15050,
											"end": 15088,
											"name": "SGT",
											"source": 13
										},
										{
											"begin": 15047,
											"end": 15105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15047,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 15047,
											"end": 15105,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15101,
											"end": 15102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15098,
											"end": 15099,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15091,
											"end": 15103,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15116,
											"end": 16314,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 15116,
											"end": 16314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15235,
											"end": 15238,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15232,
											"end": 15259,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15229,
											"end": 15282,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15229,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 15229,
											"end": 15282,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 15262,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 15262,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15280,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 15262,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 15381,
											"end": 15384,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15341,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 15373,
											"end": 15377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15367,
											"end": 15378,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15341,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 15341,
											"end": 15379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15341,
											"end": 15379,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 15341,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15335,
											"end": 15339,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 15291,
											"end": 15385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15385,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 15291,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15411,
											"end": 15412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15438,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 15431,
											"end": 15434,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15428,
											"end": 15439,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15453,
											"end": 15454,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15448,
											"end": 16056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15448,
											"end": 16056,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15448,
											"end": 16056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 15448,
											"end": 16056,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16100,
											"end": 16101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16117,
											"end": 16120,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16114,
											"end": 16207,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16114,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 16114,
											"end": 16207,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16173,
											"end": 16192,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16173,
											"end": 16192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16173,
											"end": 16192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16160,
											"end": 16193,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 16114,
											"end": 16207,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 16114,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12475,
											"end": 12476,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12471,
											"end": 12482,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12471,
											"end": 12482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12471,
											"end": 12482,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12467,
											"end": 12491,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 12463,
											"end": 12492,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12453,
											"end": 12493,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12499,
											"end": 12500,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12506,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12506,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12506,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12450,
											"end": 12507,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 16220,
											"end": 16298,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16220,
											"end": 16298,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 15421,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 15421,
											"end": 16308,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15448,
											"end": 16056,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 15448,
											"end": 16056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15484,
											"end": 15501,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 15484,
											"end": 15501,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15484,
											"end": 15501,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15613,
											"end": 15620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15611,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15607,
											"end": 15621,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 15721,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 15721,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 15721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15689,
											"end": 15722,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 15674,
											"end": 15723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15674,
											"end": 15723,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 15809,
											"end": 15813,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15814,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15794,
											"end": 15814,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15794,
											"end": 15814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15794,
											"end": 15814,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 15763,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15750,
											"end": 15764,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 15764,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 15764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 15764,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15629,
											"end": 15641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 15599,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15603,
											"end": 15606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15859,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15847,
											"end": 15854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15860,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15841,
											"end": 16000,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15841,
											"end": 16000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 15841,
											"end": 16000,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15980,
											"end": 15981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15976,
											"end": 15982,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 15970,
											"end": 15973,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 15964,
											"end": 15967,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15961,
											"end": 15962,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 15957,
											"end": 15968,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 15953,
											"end": 15974,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15949,
											"end": 15983,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 15945,
											"end": 15984,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 15932,
											"end": 15941,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15927,
											"end": 15930,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 15923,
											"end": 15942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15910,
											"end": 15943,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 15906,
											"end": 15985,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15898,
											"end": 15904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15891,
											"end": 15986,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 15841,
											"end": 16000,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 15841,
											"end": 16000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15841,
											"end": 16000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15841,
											"end": 16000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16044,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16037,
											"end": 16040,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16034,
											"end": 16035,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16030,
											"end": 16041,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16026,
											"end": 16045,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16020,
											"end": 16024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16013,
											"end": 16046,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 15421,
											"end": 16308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15421,
											"end": 16308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15116,
											"end": 16314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15116,
											"end": 16314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15116,
											"end": 16314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15116,
											"end": 16314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16319,
											"end": 16586,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 16319,
											"end": 16586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16408,
											"end": 16414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16403,
											"end": 16406,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16396,
											"end": 16415,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16460,
											"end": 16466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16453,
											"end": 16458,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16446,
											"end": 16450,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16441,
											"end": 16444,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16437,
											"end": 16451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16424,
											"end": 16467,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16512,
											"end": 16513,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16487,
											"end": 16503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16487,
											"end": 16503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16487,
											"end": 16503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16505,
											"end": 16509,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16483,
											"end": 16510,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16483,
											"end": 16510,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16483,
											"end": 16510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16476,
											"end": 16514,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16476,
											"end": 16514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16476,
											"end": 16514,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16476,
											"end": 16514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16568,
											"end": 16570,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16547,
											"end": 16562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16547,
											"end": 16562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16547,
											"end": 16562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16543,
											"end": 16572,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16530,
											"end": 16580,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16530,
											"end": 16580,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16319,
											"end": 16586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16591,
											"end": 17820,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 16591,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16794,
											"end": 16796,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16846,
											"end": 16867,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 16867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 16867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16819,
											"end": 16837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16819,
											"end": 16837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16819,
											"end": 16837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16902,
											"end": 16924,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16902,
											"end": 16924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16902,
											"end": 16924,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16955,
											"end": 16957,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17004,
											"end": 17005,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 17000,
											"end": 17014,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17000,
											"end": 17014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17000,
											"end": 17014,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16985,
											"end": 17015,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16985,
											"end": 17015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16981,
											"end": 17020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16981,
											"end": 17020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16981,
											"end": 17020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16940,
											"end": 16958,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16940,
											"end": 16958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17043,
											"end": 17049,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17091,
											"end": 17097,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17088,
											"end": 17089,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17098,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17156,
											"end": 17178,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17156,
											"end": 17178,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17156,
											"end": 17178,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17152,
											"end": 17188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17140,
											"end": 17189,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17140,
											"end": 17189,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17228,
											"end": 17248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17228,
											"end": 17248,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 17303,
											"end": 17317,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 17299,
											"end": 17326,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 17299,
											"end": 17326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17299,
											"end": 17326,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17295,
											"end": 17336,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17271,
											"end": 17337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17271,
											"end": 17337,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17261,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 17261,
											"end": 17355,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17351,
											"end": 17352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17348,
											"end": 17349,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17341,
											"end": 17353,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17261,
											"end": 17355,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 17261,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17381,
											"end": 17412,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17381,
											"end": 17412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17486,
											"end": 17500,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17486,
											"end": 17500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17486,
											"end": 17500,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17486,
											"end": 17500,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17516,
											"end": 17546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17516,
											"end": 17546,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17563,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 17513,
											"end": 17563,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17559,
											"end": 17560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17556,
											"end": 17557,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17549,
											"end": 17561,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17563,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 17513,
											"end": 17563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17612,
											"end": 17618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17596,
											"end": 17610,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 17592,
											"end": 17619,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17583,
											"end": 17590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17579,
											"end": 17620,
											"name": "SGT",
											"source": 13
										},
										{
											"begin": 17576,
											"end": 17637,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17576,
											"end": 17637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 17576,
											"end": 17637,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17634,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17630,
											"end": 17631,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17623,
											"end": 17635,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17576,
											"end": 17637,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 17576,
											"end": 17637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17660,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 17704,
											"end": 17710,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17696,
											"end": 17702,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17687,
											"end": 17694,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17660,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 17660,
											"end": 17711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17660,
											"end": 17711,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 17660,
											"end": 17711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17711,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17769,
											"end": 17781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17769,
											"end": 17781,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17769,
											"end": 17781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17769,
											"end": 17781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17734,
											"end": 17749,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17734,
											"end": 17749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17734,
											"end": 17749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17734,
											"end": 17749,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17113,
											"end": 17114,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17106,
											"end": 17115,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 17077,
											"end": 17791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17808,
											"end": 17814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17808,
											"end": 17814,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 16591,
											"end": 17820,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16591,
											"end": 17820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18012,
											"end": 18014,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18001,
											"end": 18010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17994,
											"end": 18015,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17975,
											"end": 17979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18032,
											"end": 18094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 18090,
											"end": 18092,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18079,
											"end": 18088,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18075,
											"end": 18093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18067,
											"end": 18073,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18065,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 18032,
											"end": 18094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 18032,
											"end": 18094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18032,
											"end": 18094,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 18032,
											"end": 18094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18024,
											"end": 18094,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18024,
											"end": 18094,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18130,
											"end": 18136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18125,
											"end": 18127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18114,
											"end": 18123,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18110,
											"end": 18128,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18103,
											"end": 18137,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 18143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18148,
											"end": 18415,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 18148,
											"end": 18415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18327,
											"end": 18330,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18352,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 18378,
											"end": 18408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 18404,
											"end": 18407,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18396,
											"end": 18402,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18378,
											"end": 18408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 18378,
											"end": 18408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18378,
											"end": 18408,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 18378,
											"end": 18408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18376,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18352,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 18352,
											"end": 18409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18420,
											"end": 18920,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 18420,
											"end": 18920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18705,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18741,
											"end": 18756,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18741,
											"end": 18756,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18736,
											"end": 18738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18714,
											"end": 18757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18788,
											"end": 18790,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18773,
											"end": 18791,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18773,
											"end": 18791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18766,
											"end": 18800,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18766,
											"end": 18800,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18766,
											"end": 18800,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18836,
											"end": 18839,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 18831,
											"end": 18833,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18816,
											"end": 18834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18816,
											"end": 18834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 18840,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 18840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18809,
											"end": 18840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18614,
											"end": 18618,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18614,
											"end": 18618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18857,
											"end": 18914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 18857,
											"end": 18914,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18894,
											"end": 18913,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18894,
											"end": 18913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18886,
											"end": 18892,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18857,
											"end": 18914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 18857,
											"end": 18914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18857,
											"end": 18914,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 18857,
											"end": 18914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18849,
											"end": 18914,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 18420,
											"end": 18920,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18420,
											"end": 18920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18925,
											"end": 19174,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 18925,
											"end": 19174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18994,
											"end": 19000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19035,
											"end": 19044,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19026,
											"end": 19033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19022,
											"end": 19045,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19018,
											"end": 19050,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19063,
											"end": 19064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19060,
											"end": 19061,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19053,
											"end": 19065,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 19015,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19095,
											"end": 19104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19089,
											"end": 19105,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19114,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 19138,
											"end": 19143,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19114,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 19114,
											"end": 19144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/npc_credits/npcNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getCreditSupplyLimit(uint256,string)": "736dea81",
							"getCreditTypes(uint256)": "7f177d31",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,string[],uint256[])": "8a605436",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setCreditTypesAndLimits(uint256,string[],uint256[])": "af77af04",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"creditType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyLimit\",\"type\":\"uint256\"}],\"name\":\"CreditSupplyLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"creditTypes\",\"type\":\"string[]\"}],\"name\":\"CreditTypesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"creditType\",\"type\":\"string\"}],\"name\":\"getCreditSupplyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCreditTypes\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"creditTypes\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"creditSupplyLimits\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"creditTypes\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"creditSupplyLimits\",\"type\":\"uint256[]\"}],\"name\":\"setCreditTypesAndLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getCreditSupplyLimit(uint256,string)\":{\"details\":\"Get the supply limit for a specific credit type of an NFT.\",\"params\":{\"creditType\":\"The credit type to get the supply limit for.\",\"tokenId\":\"The ID of the NFT.\"},\"returns\":{\"_0\":\"The supply limit for the credit type.\"}},\"getCreditTypes(uint256)\":{\"details\":\"Get the credit types associated with an NFT.\",\"params\":{\"tokenId\":\"The ID of the NFT.\"},\"returns\":{\"_0\":\"The credit types associated with the NFT.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address,string[],uint256[])\":{\"details\":\"Mint a new NFT with credit types and supply limits.\",\"params\":{\"creditSupplyLimits\":\"The supply limits for each credit type.\",\"creditTypes\":\"The types of credits associated with the NFT.\",\"to\":\"The address to mint the NFT to.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setCreditTypesAndLimits(uint256,string[],uint256[])\":{\"details\":\"Set the credit types and supply limits for an NFT.\",\"params\":{\"creditSupplyLimits\":\"The new supply limits for each credit type.\",\"creditTypes\":\"The new types of credits associated with the NFT.\",\"tokenId\":\"The ID of the NFT.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/npc_credits/npcNFT.sol\":\"NPCNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/npc_credits/npcNFT.sol\":{\"keccak256\":\"0xe1c54bb743e8c60583e1fdf77b7585797faa68591bd2bf2d402dce6c15dec077\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8dd4e267394e82c17a0566638610ab85c0173271448ae4b4b21b590a455de3\",\"dweb:/ipfs/QmURUz4gbCcjeLKDQT6QjA8yQHhx3EcUXVJDi3g4YoRXay\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2949,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_creditTypes",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
							},
							{
								"astId": 2955,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_creditSupplyLimits",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))"
							},
							{
								"astId": 2957,
								"contract": "contracts/npc_credits/npcNFT.sol:NPCNFT",
								"label": "_currentTokenId",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string[])",
								"numberOfBytes": "32",
								"value": "t_array(t_string_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(string => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1487,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1486
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							1741
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1457,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1487,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1742,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1741,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1766,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1765,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "804:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1765,
										"src": "813:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "821:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "830:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1741,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "993:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1051:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1067:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1109:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1175:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1191:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1216:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1437:57:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1455:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1393:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1414:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 1293,
									"src": "1381:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1764,
										1776
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1669:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1698:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1718:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1754:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1774:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1456_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1456",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1842:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "1818:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1679:175:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1765,
												"src": "1637:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1777,
												"src": "1645:7:2"
											}
										],
										"src": "1628:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1588:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 1293,
									"src": "1561:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1992:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2002:87:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2027:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2041:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2115:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2098:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1983:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:2"
									},
									"scope": 1293,
									"src": "1920:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2257:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2274:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2267:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2248:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:2"
									},
									"scope": 1293,
									"src": "2185:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2425:29:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2435:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2410:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:2"
									},
									"scope": 1293,
									"src": "2365:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2580:31:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2590:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:2"
									},
									"scope": 1293,
									"src": "2518:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2756:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2799:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2823:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2856:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1554,
																	"src": "2901:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2843:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2741:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:2"
									},
									"scope": 1293,
									"src": "2677:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3240:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3250:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3225:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:2"
									},
									"scope": 1293,
									"src": "3174:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3384:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3416:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3340:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:2"
									},
									"scope": 1293,
									"src": "3323:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3573:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3583:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3623:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3616:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:2"
									},
									"scope": 1293,
									"src": "3497:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3793:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3822:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3846:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3745:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3763:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:2"
									},
									"scope": 1293,
									"src": "3718:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4022:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4039:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4058:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4032:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3954:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3969:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:2"
									},
									"scope": 1293,
									"src": "3928:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4223:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4237:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4233:87:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4255:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4269:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4538:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4583:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4562:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4606:109:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4633:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4675:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4690:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4647:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4179:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:2"
									},
									"scope": 1293,
									"src": "4143:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4863:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "4873:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:2"
									},
									"scope": 1293,
									"src": "4787:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5088:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5111:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5098:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5139:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1293,
									"src": "4985:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5782:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5792:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5773:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:2"
									},
									"scope": 1293,
									"src": "5707:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6017:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6027:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5960:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6008:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:2"
									},
									"scope": 1293,
									"src": "5938:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6485:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6552:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6589:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6596:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6608:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6633:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6495:146:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6479:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:2"
									},
									"scope": 1293,
									"src": "6376:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7179:271:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7215:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7194:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7189:255:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7234:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7252:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7350:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7402:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7411:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7248:186:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7273:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7321:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7108:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7123:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:2"
									},
									"scope": 1293,
									"src": "7082:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8167:78:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8201:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8211:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8223:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:2"
									},
									"scope": 1293,
									"src": "8092:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "8933:700:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "8943:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9031:86:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9055:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9086:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9092:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9098:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9069:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9161:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9157:256:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9181:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9277:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9368:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9378:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9427:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9423:107:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9445:85:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9487:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9497:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9559:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9586:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9592:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9577:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9572:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9615:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8855:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:2"
									},
									"scope": 1293,
									"src": "8838:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10008:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10022:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10018:87:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10040:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10054:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10114:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10146:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10138:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10184:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10180:96:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10213:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10227:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9970:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:2"
									},
									"scope": 1293,
									"src": "9955:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10690:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10710:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10714:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "10700:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10652:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:2"
									},
									"scope": 1293,
									"src": "10633:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11038:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11048:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11111:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11115:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11124:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11076:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10973:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11002:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:2"
									},
									"scope": 1293,
									"src": "10954:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11503:186:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11513:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11591:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11587:96:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11620:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11664:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11634:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11477:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:2"
									},
									"scope": 1293,
									"src": "11462:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12084:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12098:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12094:87:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12116:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12130:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12190:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12222:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12260:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12362:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12358:109:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12385:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12427:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12433:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12442:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12399:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12256:211:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12289:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12333:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12303:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:2"
									},
									"scope": 1293,
									"src": "12013:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13481:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13515:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13491:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13429:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13443:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:2"
									},
									"scope": 1293,
									"src": "13406:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13873:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13899:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "13883:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13950:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13921:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13808:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13820:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13837:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:2"
									},
									"scope": 1293,
									"src": "13771:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14488:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14507:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14511:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14498:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14436:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14448:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14465:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:2"
									},
									"scope": 1293,
									"src": "14418:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "14814:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "14880:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "14876:460:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "14913:423:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "14927:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "14957:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "14943:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15093:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15115:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15124:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15150:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15157:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15133:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15089:142:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15164:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15211:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15249:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15245:81:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15260:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15292:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15299:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15303:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15283:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15373:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14738:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14767:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:2"
									},
									"scope": 1293,
									"src": "14720:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "15684:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15698:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "15694:91:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "15722:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15765:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "15736:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "15794:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "15813:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15820:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15832:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15877:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15887:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15855:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "15850:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15619:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15634:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15652:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:2"
									},
									"scope": 1293,
									"src": "15591:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16210:169:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16220:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16245:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16236:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16267:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16263:88:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16288:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16302:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16367:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16360:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16161:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16201:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:2"
									},
									"scope": 1293,
									"src": "16138:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17020:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17034:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17030:664:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17054:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17168:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17190:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17200:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17200:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17186:130:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17243:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17294:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17153:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:2"
																	},
																	"src": "17144:186:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17359:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17381:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17480:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:2",
																								"nodeType": "YulBlock",
																								"src": "17566:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:2",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:2"
																													},
																													"nativeSrc": "17599:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:2"
																													},
																													"nativeSrc": "17616:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:2"
																											},
																											"nativeSrc": "17592:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:2"
																										},
																										"nativeSrc": "17592:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17377:293:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17401:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17452:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17338:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:2"
																	},
																	"src": "17331:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "17109:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17123:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17129:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17138:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17088:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17072:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17072:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17068:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16964:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16976:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16993:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:2"
									},
									"scope": 1293,
									"src": "16918:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "776:16926:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "107:17596:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 1778,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "287:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								1777
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1410,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1410,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1410,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1410,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1410,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1410,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1410,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1410,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1410,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1428,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1411,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1434,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "357:7:5"
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1410,
								1777
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1456,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1456,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1456,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1486,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1486,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1481,
												"id": 1483,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1486,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2831
						],
						"SignedMath": [
							2936
						],
						"Strings": [
							1741
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2832,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2831,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 2937,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1491,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2936,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1493,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1496,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1494,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1499,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1497,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1498,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1506,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1552,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1515
														],
														"declarations": [
															{
																"constant": false,
																"id": 1515,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1522,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1518,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1516,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2831,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2651,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1524
														],
														"declarations": [
															{
																"constant": false,
																"id": 1524,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1523,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1529,
														"initialValue": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1531
														],
														"declarations": [
															{
																"constant": false,
																"id": 1531,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1552,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1532,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nativeSrc": "930:67:7",
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nativeSrc": "948:35:7",
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:7",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nativeSrc": "967:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1524,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1515,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1531,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1533,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1548,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1535,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:7",
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nativeSrc": "1164:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nativeSrc": "1159:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nativeSrc": "1146:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nativeSrc": "1146:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1496,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1531,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1509,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1538,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1542,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1547,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1546,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1549,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1550,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1513,
														"id": 1551,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1741,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1572,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2936_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2935,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1571,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1562,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1561,
												"id": 1578,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1556,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1741,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1598,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1592,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1590,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2831,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2831_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1588,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1600,
																	1683,
																	1703
																],
																"referencedDeclaration": 1683,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1587,
														"id": 1597,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1741,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"id": 1612,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1603,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1615
												],
												"declarations": [
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1614,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1619,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1625,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1627,
														"indexExpression": {
															"hexValue": "30",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1631,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1633,
														"indexExpression": {
															"hexValue": "31",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1665,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1651,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1653,
																	"indexExpression": {
																		"id": 1652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1654,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1658,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1655,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1661,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"initializationExpression": {
													"assignments": [
														1638
													],
													"declarations": [
														{
															"constant": false,
															"id": 1638,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1666,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1637,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1644,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1640,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1648,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1650,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1671,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1672,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1670,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1674,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1677,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1681,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1741,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1694,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1699,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1691,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1600,
															1683,
															1703
														],
														"referencedDeclaration": 1683,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1701,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1741,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1715,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1713,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1720,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1718,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1727,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1706,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1725,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1724,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1733,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1731,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1730,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1738,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1741,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1742,
							"src": "251:2847:7",
							"usedErrors": [
								1506
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1765
						],
						"IERC165": [
							1777
						]
					},
					"id": 1766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1766,
							"sourceUnit": 1778,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1744,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1747,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "687:7:8"
									},
									"id": 1748,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1765,
							"linearizedBaseContracts": [
								1765,
								1777
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1776
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1777_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1757,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1777",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1762,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1765,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1766,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1777
						]
					},
					"id": 1778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1768,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1777,
							"linearizedBaseContracts": [
								1777
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1770,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1777,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1778,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2831
						]
					},
					"id": 2832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1780,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2831,
							"linearizedBaseContracts": [
								2831
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1783,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1788,
									"members": [
										{
											"id": 1784,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1785,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1786,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1787,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1818,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1801
														],
														"declarations": [
															{
																"constant": false,
																"id": 1801,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1818,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1805,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1806,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1813,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1811,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1799,
															"id": 1812,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1815,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1816,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1799,
														"id": 1817,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2831,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1846,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1833,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1839,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1831,
															"id": 1838,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1841,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1842,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1844,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1831,
														"id": 1845,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2831,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1888,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1867,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1866,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1869
														],
														"declarations": [
															{
																"constant": false,
																"id": 1869,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1888,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1873,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1874,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1875,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1877,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1883,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1859,
															"id": 1882,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1885,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1859,
														"id": 1887,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2831,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1908,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1911,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1912,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1895,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1901,
														"id": 1915,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2831,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1936,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1943,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2831,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1956,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1957,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1960,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1959,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1962,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2831,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1974,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1975,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1973,
												"id": 1980,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2831,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1993,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1995,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1996,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1997,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1999,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1991,
												"id": 2003,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2831,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2015,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2023,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 2022,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2018,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2019,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2014,
															"id": 2021,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2024,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2028,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2037,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2831,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2163,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2052
														],
														"declarations": [
															{
																"constant": false,
																"id": 2052,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2051,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2056,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2054,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2058
														],
														"declarations": [
															{
																"constant": false,
																"id": 2058,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2057,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2059,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2060,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2061,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2069,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2068,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2064,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2052,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2065,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2050,
																	"id": 2067,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2071,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2077,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2076,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2073,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2075,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2080,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2058,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2044,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2081,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2083
														],
														"declarations": [
															{
																"constant": false,
																"id": 2083,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2082,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2086,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2046,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2091,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2092,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2093,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2094,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2097,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2099
														],
														"declarations": [
															{
																"constant": false,
																"id": 2099,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2163,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2106,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2101,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2107,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2110,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2114,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2115,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2118,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2123,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2126,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2146,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2149,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2150,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2157,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2160,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2161,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2050,
														"id": 2162,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2831,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2181
												],
												"declarations": [
													{
														"constant": false,
														"id": 2181,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2207,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"initialValue": {
													"arguments": [
														{
															"id": 2183,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2184,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2185,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2182,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2165,
															2208
														],
														"referencedDeclaration": 2165,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2189,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1788",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2188,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2830,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2192,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2193,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2194,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2191,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2199,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2202,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2205,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2181,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2206,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2173,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2831,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2222,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2221,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2215,
															"id": 2220,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2224
												],
												"declarations": [
													{
														"constant": false,
														"id": 2224,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2319,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2233,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2227,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2226,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2487,
																			2522
																		],
																		"referencedDeclaration": 2487,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2318,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2234,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2235,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2236,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2237,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2240,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2246,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2247,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2248,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2255,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2256,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2257,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2258,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2259,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2262,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2266,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2268,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2269,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2270,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2273,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2277,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2278,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2279,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2280,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2281,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2284,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2289,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2290,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2291,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2292,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2295,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2300,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2301,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2224,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2302,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2303,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2310,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2312,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2313,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2314,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2311,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2215,
														"id": 2317,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2831,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2353,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2332
														],
														"declarations": [
															{
																"constant": false,
																"id": 2332,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2353,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2336,
														"initialValue": {
															"arguments": [
																{
																	"id": 2334,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2333,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2320,
																	2355
																],
																"referencedDeclaration": 2320,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2337,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2339,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2326,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2338,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2341,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2342,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2332,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2344,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2323,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2330,
														"id": 2352,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2324,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2831,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2486,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"hexValue": "30",
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2483,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2380,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2396,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2395,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2390,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2397,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2411,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2410,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2402,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2412,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2426,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2425,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2420,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2421,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2424,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2441,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2440,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2432,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2435,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2439,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2442,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2456,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2455,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2450,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2451,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2454,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2457,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2471,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2470,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2465,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2466,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2469,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2472,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2482,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2481,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2364,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2480,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2484,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2364,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2485,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2831,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2520,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2499
														],
														"declarations": [
															{
																"constant": false,
																"id": 2499,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2520,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2498,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2503,
														"initialValue": {
															"arguments": [
																{
																	"id": 2501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2500,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2487,
																	2522
																],
																"referencedDeclaration": 2487,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2504,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2506,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2493,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2505,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2510,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2509,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2499,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2511,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2497,
														"id": 2519,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2491,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2831,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2531
												],
												"declarations": [
													{
														"constant": false,
														"id": 2531,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2650,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2533,
												"initialValue": {
													"hexValue": "30",
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2647,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2534,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2549,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2567,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2566,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2562,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2568,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2583,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2579,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2585,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2601,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2600,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2618,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2617,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2613,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2616,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2619,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2646,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2645,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2648,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2531,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2529,
												"id": 2649,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2831,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2684,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2663
														],
														"declarations": [
															{
																"constant": false,
																"id": 2663,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2684,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2667,
														"initialValue": {
															"arguments": [
																{
																	"id": 2665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2664,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2651,
																	2686
																],
																"referencedDeclaration": 2651,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2668,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2663,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2670,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2669,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2674,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2672,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2673,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2663,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2675,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2654,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2661,
														"id": 2683,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2652,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2655,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2831,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2695
												],
												"declarations": [
													{
														"constant": false,
														"id": 2695,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2772,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2697,
												"initialValue": {
													"hexValue": "30",
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2769,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2712,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2711,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2727,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2726,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2757,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2756,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2758,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2768,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2767,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2770,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2695,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2693,
												"id": 2771,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2831,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2809,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2785
														],
														"declarations": [
															{
																"constant": false,
																"id": 2785,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2809,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2784,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2789,
														"initialValue": {
															"arguments": [
																{
																	"id": 2787,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2776,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2786,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2773,
																	2811
																],
																"referencedDeclaration": 2773,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2790,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2785,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2792,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2779,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1788",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2791,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2830,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1788_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2794,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2797,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2795,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2785,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2796,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2798,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2800,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2776,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2783,
														"id": 2808,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2777,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2831,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2822,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1788",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2820,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2828,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1788",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2813,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1788,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1788,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1788",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2831,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2832,
							"src": "203:14914:10",
							"usedErrors": [
								1783
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2936
						]
					},
					"id": 2937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2834,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2936,
							"linearizedBaseContracts": [
								2936
							],
							"name": "SignedMath",
							"nameLocation": "224:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2851,
										"nodeType": "Block",
										"src": "376:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2844,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "393:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2845,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "397:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2848,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:11",
													"trueExpression": {
														"id": 2847,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2837,
														"src": "401:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2843,
												"id": 2850,
												"nodeType": "Return",
												"src": "386:20:11"
											}
										]
									},
									"documentation": {
										"id": 2835,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "325:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2836,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "335:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2838,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:11"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2852,
												"src": "368:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2841,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:11"
									},
									"scope": 2936,
									"src": "312:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "555:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2862,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2855,
															"src": "572:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2863,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "576:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2866,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "584:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:11",
													"trueExpression": {
														"id": 2865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2861,
												"id": 2868,
												"nodeType": "Return",
												"src": "565:20:11"
											}
										]
									},
									"documentation": {
										"id": 2853,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "504:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2854,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "514:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2856,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:11"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "547:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:11"
									},
									"scope": 2936,
									"src": "491:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "797:162:11",
										"statements": [
											{
												"assignments": [
													2881
												],
												"declarations": [
													{
														"constant": false,
														"id": 2881,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "859:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2880,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2894,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2882,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2883,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2875,
																	"src": "875:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2886,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "882:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2887,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "886:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2895,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "911:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2900,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2881,
																						"src": "931:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2899,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2898,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2896,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2905,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "945:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2906,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "949:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2908,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2910,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2879,
												"id": 2912,
												"nodeType": "Return",
												"src": "904:48:11"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "746:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2872,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "756:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:11"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "789:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2877,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:11"
									},
									"scope": 2936,
									"src": "729:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "1103:158:11",
										"statements": [
											{
												"id": 2933,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2924,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1228:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:11",
																		"subExpression": {
																			"id": 2928,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "1242:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:11",
																	"trueExpression": {
																		"id": 2927,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2917,
																		"src": "1237:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2922,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2921,
														"id": 2932,
														"nodeType": "Return",
														"src": "1213:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2915,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1061:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2916,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:11"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1094:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:11"
									},
									"scope": 2936,
									"src": "1048:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2937,
							"src": "216:1047:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:11"
				},
				"id": 11
			},
			"contracts/npc_credits/npcNFT.sol": {
				"ast": {
					"absolutePath": "contracts/npc_credits/npcNFT.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC165": [
							1765
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							1777
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1456
						],
						"IERC721Receiver": [
							1428
						],
						"NPCNFT": [
							3212
						],
						"Ownable": [
							147
						],
						"Strings": [
							1741
						]
					},
					"id": 3213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 1294,
							"src": "60:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 148,
							"src": "119:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2941,
										"name": "ERC721",
										"nameLocations": [
											"194:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "194:6:12"
									},
									"id": 2942,
									"nodeType": "InheritanceSpecifier",
									"src": "194:6:12"
								},
								{
									"baseName": {
										"id": 2943,
										"name": "Ownable",
										"nameLocations": [
											"202:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "202:7:12"
									},
									"id": 2944,
									"nodeType": "InheritanceSpecifier",
									"src": "202:7:12"
								}
							],
							"canonicalName": "NPCNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3212,
							"linearizedBaseContracts": [
								3212,
								147,
								1293,
								237,
								1456,
								1410,
								1765,
								1777,
								1486
							],
							"name": "NPCNFT",
							"nameLocation": "184:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2949,
									"mutability": "mutable",
									"name": "_creditTypes",
									"nameLocation": "287:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "250:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => string[])"
									},
									"typeName": {
										"id": 2948,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2945,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "258:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "250:28:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => string[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2946,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "269:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 2947,
											"nodeType": "ArrayTypeName",
											"src": "269:8:12",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2955,
									"mutability": "mutable",
									"name": "_creditSupplyLimits",
									"nameLocation": "401:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "346:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(string => uint256))"
									},
									"typeName": {
										"id": 2954,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2950,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "354:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "346:46:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(string => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2953,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2951,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "373:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"nodeType": "Mapping",
											"src": "365:26:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
												"typeString": "mapping(string => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2952,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "383:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2957,
									"mutability": "mutable",
									"name": "_currentTokenId",
									"nameLocation": "491:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "475:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "aaa3ef9b79affd1b4052e81dd38126a7a1dd22345b41b8866fbe06d6c5cb02fe",
									"id": 2964,
									"name": "CreditTypesUpdated",
									"nameLocation": "521:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2959,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "556:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "540:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2962,
												"indexed": false,
												"mutability": "mutable",
												"name": "creditTypes",
												"nameLocation": "574:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "565:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2960,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "565:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2961,
													"nodeType": "ArrayTypeName",
													"src": "565:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:47:12"
									},
									"src": "515:72:12"
								},
								{
									"anonymous": false,
									"eventSelector": "f09c4f8065057564478e900e30beeaa7be6409e52ad156a4067fdcab3e9ad5d0",
									"id": 2972,
									"name": "CreditSupplyLimitUpdated",
									"nameLocation": "599:24:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "640:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "624:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2968,
												"indexed": false,
												"mutability": "mutable",
												"name": "creditType",
												"nameLocation": "656:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "649:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "649:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"indexed": false,
												"mutability": "mutable",
												"name": "supplyLimit",
												"nameLocation": "676:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "668:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:65:12"
									},
									"src": "593:96:12"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "755:72:12",
										"statements": [
											{
												"expression": {
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2983,
														"name": "_currentTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "766:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "784:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "766:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2986,
												"nodeType": "ExpressionStatement",
												"src": "766:19:12"
											}
										]
									},
									"id": 2988,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e50434e4654",
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "718:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ea01adfdbe7c13839f426e70d3c8a5ffcacd1eef079ffdc5106f6b5f3476cd96",
														"typeString": "literal_string \"NPCNFT\""
													},
													"value": "NPCNFT"
												},
												{
													"hexValue": "4e5043",
													"id": 2976,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "728:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e32ea7ee9280bc16c4af51d3ca51b33a0006fcbb109ae4dd75e54cd3018e2a96",
														"typeString": "literal_string \"NPC\""
													},
													"value": "NPC"
												}
											],
											"id": 2977,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2974,
												"name": "ERC721",
												"nameLocations": [
													"711:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "711:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "711:23:12"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2979,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "743:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "747:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "743:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2981,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2978,
												"name": "Ownable",
												"nameLocations": [
													"735:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "735:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "735:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:2:12"
									},
									"returnParameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:12"
									},
									"scope": 3212,
									"src": "697:130:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3088,
										"nodeType": "Block",
										"src": "1258:775:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3003,
																	"name": "creditTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2994,
																	"src": "1277:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1289:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1277:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3005,
																	"name": "creditSupplyLimits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2997,
																	"src": "1299:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 3006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1318:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1299:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1277:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726564697420747970657320616e6420737570706c79206c696d697473206c656e677468206d69736d61746368",
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1326:48:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cb6a5a9896aee21175869d21ed4d91ef4be1b4b6e0dabc3887c3e2a19cd06d7",
																"typeString": "literal_string \"Credit types and supply limits length mismatch\""
															},
															"value": "Credit types and supply limits length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cb6a5a9896aee21175869d21ed4d91ef4be1b4b6e0dabc3887c3e2a19cd06d7",
																"typeString": "literal_string \"Credit types and supply limits length mismatch\""
															}
														],
														"id": 3002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1269:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1269:106:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3010,
												"nodeType": "ExpressionStatement",
												"src": "1269:106:12"
											},
											{
												"assignments": [
													3012
												],
												"declarations": [
													{
														"constant": false,
														"id": 3012,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1396:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 3088,
														"src": "1388:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1388:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3016,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3013,
														"name": "_currentTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "1406:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1424:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1406:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1388:37:12"
											},
											{
												"expression": {
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3017,
														"name": "_currentTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "1469:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3018,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3012,
														"src": "1487:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1469:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3020,
												"nodeType": "ExpressionStatement",
												"src": "1469:25:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3022,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2991,
															"src": "1540:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3023,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3012,
															"src": "1544:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3021,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "1534:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1534:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3025,
												"nodeType": "ExpressionStatement",
												"src": "1534:18:12"
											},
											{
												"body": {
													"id": 3058,
													"nodeType": "Block",
													"src": "1653:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3041,
																			"name": "creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2994,
																			"src": "1695:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 3043,
																		"indexExpression": {
																			"id": 3042,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3027,
																			"src": "1707:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1695:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3037,
																			"name": "_creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2949,
																			"src": "1668:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => string storage ref[] storage ref)"
																			}
																		},
																		"id": 3039,
																		"indexExpression": {
																			"id": 3038,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3012,
																			"src": "1681:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1668:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																			"typeString": "string storage ref[] storage ref"
																		}
																	},
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1690:4:12",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1668:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
																		"typeString": "function (string storage ref[] storage pointer,string storage ref)"
																	}
																},
																"id": 3044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1668:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3045,
															"nodeType": "ExpressionStatement",
															"src": "1668:42:12"
														},
														{
															"expression": {
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3046,
																			"name": "_creditSupplyLimits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2955,
																			"src": "1725:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(string memory => uint256))"
																			}
																		},
																		"id": 3051,
																		"indexExpression": {
																			"id": 3047,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3012,
																			"src": "1745:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1725:28:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																			"typeString": "mapping(string memory => uint256)"
																		}
																	},
																	"id": 3052,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3048,
																			"name": "creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2994,
																			"src": "1754:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 3050,
																		"indexExpression": {
																			"id": 3049,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3027,
																			"src": "1766:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1754:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1725:44:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3053,
																		"name": "creditSupplyLimits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2997,
																		"src": "1772:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3055,
																	"indexExpression": {
																		"id": 3054,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3027,
																		"src": "1791:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1772:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1725:68:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3057,
															"nodeType": "ExpressionStatement",
															"src": "1725:68:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3030,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3027,
														"src": "1624:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3031,
															"name": "creditTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2994,
															"src": "1628:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 3032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1640:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1628:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1624:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3059,
												"initializationExpression": {
													"assignments": [
														3027
													],
													"declarations": [
														{
															"constant": false,
															"id": 3027,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1617:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3059,
															"src": "1609:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3026,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1609:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3029,
													"initialValue": {
														"hexValue": "30",
														"id": 3028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1621:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1609:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1648:3:12",
														"subExpression": {
															"id": 3034,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3027,
															"src": "1648:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3036,
													"nodeType": "ExpressionStatement",
													"src": "1648:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1604:201:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3061,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3012,
															"src": "1841:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3062,
															"name": "creditTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2994,
															"src": "1850:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														],
														"id": 3060,
														"name": "CreditTypesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "1822:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory[] memory)"
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1822:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3064,
												"nodeType": "EmitStatement",
												"src": "1817:45:12"
											},
											{
												"body": {
													"id": 3086,
													"nodeType": "Block",
													"src": "1922:104:12",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3077,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3012,
																		"src": "1967:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3078,
																			"name": "creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2994,
																			"src": "1976:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 3080,
																		"indexExpression": {
																			"id": 3079,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3066,
																			"src": "1988:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1976:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3081,
																			"name": "creditSupplyLimits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2997,
																			"src": "1992:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 3083,
																		"indexExpression": {
																			"id": 3082,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3066,
																			"src": "2011:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1992:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3076,
																	"name": "CreditSupplyLimitUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2972,
																	"src": "1942:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,string memory,uint256)"
																	}
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1942:72:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3085,
															"nodeType": "EmitStatement",
															"src": "1937:77:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3069,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "1893:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3070,
															"name": "creditTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2994,
															"src": "1897:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 3071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1909:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1897:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1893:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3087,
												"initializationExpression": {
													"assignments": [
														3066
													],
													"declarations": [
														{
															"constant": false,
															"id": 3066,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1886:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3087,
															"src": "1878:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3065,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1878:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3068,
													"initialValue": {
														"hexValue": "30",
														"id": 3067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1890:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1878:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1917:3:12",
														"subExpression": {
															"id": 3073,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "1917:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3075,
													"nodeType": "ExpressionStatement",
													"src": "1917:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1873:153:12"
											}
										]
									},
									"documentation": {
										"id": 2989,
										"nodeType": "StructuredDocumentation",
										"src": "835:274:12",
										"text": " @dev Mint a new NFT with credit types and supply limits.\n @param to The address to mint the NFT to.\n @param creditTypes The types of credits associated with the NFT.\n @param creditSupplyLimits The supply limits for each credit type."
									},
									"functionSelector": "8a605436",
									"id": 3089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2999,
												"name": "onlyOwner",
												"nameLocations": [
													"1248:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1248:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1248:9:12"
										}
									],
									"name": "mint",
									"nameLocation": "1124:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1147:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "1139:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "creditTypes",
												"nameLocation": "1176:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "1160:27:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 2992,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1160:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 2993,
													"nodeType": "ArrayTypeName",
													"src": "1160:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "creditSupplyLimits",
												"nameLocation": "1215:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "1198:35:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2995,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1198:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2996,
													"nodeType": "ArrayTypeName",
													"src": "1198:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:112:12"
									},
									"returnParameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:12"
									},
									"scope": 3212,
									"src": "1115:918:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3102,
										"nodeType": "Block",
										"src": "2298:47:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3098,
														"name": "_creditTypes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "2316:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => string storage ref[] storage ref)"
														}
													},
													"id": 3100,
													"indexExpression": {
														"id": 3099,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3092,
														"src": "2329:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2316:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 3097,
												"id": 3101,
												"nodeType": "Return",
												"src": "2309:28:12"
											}
										]
									},
									"documentation": {
										"id": 3090,
										"nodeType": "StructuredDocumentation",
										"src": "2041:170:12",
										"text": " @dev Get the credit types associated with an NFT.\n @param tokenId The ID of the NFT.\n @return The credit types associated with the NFT."
									},
									"functionSelector": "7f177d31",
									"id": 3103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCreditTypes",
									"nameLocation": "2226:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2249:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3103,
												"src": "2241:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2240:17:12"
									},
									"returnParameters": {
										"id": 3097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3103,
												"src": "2281:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3094,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2281:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3095,
													"nodeType": "ArrayTypeName",
													"src": "2281:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:17:12"
									},
									"scope": 3212,
									"src": "2217:128:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3119,
										"nodeType": "Block",
										"src": "2717:66:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3113,
															"name": "_creditSupplyLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2955,
															"src": "2735:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(string memory => uint256))"
															}
														},
														"id": 3115,
														"indexExpression": {
															"id": 3114,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3106,
															"src": "2755:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2735:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 3117,
													"indexExpression": {
														"id": 3116,
														"name": "creditType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "2764:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2735:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3112,
												"id": 3118,
												"nodeType": "Return",
												"src": "2728:47:12"
											}
										]
									},
									"documentation": {
										"id": 3104,
										"nodeType": "StructuredDocumentation",
										"src": "2353:251:12",
										"text": " @dev Get the supply limit for a specific credit type of an NFT.\n @param tokenId The ID of the NFT.\n @param creditType The credit type to get the supply limit for.\n @return The supply limit for the credit type."
									},
									"functionSelector": "736dea81",
									"id": 3120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCreditSupplyLimit",
									"nameLocation": "2619:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2648:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "2640:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2640:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "creditType",
												"nameLocation": "2673:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "2657:26:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2657:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2639:45:12"
									},
									"returnParameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "2708:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:9:12"
									},
									"scope": 3212,
									"src": "2610:173:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3210,
										"nodeType": "Block",
										"src": "3243:668:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3135,
																	"name": "creditTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3126,
																	"src": "3262:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "string calldata[] calldata"
																	}
																},
																"id": 3136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3274:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3262:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3137,
																	"name": "creditSupplyLimits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3129,
																	"src": "3284:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3303:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3284:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3262:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726564697420747970657320616e6420737570706c79206c696d697473206c656e677468206d69736d61746368",
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:48:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cb6a5a9896aee21175869d21ed4d91ef4be1b4b6e0dabc3887c3e2a19cd06d7",
																"typeString": "literal_string \"Credit types and supply limits length mismatch\""
															},
															"value": "Credit types and supply limits length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cb6a5a9896aee21175869d21ed4d91ef4be1b4b6e0dabc3887c3e2a19cd06d7",
																"typeString": "literal_string \"Credit types and supply limits length mismatch\""
															}
														],
														"id": 3134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3254:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:106:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3142,
												"nodeType": "ExpressionStatement",
												"src": "3254:106:12"
											},
											{
												"expression": {
													"id": 3146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3412:28:12",
													"subExpression": {
														"baseExpression": {
															"id": 3143,
															"name": "_creditTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2949,
															"src": "3419:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
																"typeString": "mapping(uint256 => string storage ref[] storage ref)"
															}
														},
														"id": 3145,
														"indexExpression": {
															"id": 3144,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "3432:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3419:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3147,
												"nodeType": "ExpressionStatement",
												"src": "3412:28:12"
											},
											{
												"body": {
													"id": 3180,
													"nodeType": "Block",
													"src": "3531:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3163,
																			"name": "creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3126,
																			"src": "3573:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "string calldata[] calldata"
																			}
																		},
																		"id": 3165,
																		"indexExpression": {
																			"id": 3164,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "3585:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3159,
																			"name": "_creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2949,
																			"src": "3546:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => string storage ref[] storage ref)"
																			}
																		},
																		"id": 3161,
																		"indexExpression": {
																			"id": 3160,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3123,
																			"src": "3559:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3546:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																			"typeString": "string storage ref[] storage ref"
																		}
																	},
																	"id": 3162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3568:4:12",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3546:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
																		"typeString": "function (string storage ref[] storage pointer,string storage ref)"
																	}
																},
																"id": 3166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3546:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3167,
															"nodeType": "ExpressionStatement",
															"src": "3546:42:12"
														},
														{
															"expression": {
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3168,
																			"name": "_creditSupplyLimits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2955,
																			"src": "3603:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(string memory => uint256))"
																			}
																		},
																		"id": 3173,
																		"indexExpression": {
																			"id": 3169,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3123,
																			"src": "3623:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3603:28:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																			"typeString": "mapping(string memory => uint256)"
																		}
																	},
																	"id": 3174,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3170,
																			"name": "creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3126,
																			"src": "3632:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "string calldata[] calldata"
																			}
																		},
																		"id": 3172,
																		"indexExpression": {
																			"id": 3171,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "3644:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3632:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3603:44:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3175,
																		"name": "creditSupplyLimits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3129,
																		"src": "3650:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 3177,
																	"indexExpression": {
																		"id": 3176,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3149,
																		"src": "3669:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3650:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3603:68:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3179,
															"nodeType": "ExpressionStatement",
															"src": "3603:68:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3152,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3149,
														"src": "3502:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3153,
															"name": "creditTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "3506:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "string calldata[] calldata"
															}
														},
														"id": 3154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3518:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3506:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3502:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3181,
												"initializationExpression": {
													"assignments": [
														3149
													],
													"declarations": [
														{
															"constant": false,
															"id": 3149,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3495:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3181,
															"src": "3487:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3148,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3487:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3151,
													"initialValue": {
														"hexValue": "30",
														"id": 3150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3499:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3487:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3526:3:12",
														"subExpression": {
															"id": 3156,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3149,
															"src": "3526:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3158,
													"nodeType": "ExpressionStatement",
													"src": "3526:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3482:201:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3183,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "3719:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3184,
															"name": "creditTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "3728:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "string calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "string calldata[] calldata"
															}
														],
														"id": 3182,
														"name": "CreditTypesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "3700:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory[] memory)"
														}
													},
													"id": 3185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3700:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3186,
												"nodeType": "EmitStatement",
												"src": "3695:45:12"
											},
											{
												"body": {
													"id": 3208,
													"nodeType": "Block",
													"src": "3800:104:12",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3199,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3123,
																		"src": "3845:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3200,
																			"name": "creditTypes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3126,
																			"src": "3854:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "string calldata[] calldata"
																			}
																		},
																		"id": 3202,
																		"indexExpression": {
																			"id": 3201,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3188,
																			"src": "3866:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3854:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3203,
																			"name": "creditSupplyLimits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3129,
																			"src": "3870:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 3205,
																		"indexExpression": {
																			"id": 3204,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3188,
																			"src": "3889:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3870:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3198,
																	"name": "CreditSupplyLimitUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2972,
																	"src": "3820:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,string memory,uint256)"
																	}
																},
																"id": 3206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3820:72:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3207,
															"nodeType": "EmitStatement",
															"src": "3815:77:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3191,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3188,
														"src": "3771:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3192,
															"name": "creditTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "3775:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "string calldata[] calldata"
															}
														},
														"id": 3193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3787:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3775:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3771:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3209,
												"initializationExpression": {
													"assignments": [
														3188
													],
													"declarations": [
														{
															"constant": false,
															"id": 3188,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3764:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3209,
															"src": "3756:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3187,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3756:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3190,
													"initialValue": {
														"hexValue": "30",
														"id": 3189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3768:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3756:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3795:3:12",
														"subExpression": {
															"id": 3195,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3188,
															"src": "3795:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3197,
													"nodeType": "ExpressionStatement",
													"src": "3795:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3751:153:12"
											}
										]
									},
									"documentation": {
										"id": 3121,
										"nodeType": "StructuredDocumentation",
										"src": "2791:273:12",
										"text": " @dev Set the credit types and supply limits for an NFT.\n @param tokenId The ID of the NFT.\n @param creditTypes The new types of credits associated with the NFT.\n @param creditSupplyLimits The new supply limits for each credit type."
									},
									"functionSelector": "af77af04",
									"id": 3211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3132,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3131,
												"name": "onlyOwner",
												"nameLocations": [
													"3233:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3233:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3233:9:12"
										}
									],
									"name": "setCreditTypesAndLimits",
									"nameLocation": "3079:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3121:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "3113:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3113:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "creditTypes",
												"nameLocation": "3157:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "3139:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3124,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3139:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3125,
													"nodeType": "ArrayTypeName",
													"src": "3139:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "creditSupplyLimits",
												"nameLocation": "3198:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "3179:37:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3127,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3179:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3128,
													"nodeType": "ArrayTypeName",
													"src": "3179:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3102:121:12"
									},
									"returnParameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:0:12"
									},
									"scope": 3212,
									"src": "3070:841:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3213,
							"src": "175:3739:12",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327,
								2964,
								2972
							]
						}
					],
					"src": "33:3883:12"
				},
				"id": 12
			}
		}
	}
}